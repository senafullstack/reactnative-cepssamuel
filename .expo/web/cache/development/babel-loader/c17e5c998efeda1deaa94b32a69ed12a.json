{"ast":null,"code":"import { DIGIT, ALPHA, ALPHANUM } from \"./constants\";\n\nfunction addPlaceholder(output, index, placeholder) {\n  for (var newIndex = index; newIndex < output.length; newIndex++) {\n    if (output[newIndex] === DIGIT || output[newIndex] === ALPHA || output[newIndex] === ALPHANUM) {\n      output[newIndex] = placeholder;\n    }\n  }\n\n  return output;\n}\n\nexport default addPlaceholder;","map":{"version":3,"sources":["addPlaceholder.ts"],"names":["newIndex","output"],"mappings":"AAAA,SAAA,KAAA,EAAA,KAAA,EAAA,QAAA;;AASA,SAAA,cAAA,CAAA,MAAA,EAAA,KAAA,EAAA,WAAA,EAIY;AACV,OAAK,IAAIA,QAAQ,GAAjB,KAAA,EAA2BA,QAAQ,GAAGC,MAAM,CAA5C,MAAA,EAAqDD,QAArD,EAAA,EAAiE;AAC/D,QACEC,MAAM,CAANA,QAAM,CAANA,KAAAA,KAAAA,IACAA,MAAM,CAANA,QAAM,CAANA,KADAA,KAAAA,IAEAA,MAAM,CAANA,QAAM,CAANA,KAHF,QAAA,EAIE;AAEAA,MAAAA,MAAM,CAANA,QAAM,CAANA,GAAAA,WAAAA;AACD;AACF;;AACD,SAAA,MAAA;AACD;;AAED,eAAA,cAAA","sourcesContent":["import { DIGIT, ALPHA, ALPHANUM } from './constants'\n\n/**\n * function addPlaceholder\n * @param {string[]} output\n * @param {number} index\n * @param {string} placeholder\n * @returns {string[]}\n */\nfunction addPlaceholder(\n  output: string[],\n  index: number,\n  placeholder: string\n): string[] {\n  for (let newIndex = index; newIndex < output.length; newIndex++) {\n    if (\n      output[newIndex] === DIGIT ||\n      output[newIndex] === ALPHA ||\n      output[newIndex] === ALPHANUM\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      output[newIndex] = placeholder\n    }\n  }\n  return output\n}\n\nexport default addPlaceholder\n"]},"metadata":{},"sourceType":"module"}