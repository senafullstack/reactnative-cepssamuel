{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pagesexternas\\\\PageBlocoInformes.tsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Globais from \"../Configs/Globais\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      titulo = _ref.titulo;\n  useEffect(function () {\n    carregarimagens();\n  }, []);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dados = _useState4[0],\n      setDados = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      carregando = _useState6[0],\n      setCarregando = _useState6[1];\n\n  function carregarimagens() {\n    var url = Globais.url + \"informes\";\n    setCarregando(true);\n    fetch(url).then(function (resp) {\n      return resp.json();\n    }).then(function (json) {\n      var resultado = json.data.data;\n      setDados(resultado);\n    }).catch(function (e) {\n      alert(\"erro\" + e);\n    }).finally(function () {\n      setCarregando(false);\n    });\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    containerStyle: {\n      width: \"95%\",\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Title, {\n    style: {\n      color: \"#43C1C4\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Informes\"), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), carregando ? React.createElement(View, {\n    style: {\n      width: Globais.percentuallargura(85),\n      height: Globais.percentualaltura(85),\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    animating: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  })) : dados.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate(\"PageVerinformeexterno\", {\n          informacoes: item\n        });\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: {\n        width: \"100%\",\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 0.2\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: Globais.urladmin + item.foto\n      },\n      style: {\n        width: \"100%\",\n        height: Globais.percentualaltura(8)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: {\n        margin: 2,\n        flex: 0.8,\n        justifyContent: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.titulo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, item.titulo), React.createElement(Text, {\n      style: {\n        color: \"#F38DAD\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, item.datanoticiaFormatada))), React.createElement(Card.Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }));\n  }))));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: StatusBar.currentHeight\n  },\n  titulo: {\n    color: \"#43C1C4\",\n    fontSize: 13\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pagesexternas/PageBlocoInformes.tsx"],"names":["React","useEffect","useState","Card","Globais","navigation","titulo","carregarimagens","modalVisible","setModalVisible","dados","setDados","carregando","setCarregando","url","fetch","then","resp","json","resultado","data","catch","e","alert","finally","styles","scrollView","flexDirection","justifyContent","alignItems","width","borderRadius","color","percentuallargura","height","percentualaltura","map","item","index","navigate","informacoes","flex","uri","urladmin","foto","margin","datanoticiaFormatada","StyleSheet","create","container","paddingTop","StatusBar","currentHeight","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { Input, Card, Button } from \"react-native-elements\";\r\n\r\nimport {\r\n  View,\r\n  Modal,\r\n  StatusBar,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  Image,\r\n  Text,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Globais from \"../Configs/Globais\";\r\nimport Banner from \"./Banner\";\r\n\r\nexport default ({ navigation, titulo }) => {\r\n  useEffect(() => {\r\n    carregarimagens();\r\n  }, []);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [dados, setDados] = useState([]);\r\n  const [carregando, setCarregando] = useState(false);\r\n\r\n  function carregarimagens() {\r\n    var url = Globais.url + \"informes\";\r\n    setCarregando(true);\r\n\r\n    fetch(url)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        const resultado = json.data.data;\r\n        setDados(resultado);\r\n        // console.log(resultado);\r\n      })\r\n      .catch((e) => {\r\n        alert(\"erro\" + e);\r\n      })\r\n      .finally(() => {\r\n        setCarregando(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.scrollView}>\r\n      <View\r\n        style={{\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Card containerStyle={{ width: \"95%\", borderRadius: 10 }}>\r\n          <Card.Title style={{ color: \"#43C1C4\" }}>Informes</Card.Title>\r\n          <Card.Divider />\r\n\r\n          {carregando ? (\r\n            <View\r\n              style={{\r\n                width: Globais.percentuallargura(85),\r\n                height: Globais.percentualaltura(85),\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <ActivityIndicator size=\"large\" animating={true} />\r\n            </View>\r\n          ) : (\r\n            dados.map((item, index) => (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  navigation.navigate(\"PageVerinformeexterno\", {\r\n                    informacoes: item,\r\n                  });\r\n                }}\r\n                key={index}\r\n              >\r\n                <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                  <View style={{ flex: 0.2 }}>\r\n                    <Image\r\n                      source={{ uri: Globais.urladmin + item.foto }}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: Globais.percentualaltura(8),\r\n                      }}\r\n                    />\r\n                  </View>\r\n                  <View\r\n                    style={{ margin: 2, flex: 0.8, justifyContent: \"center\" }}\r\n                  >\r\n                    <Text style={styles.titulo}>{item.titulo}</Text>\r\n                    <Text style={{ color: \"#F38DAD\" }}>\r\n                      {item.datanoticiaFormatada}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n                <Card.Divider />\r\n              </TouchableOpacity>\r\n            ))\r\n          )}\r\n        </Card>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n  },\r\n\r\n  titulo: {\r\n    color: \"#43C1C4\",\r\n    fontSize: 13,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}