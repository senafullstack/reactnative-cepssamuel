{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"../constants\");\n\nfunction WebViewPlaceholder() {\n  if (typeof __DEV__ === 'boolean' && __DEV__) {\n    console.warn('One of your renderers is attempting to use WebView component, which has not been ' + \"provided as a prop to the RenderHtml component. As a consequence, the element won't be rendered.\");\n  }\n\n  return null;\n}\n\nvar defaultSharedProps = {\n  bypassAnonymousTPhrasingNodes: true,\n  debug: false,\n  defaultTextProps: {\n    selectable: false,\n    allowFontScaling: true\n  },\n  defaultViewProps: {},\n  enableExperimentalBRCollapsing: false,\n  enableExperimentalGhostLinesPrevention: false,\n  enableExperimentalMarginCollapsing: false,\n  computeEmbeddedMaxWidth: function computeEmbeddedMaxWidth(contentWidth) {\n    return contentWidth;\n  },\n  WebView: WebViewPlaceholder,\n  defaultWebViewProps: {},\n  pressableHightlightColor: _constants.DEFAULT_PRESSABLE_RIPPLE_COLOR,\n  provideEmbeddedHeaders: undefined,\n  GenericPressable: undefined,\n  customListStyleSpecs: undefined\n};\nvar _default = defaultSharedProps;\nexports.default = _default;","map":{"version":3,"sources":["defaultSharedProps.ts"],"names":["console","defaultSharedProps","bypassAnonymousTPhrasingNodes","debug","defaultTextProps","selectable","allowFontScaling","defaultViewProps","enableExperimentalBRCollapsing","enableExperimentalGhostLinesPrevention","enableExperimentalMarginCollapsing","computeEmbeddedMaxWidth","contentWidth","WebView","defaultWebViewProps","pressableHightlightColor","DEFAULT_PRESSABLE_RIPPLE_COLOR","provideEmbeddedHeaders","GenericPressable","customListStyleSpecs","undefined"],"mappings":";;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,gBAAA;;AAGA,SAAA,kBAAA,GAA8B;AAE5B,MAAI,OAAA,OAAA,KAAA,SAAA,IAAJ,OAAA,EAA6C;AAC3CA,IAAAA,OAAO,CAAPA,IAAAA,CACE,sFADFA,kGAAAA;AAID;;AACD,SAAA,IAAA;AACD;;AAED,IAAMC,kBAAgD,GAAG;AACvDC,EAAAA,6BAA6B,EAD0B,IAAA;AAEvDC,EAAAA,KAAK,EAFkD,KAAA;AAGvDC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,UAAU,EADM,KAAA;AAEhBC,IAAAA,gBAAgB,EAAE;AAFF,GAHqC;AAOvDC,EAAAA,gBAAgB,EAPuC,EAAA;AAQvDC,EAAAA,8BAA8B,EARyB,KAAA;AASvDC,EAAAA,sCAAsC,EATiB,KAAA;AAUvDC,EAAAA,kCAAkC,EAVqB,KAAA;AAWvDC,EAAAA,uBAAuB,EAAGC,iCAAAA,YAAD;AAAA,WAX8B,YAW9B;AAAA,GAX8B;AAYvDC,EAAAA,OAAO,EAZgD,kBAAA;AAavDC,EAAAA,mBAAmB,EAboC,EAAA;AAcvDC,EAAAA,wBAAwB,EAAEC,UAAAA,CAd6B,8BAAA;AAevDC,EAAAA,sBAAsB,EAfiC,SAAA;AAgBvDC,EAAAA,gBAAgB,EAhBuC,SAAA;AAiBvDC,EAAAA,oBAAoB,EAAEC;AAjBiC,CAAzD;eAoBenB,kB","sourcesContent":["import { DEFAULT_PRESSABLE_RIPPLE_COLOR } from '../constants';\nimport { RenderHTMLAmbiantSharedProps } from '../shared-types';\n\nfunction WebViewPlaceholder() {\n  /* istanbul ignore else */\n  if (typeof __DEV__ === 'boolean' && __DEV__) {\n    console.warn(\n      'One of your renderers is attempting to use WebView component, which has not been ' +\n        \"provided as a prop to the RenderHtml component. As a consequence, the element won't be rendered.\"\n    );\n  }\n  return null;\n}\n\nconst defaultSharedProps: RenderHTMLAmbiantSharedProps = {\n  bypassAnonymousTPhrasingNodes: true,\n  debug: false,\n  defaultTextProps: {\n    selectable: false,\n    allowFontScaling: true\n  },\n  defaultViewProps: {},\n  enableExperimentalBRCollapsing: false,\n  enableExperimentalGhostLinesPrevention: false,\n  enableExperimentalMarginCollapsing: false,\n  computeEmbeddedMaxWidth: (contentWidth) => contentWidth,\n  WebView: WebViewPlaceholder,\n  defaultWebViewProps: {},\n  pressableHightlightColor: DEFAULT_PRESSABLE_RIPPLE_COLOR,\n  provideEmbeddedHeaders: undefined,\n  GenericPressable: undefined,\n  customListStyleSpecs: undefined\n};\n\nexport default defaultSharedProps;\n"]},"metadata":{},"sourceType":"script"}