{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LongColorCSSPropertyValidator = void 0;\n\nvar _LongForgivingCSSPropertyValidator = require(\"./LongForgivingCSSPropertyValidator\");\n\nvar COLOR_REGEX = /^(rgb|rgba|hsl|hsla)\\([\\d,%. ]+\\)|[#]?\\w+$/;\n\nvar LongColorCSSPropertyValidator = function (_LongForgivingCSSProp) {\n  _inherits(LongColorCSSPropertyValidator, _LongForgivingCSSProp);\n\n  var _super = _createSuper(LongColorCSSPropertyValidator);\n\n  function LongColorCSSPropertyValidator() {\n    _classCallCheck(this, LongColorCSSPropertyValidator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LongColorCSSPropertyValidator, [{\n    key: \"normalizeRawInlineCSSValue\",\n    value: function normalizeRawInlineCSSValue(value) {\n      return value.match(COLOR_REGEX) ? value : null;\n    }\n  }]);\n\n  return LongColorCSSPropertyValidator;\n}(_LongForgivingCSSPropertyValidator.LongForgivingCSSPropertyValidator);\n\nexports.LongColorCSSPropertyValidator = LongColorCSSPropertyValidator;","map":{"version":3,"sources":["LongColorCSSPropertyValidator.ts"],"names":["COLOR_REGEX","LongForgivingCSSPropertyValidator","normalizeRawInlineCSSValue","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,kCAAA,GAAA,OAAA,uCAAA;;AAGA,IAAMA,WAAW,GAAjB,4CAAA;;IAEO,6B;;;;;;;;;;;;;WAGLE,oCAA0B,KAA1BA,EAAyD;AACvD,aAAOC,KAAK,CAALA,KAAAA,CAAAA,WAAAA,IAAAA,KAAAA,GAAP,IAAA;AACD;;;;EAHOF,kCAAAA,CAFH,iC","sourcesContent":["import { LongForgivingCSSPropertyValidator } from './LongForgivingCSSPropertyValidator';\nimport { CSSPropertyModel } from './types';\n\nconst COLOR_REGEX = /^(rgb|rgba|hsl|hsla)\\([\\d,%. ]+\\)|[#]?\\w+$/;\n\nexport class LongColorCSSPropertyValidator<\n  C extends CSSPropertyModel\n> extends LongForgivingCSSPropertyValidator<C> {\n  normalizeRawInlineCSSValue(value: string): string | null {\n    return value.match(COLOR_REGEX) ? value : null;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}