{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\reactnative\\\\AppRh\\\\Pages\\\\PageLogin.tsx\";\n\nimport React, { useState } from \"react\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input, Card, Button } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Globais from \"../Configs/Globais\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      titulo = _ref.titulo;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setemail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      senha = _useState4[0],\n      setsenha = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dados = _useState6[0],\n      setDados = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mensagem = _useState8[0],\n      setMensagem = _useState8[1];\n\n  var requestPost = {\n    method: \"POST\",\n    body: JSON.stringify({\n      email: email,\n      senha: senha\n    })\n  };\n\n  function logincandidato() {\n    fetch(Globais.url + \"candidato/login\", requestPost).then(function (resp) {\n      return resp.json();\n    }).then(function (json) {\n      console.log(json.login);\n      var dadosretorno = json.login;\n      console.log(dadosretorno.message);\n\n      if (dadosretorno.message === \"error\") {} else {\n        Globais.nomeusuario = dadosretorno.nome;\n        Globais.emailusuario = dadosretorno.email;\n        Globais.logado = true;\n        Globais.token = dadosretorno.token;\n        Globais.fotousuario = dadosretorno.foto;\n        localStorage.setItem(\"nomeusuario\", dadosretorno.nome);\n        localStorage.setItem(\"emailusuario\", dadosretorno.email);\n        localStorage.setItem(\"fotousuario\", dadosretorno.foto);\n        localStorage.setItem(\"logado\", \"true\");\n        localStorage.setItem(\"token\", dadosretorno.token);\n        setDados(json.login);\n        navigation.navigate(\"TabHome\");\n      }\n    }).catch(function (e) {\n      alert(\"erro\" + e);\n    }).finally(function () {\n      alert(\"fim\");\n    });\n  }\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Card.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, Globais.nomeusuario, \" \", email), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(texto) {\n      setemail(texto);\n    },\n    value: email,\n    placeholder: \"Email\",\n    leftIcon: {\n      type: \"font-awesome\",\n      name: \"user\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    secureTextEntry: true,\n    placeholder: \"Senha\",\n    value: senha,\n    onChangeText: function onChangeText(texto) {\n      setsenha(texto);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return logincandidato();\n    },\n    icon: React.createElement(Icon, {\n      name: \"arrow-right\",\n      size: 15,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }),\n    title: \"Entrar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      width: \"100%\",\n      height: 15,\n      alignContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Mensagem\"))));\n});","map":{"version":3,"sources":["C:/xampp/htdocs/reactnative/AppRh/Pages/PageLogin.tsx"],"names":["React","useState","Icon","Input","Card","Button","Globais","navigation","titulo","email","setemail","senha","setsenha","dados","setDados","mensagem","setMensagem","requestPost","method","body","JSON","stringify","logincandidato","fetch","url","then","resp","json","console","log","login","dadosretorno","message","nomeusuario","nome","emailusuario","logado","token","fotousuario","foto","localStorage","setItem","navigate","catch","e","alert","finally","texto","type","name","width","height","alignContent","alignItems","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { Input, Card, Button } from \"react-native-elements\";\r\nimport { View, Text } from \"react-native\";\r\nimport Globais from \"../Configs/Globais\";\r\n\r\nexport default ({ navigation, titulo }) => {\r\n  const [email, setemail] = useState(\"\");\r\n  const [senha, setsenha] = useState(\"\");\r\n  const [dados, setDados] = useState([]);\r\n  const [mensagem, setMensagem] = useState([]);\r\n  var requestPost = {\r\n    method: \"POST\",\r\n\r\n    body: JSON.stringify({\r\n      email: email,\r\n      senha: senha,\r\n    }),\r\n  };\r\n\r\n  function logincandidato() {\r\n    fetch(Globais.url + \"candidato/login\", requestPost)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        console.log(json.login);\r\n        let dadosretorno = json.login;\r\n        console.log(dadosretorno.message);\r\n        if (dadosretorno.message === \"error\") {\r\n        } else {\r\n          Globais.nomeusuario = dadosretorno.nome;\r\n          Globais.emailusuario = dadosretorno.email;\r\n          Globais.logado = true;\r\n          Globais.token = dadosretorno.token;\r\n          Globais.fotousuario = dadosretorno.foto;\r\n          localStorage.setItem(\"nomeusuario\", dadosretorno.nome);\r\n          localStorage.setItem(\"emailusuario\", dadosretorno.email);\r\n          localStorage.setItem(\"fotousuario\", dadosretorno.foto);\r\n          localStorage.setItem(\"logado\", \"true\");\r\n          localStorage.setItem(\"token\", dadosretorno.token);\r\n\r\n          setDados(json.login);\r\n          navigation.navigate(\"TabHome\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        alert(\"erro\" + e);\r\n      })\r\n      .finally(() => {\r\n        alert(\"fim\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Card>\r\n        <Card.Title>\r\n          {Globais.nomeusuario} {email}\r\n        </Card.Title>\r\n        <Card.Divider />\r\n        <Input\r\n          onChangeText={(texto) => {\r\n            setemail(texto);\r\n          }}\r\n          value={email}\r\n          placeholder=\"Email\"\r\n          leftIcon={{ type: \"font-awesome\", name: \"user\" }}\r\n        />\r\n\r\n        <Input\r\n          secureTextEntry={true}\r\n          placeholder=\"Senha\"\r\n          value={senha}\r\n          onChangeText={(texto) => {\r\n            setsenha(texto);\r\n          }}\r\n          leftIcon={<Icon name=\"lock\" size={24} color=\"black\" />}\r\n        />\r\n        <Button\r\n          onPress={() => logincandidato()}\r\n          icon={<Icon name=\"arrow-right\" size={15} color=\"white\" />}\r\n          title=\"Entrar\"\r\n        />\r\n        <View\r\n          style={{\r\n            width: \"100%\",\r\n            height: 15,\r\n\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: 20,\r\n              color: \"red\",\r\n            }}\r\n          >\r\n            Mensagem\r\n          </Text>\r\n        </View>\r\n      </Card>\r\n    </View>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}