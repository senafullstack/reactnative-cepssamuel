{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapNodeList = mapNodeList;\nexports.bindChildren = bindChildren;\nexports.translateNode = translateNode;\nexports.translateDocument = translateDocument;\n\nvar _TTextCtor = require(\"../tree/TTextCtor\");\n\nvar _TPhrasingCtor = require(\"../tree/TPhrasingCtor\");\n\nvar _TBlockCtor = require(\"../tree/TBlockCtor\");\n\nvar _TDocumentImpl = require(\"../tree/TDocumentImpl\");\n\nvar _domUtils = require(\"../dom/dom-utils\");\n\nvar _TEmptyCtor = require(\"../tree/TEmptyCtor\");\n\nfunction mapNodeList(_ref) {\n  var nodeList = _ref.nodeList,\n      parent = _ref.parent,\n      parentStyles = _ref.parentStyles,\n      params = _ref.params;\n  var nextMap = [];\n\n  for (var i in nodeList) {\n    var child = nodeList[i];\n    var translated = translateNode({\n      node: child,\n      parentStyles: parentStyles,\n      params: params,\n      nodeIndex: Number(i),\n      parent: parent\n    });\n\n    if (translated) {\n      nextMap.push(translated);\n    }\n  }\n\n  return nextMap;\n}\n\nfunction bindChildren(node, children, params) {\n  if (!node.elementModel || !node.elementModel.isOpaque) {\n    node.bindChildren(mapNodeList({\n      nodeList: children,\n      parent: node,\n      params: params\n    }));\n  }\n}\n\nfunction translateElement(_ref2) {\n  var node = _ref2.node,\n      nodeIndex = _ref2.nodeIndex,\n      params = _ref2.params,\n      parent = _ref2.parent,\n      parentStyles = _ref2.parentStyles;\n  var tagName = node.tagName;\n  var sharedProps = {\n    nodeIndex: nodeIndex,\n    parentStyles: parentStyles,\n    context: params,\n    domNode: node,\n    parent: parent\n  };\n  var elementModel = params.modelRegistry.getElementModelFromTagName(tagName);\n\n  if (!elementModel) {\n    return new _TEmptyCtor.TEmptyCtor(_objectSpread(_objectSpread({}, sharedProps), {}, {\n      isUnregistered: true,\n      elementModel: elementModel,\n      domNode: node\n    }));\n  }\n\n  if (elementModel.isTranslatableTextual()) {\n    if (node.children.length === 1) {\n      var child = node.children[0];\n\n      if ((0, _domUtils.isDomText)(child)) {\n        return new _TTextCtor.TTextCtor(_objectSpread(_objectSpread({}, sharedProps), {}, {\n          elementModel: elementModel,\n          textNode: child,\n          domNode: node\n        }));\n      }\n    } else if (node.children.length === 0) {\n      return new _TTextCtor.TTextCtor(_objectSpread(_objectSpread({}, sharedProps), {}, {\n        elementModel: elementModel,\n        domNode: node,\n        textNode: new _domUtils.Text('')\n      }));\n    }\n\n    var phrasing = new _TPhrasingCtor.TPhrasingCtor(_objectSpread(_objectSpread({}, sharedProps), {}, {\n      domNode: node,\n      elementModel: elementModel\n    }));\n    bindChildren(phrasing, node.children, params);\n    return phrasing;\n  }\n\n  if (elementModel.isTranslatableBlock()) {\n    var block = new _TBlockCtor.TBlockCtor(_objectSpread(_objectSpread({}, sharedProps), {}, {\n      elementModel: elementModel,\n      parentStyles: parentStyles,\n      domNode: node\n    }));\n    bindChildren(block, node.children, params);\n    return block;\n  }\n\n  return new _TEmptyCtor.TEmptyCtor(_objectSpread(_objectSpread({}, sharedProps), {}, {\n    isUnregistered: false,\n    elementModel: elementModel,\n    domNode: node\n  }));\n}\n\nfunction translateNode(_ref3) {\n  var node = _ref3.node,\n      parentStyles = _ref3.parentStyles,\n      params = _ref3.params,\n      nodeIndex = _ref3.nodeIndex,\n      parent = _ref3.parent;\n\n  if ((0, _domUtils.isDomText)(node)) {\n    return new _TTextCtor.TTextCtor({\n      textNode: node,\n      context: params,\n      parentStyles: parentStyles,\n      domNode: null,\n      elementModel: null,\n      nodeIndex: nodeIndex,\n      parent: parent\n    });\n  }\n\n  if ((0, _domUtils.isDomElement)(node)) {\n    return translateElement({\n      node: node,\n      parentStyles: parentStyles,\n      params: params,\n      nodeIndex: nodeIndex,\n      parent: parent\n    });\n  }\n\n  return null;\n}\n\nfunction translateDocument(document, params) {\n  var tdoc = new _TDocumentImpl.TDocumentCtor({\n    context: params,\n    styles: params.baseStyles,\n    domNode: document\n  });\n  bindChildren(tdoc, document.children, params);\n  tdoc.parseChildren();\n  return tdoc;\n}","map":{"version":3,"sources":["translate.ts"],"names":["params","nextMap","child","nodeList","translated","translateNode","node","parentStyles","nodeIndex","Number","parent","mapNodeList","tagName","sharedProps","context","domNode","elementModel","TEmptyCtor","isUnregistered","TTextCtor","textNode","Text","phrasing","TPhrasingCtor","bindChildren","block","TBlockCtor","translateElement","tdoc","TDocumentCtor","styles","document"],"mappings":"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","sourcesContent":["import { TNodeImpl, TNodeInit } from '../tree/tree-types';\nimport { Document } from 'domhandler';\nimport { TTextCtor } from '../tree/TTextCtor';\nimport { TPhrasingCtor } from '../tree/TPhrasingCtor';\nimport { TBlockCtor } from '../tree/TBlockCtor';\nimport { TDocumentCtor, TDocumentImpl } from '../tree/TDocumentImpl';\nimport { isDomElement, isDomText, Element, Node, Text } from '../dom/dom-utils';\nimport { TStyles } from '../styles/TStyles';\n\nimport { TEmptyCtor } from '../tree/TEmptyCtor';\nimport { DataFlowParams } from './types';\n\nexport function mapNodeList({\n  nodeList,\n  parent,\n  parentStyles,\n  params\n}: {\n  nodeList: Node[];\n  parentStyles?: TStyles;\n  parent: TNodeImpl | null;\n  params: DataFlowParams;\n}): TNodeImpl[] {\n  const nextMap: TNodeImpl[] = [];\n  for (const i in nodeList) {\n    const child = nodeList[i];\n    const translated = translateNode({\n      node: child,\n      parentStyles,\n      params,\n      nodeIndex: Number(i),\n      parent\n    });\n    if (translated) {\n      nextMap.push(translated);\n    }\n  }\n  return nextMap;\n}\n\nexport function bindChildren(\n  node: TNodeImpl,\n  children: Node[],\n  params: DataFlowParams\n) {\n  if (!node.elementModel || !node.elementModel.isOpaque) {\n    node.bindChildren(\n      mapNodeList({\n        nodeList: children,\n        parent: node,\n        params\n      })\n    );\n  }\n}\n\nfunction translateElement({\n  node,\n  nodeIndex,\n  params,\n  parent,\n  parentStyles\n}: TranslateParams<Element>): TNodeImpl | null {\n  const tagName = node.tagName;\n  const sharedProps: Omit<TNodeInit, 'contentModel' | 'elementModel'> = {\n    nodeIndex,\n    parentStyles,\n    context: params,\n    domNode: node,\n    parent\n  };\n  const elementModel = params.modelRegistry.getElementModelFromTagName(tagName);\n  if (!elementModel) {\n    return new TEmptyCtor({\n      ...sharedProps,\n      isUnregistered: true,\n      elementModel,\n      domNode: node\n    });\n  }\n  if (elementModel.isTranslatableTextual()) {\n    if (node.children.length === 1) {\n      const child = node.children[0] as Node;\n      if (isDomText(child)) {\n        return new TTextCtor({\n          ...sharedProps,\n          elementModel,\n          textNode: child,\n          domNode: node\n        });\n      }\n    } else if (node.children.length === 0) {\n      return new TTextCtor({\n        ...sharedProps,\n        elementModel,\n        domNode: node,\n        textNode: new Text('')\n      });\n    }\n    const phrasing = new TPhrasingCtor({\n      ...sharedProps,\n      domNode: node,\n      elementModel\n    });\n    bindChildren(phrasing, node.children, params);\n    return phrasing;\n  }\n  if (elementModel.isTranslatableBlock()) {\n    const block = new TBlockCtor({\n      ...sharedProps,\n      elementModel,\n      parentStyles,\n      domNode: node\n    });\n    bindChildren(block, node.children, params);\n    return block;\n  }\n  return new TEmptyCtor({\n    ...sharedProps,\n    isUnregistered: false,\n    elementModel,\n    domNode: node\n  });\n}\n\ninterface TranslateParams<T = Node> {\n  node: T;\n  params: DataFlowParams;\n  parent: TNodeImpl | null;\n  parentStyles?: TStyles;\n  nodeIndex?: number;\n}\n\nexport function translateNode({\n  node,\n  parentStyles,\n  params,\n  nodeIndex,\n  parent\n}: TranslateParams<Node | null>): TNodeImpl | null {\n  if (isDomText(node)) {\n    return new TTextCtor({\n      textNode: node,\n      context: params,\n      parentStyles,\n      domNode: null,\n      elementModel: null,\n      nodeIndex,\n      parent\n    });\n  }\n  if (isDomElement(node)) {\n    return translateElement({\n      node,\n      parentStyles,\n      params,\n      nodeIndex,\n      parent\n    });\n  }\n  return null;\n}\n\nexport function translateDocument(\n  document: Document,\n  params: DataFlowParams\n): TDocumentImpl {\n  const tdoc = new TDocumentCtor({\n    context: params,\n    styles: params.baseStyles,\n    domNode: document as any\n  });\n  bindChildren(tdoc, document.children, params);\n  tdoc.parseChildren();\n  return tdoc;\n}\n"]},"metadata":{},"sourceType":"script"}