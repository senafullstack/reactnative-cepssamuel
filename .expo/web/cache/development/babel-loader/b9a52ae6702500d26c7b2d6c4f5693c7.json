{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ceps\\\\Appcolegio\\\\Pagesexternas\\\\PageVerSeries.tsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Card } from \"react-native-elements\";\nimport RenderHtml from \"react-native-render-html\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Globais from \"../Configs/Globais\";\nexport default (function (_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation,\n      titulo = _ref.titulo;\n  useEffect(function () {\n    console.log(\"AQUI TA MASSA\");\n    carregardados(informacoes.id_curso);\n    console.log(informacoes.id_curso);\n  }, []);\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dados = _useState4[0],\n      setDados = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      carregando = _useState6[0],\n      setCarregando = _useState6[1];\n\n  var tamanho = Dimensions.get(\"window\").width;\n  var informacoes = route.params.informacoes;\n\n  function carregardados(id) {\n    var url = Globais.url + \"series/\" + id;\n    setCarregando(true);\n    fetch(url).then(function (resp) {\n      return resp.json();\n    }).then(function (json) {\n      var resultado = json.data.data;\n      setDados(resultado);\n    }).catch(function (e) {\n      alert(\"erro\" + e);\n    }).finally(function () {\n      setCarregando(false);\n    });\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, carregando ? React.createElement(View, {\n    style: {\n      width: Globais.percentuallargura(85),\n      height: Globais.percentualaltura(85),\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    animating: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })) : React.createElement(Card, {\n    containerStyle: {\n      width: \"95%\",\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, React.createElement(Card.Title, {\n    style: {\n      color: \"#43C1C4\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"PageInicioApp\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    style: {\n      color: \"#F38DAD\",\n      fontSize: 22\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, \" \", dados.serie)))), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      Globais.Download(Globais.urladmin + dados.foto);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, React.createElement(Card.Image, {\n    style: {\n      width: \"100%\"\n    },\n    source: {\n      uri: Globais.urladmin + dados.foto\n    },\n    resizeMode: \"contain\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), React.createElement(RenderHtml, {\n    contentWidth: width,\n    source: {\n      html: dados.texto != \"\" ? \"<span>\" + dados.texto + \"</span>\" : \"<b>semconteudo</b>\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }))));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: StatusBar.currentHeight\n  },\n  scrollView: {\n    marginHorizontal: 0\n  },\n  text: {\n    fontSize: 42\n  },\n  titulo: {\n    color: \"#43C1C4\",\n    fontSize: 20\n  },\n  a: {\n    fontWeight: \"300\",\n    color: \"#FF3366\"\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/ceps/Appcolegio/Pagesexternas/PageVerSeries.tsx"],"names":["React","useEffect","useState","Icon","Card","RenderHtml","Globais","route","navigation","titulo","console","log","carregardados","informacoes","id_curso","useWindowDimensions","width","modalVisible","setModalVisible","dados","setDados","carregando","setCarregando","tamanho","Dimensions","get","params","id","url","fetch","then","resp","json","resultado","data","catch","e","alert","finally","styles","scrollView","flexDirection","justifyContent","alignItems","percentuallargura","height","percentualaltura","borderRadius","color","navigate","fontSize","serie","Download","urladmin","foto","uri","html","texto","StyleSheet","create","container","flex","paddingTop","StatusBar","currentHeight","marginHorizontal","text","a","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { Input, Card, Button } from \"react-native-elements\";\r\nimport { MaskedTextInput } from \"react-native-mask-text\";\r\n\r\nimport RenderHtml from \"react-native-render-html\";\r\n\r\nimport {\r\n  View,\r\n  Modal,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Dimensions,\r\n  ActivityIndicator,\r\n  Image,\r\n  Text,\r\n  useWindowDimensions,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Pressable,\r\n  Alert,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Globais from \"../Configs/Globais\";\r\nimport Banner from \"./Banner\";\r\n\r\nexport default ({ route, navigation, titulo }) => {\r\n  useEffect(() => {\r\n    //setDados(informacoes);\r\n    console.log(\"AQUI TA MASSA\");\r\n    carregardados(informacoes.id_curso);\r\n    console.log(informacoes.id_curso);\r\n  }, []);\r\n  const { width } = useWindowDimensions();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [dados, setDados] = useState([]);\r\n  const [carregando, setCarregando] = useState(false);\r\n  const tamanho = Dimensions.get(\"window\").width;\r\n  const informacoes = route.params.informacoes;\r\n  function carregardados(id: any) {\r\n    var url = Globais.url + \"series/\" + id;\r\n    setCarregando(true);\r\n\r\n    fetch(url)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        const resultado = json.data.data;\r\n        setDados(resultado);\r\n        // console.log(resultado);\r\n      })\r\n      .catch((e) => {\r\n        alert(\"erro\" + e);\r\n      })\r\n      .finally(() => {\r\n        setCarregando(false);\r\n      });\r\n  }\r\n  return (\r\n    <ScrollView style={styles.scrollView}>\r\n      <View\r\n        style={{\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {carregando ? (\r\n          <View\r\n            style={{\r\n              width: Globais.percentuallargura(85),\r\n              height: Globais.percentualaltura(85),\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <ActivityIndicator size=\"large\" animating={true} />\r\n          </View>\r\n        ) : (\r\n          <Card containerStyle={{ width: \"95%\", borderRadius: 10 }}>\r\n            <Card.Title style={{ color: \"#43C1C4\" }}>\r\n              <TouchableOpacity\r\n                onPress={() => navigation.navigate(\"PageInicioApp\")}\r\n              >\r\n                <Icon\r\n                  name=\"arrow-left\"\r\n                  style={{ color: \"#F38DAD\", fontSize: 22 }}\r\n                />\r\n                <View>\r\n                  <Text> {dados.serie}</Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            </Card.Title>\r\n            <Card.Divider />\r\n\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                Globais.Download(Globais.urladmin + dados.foto);\r\n              }}\r\n            >\r\n              <Card.Image\r\n                style={{ width: \"100%\" }}\r\n                source={{ uri: Globais.urladmin + dados.foto }}\r\n                resizeMode=\"contain\"\r\n              />\r\n            </TouchableOpacity>\r\n            <Card.Divider />\r\n            <RenderHtml\r\n              contentWidth={width}\r\n              source={{\r\n                html:\r\n                  dados.texto != \"\"\r\n                    ? \"<span>\" + dados.texto + \"</span>\"\r\n                    : \"<b>semconteudo</b>\",\r\n              }}\r\n            />\r\n          </Card>\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n  },\r\n  scrollView: {\r\n    marginHorizontal: 0,\r\n  },\r\n  text: {\r\n    fontSize: 42,\r\n  },\r\n  titulo: {\r\n    color: \"#43C1C4\",\r\n    fontSize: 20,\r\n  },\r\n  a: {\r\n    fontWeight: \"300\",\r\n    color: \"#FF3366\", // make links coloured pink\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}