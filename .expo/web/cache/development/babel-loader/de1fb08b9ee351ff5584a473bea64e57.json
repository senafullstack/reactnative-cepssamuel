{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShortFlexCSSPropertyValidator = void 0;\n\nvar _ShortMergeRequest = require(\"../ShortMergeRequest\");\n\nvar _expandCSSToRN = _interopRequireDefault(require(\"./expandCSSToRN\"));\n\nvar _ShortCSSPropertyValidator = require(\"./ShortCSSPropertyValidator\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ShortFlexCSSPropertyValidator = function (_ShortCSSPropertyVali) {\n  _inherits(ShortFlexCSSPropertyValidator, _ShortCSSPropertyVali);\n\n  var _super = _createSuper(ShortFlexCSSPropertyValidator);\n\n  function ShortFlexCSSPropertyValidator(params) {\n    _classCallCheck(this, ShortFlexCSSPropertyValidator);\n\n    return _super.call(this, _objectSpread(_objectSpread({}, params), {}, {\n      propertyName: 'flex'\n    }));\n  }\n\n  _createClass(ShortFlexCSSPropertyValidator, [{\n    key: \"normalizeInlineCSSValue\",\n    value: function normalizeInlineCSSValue(value) {\n      return new _ShortMergeRequest.ShortMergeRequest((0, _expandCSSToRN.default)(this.propertyName, value));\n    }\n  }, {\n    key: \"normalizeNativeValue\",\n    value: function normalizeNativeValue(value) {\n      return value;\n    }\n  }]);\n\n  return ShortFlexCSSPropertyValidator;\n}(_ShortCSSPropertyValidator.ShortCSSPropertyValidator);\n\nexports.ShortFlexCSSPropertyValidator = ShortFlexCSSPropertyValidator;","map":{"version":3,"sources":["ShortFlexCSSPropertyValidator.ts"],"names":["ShortCSSPropertyValidator","constructor","propertyName","normalizeInlineCSSValue","ShortMergeRequest","normalizeNativeValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,kBAAA,GAAA,OAAA,wBAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,mBAAA,CAAA;;AACA,IAAA,0BAAA,GAAA,OAAA,+BAAA;;;;;;;;IAQO,6B;;;;;AAILC,yCAAW,MAAXA,EAAkE;AAAA;;AAAA,6DAC1D,MAD0D;AAC7CC,MAAAA,YAAY,EAAE;AAD+B;AAEjE;;;;WAEDC,iCAAuB,KAAvBA,EAAuC;AACrC,aAAO,IAAIC,kBAAAA,CAAJ,iBAAA,CAAsB,CAAA,GAAA,cAAA,CAAA,OAAA,EAAc,KAAd,YAAA,EAA7B,KAA6B,CAAtB,CAAP;AACD;;;WAYDC,8BAAoB,KAApBA,EAAoC;AAClC,aAAA,KAAA;AACD;;;;EAxBgDL,0BAAAA,CAA5C,yB","sourcesContent":["import { ShortMergeRequest } from '../ShortMergeRequest';\nimport expandCSSToRN from './expandCSSToRN';\nimport { ShortCSSPropertyValidator } from './ShortCSSPropertyValidator';\nimport { CSSPropertyValidatorParams, CSSPropertyModel } from './types';\n\n/**\n * Flex shorthand property in CSS and React Native differ significantly. This\n * validator must therefore expand this shorthand in a way consistent with the\n * specs for both platforms (native and CSS).\n */\nexport class ShortFlexCSSPropertyValidator extends ShortCSSPropertyValidator<\n  CSSPropertyModel,\n  number\n> {\n  constructor(params: CSSPropertyValidatorParams<CSSPropertyModel>) {\n    super({ ...params, propertyName: 'flex' });\n  }\n\n  normalizeInlineCSSValue(value: string) {\n    return new ShortMergeRequest(expandCSSToRN(this.propertyName, value));\n  }\n\n  /**\n   * In React Native, \"flex\" is not a shorthand property, although it looks\n   * like one. There is not always a tuple of (flexGrow, flexShrink,\n   * flexBasis) that maps exactly to one single \"flex\" value.\n   *\n   * For this very reason, it is ill-advised to use \"flex\" shorthand property.\n   * Use the longhand equivalent when that is possible.\n   *\n   * @param value\n   */\n  normalizeNativeValue(value: number) {\n    return value;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}