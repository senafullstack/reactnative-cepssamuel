{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LongNonPercentSizeCSSPropertyValidator = void 0;\n\nvar _LongSizeCSSPropertyValidator = require(\"./LongSizeCSSPropertyValidator\");\n\nvar LongNonPercentSizeCSSPropertyValidator = function (_LongSizeCSSPropertyV) {\n  _inherits(LongNonPercentSizeCSSPropertyValidator, _LongSizeCSSPropertyV);\n\n  var _super = _createSuper(LongNonPercentSizeCSSPropertyValidator);\n\n  function LongNonPercentSizeCSSPropertyValidator() {\n    _classCallCheck(this, LongNonPercentSizeCSSPropertyValidator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LongNonPercentSizeCSSPropertyValidator, [{\n    key: \"computeSize\",\n    value: function computeSize(value, unit) {\n      if (unit === '%') {\n        return null;\n      }\n\n      return _get(_getPrototypeOf(LongNonPercentSizeCSSPropertyValidator.prototype), \"computeSize\", this).call(this, value, unit);\n    }\n  }]);\n\n  return LongNonPercentSizeCSSPropertyValidator;\n}(_LongSizeCSSPropertyValidator.LongSizeCSSPropertyValidator);\n\nexports.LongNonPercentSizeCSSPropertyValidator = LongNonPercentSizeCSSPropertyValidator;","map":{"version":3,"sources":["LongNonPercentSizeCSSPropertyValidator.ts"],"names":["LongSizeCSSPropertyValidator","computeSize","unit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,6BAAA,GAAA,OAAA,kCAAA;;IAGO,sC;;;;;;;;;;;;;WAGKC,qBAAW,KAAXA,EAAW,IAAXA,EAAgD;AACxD,UAAIC,IAAI,KAAR,GAAA,EAAkB;AAChB,eAAA,IAAA;AACD;;AACD,qHAAO,KAAP,EAAA,IAAA;AACD;;;;EANOF,6BAAAA,CAFH,4B","sourcesContent":["import { CSSLengthUnit } from '../config';\nimport { LongSizeCSSPropertyValidator } from './LongSizeCSSPropertyValidator';\nimport { CSSPropertyModel } from './types';\n\nexport class LongNonPercentSizeCSSPropertyValidator<\n  C extends CSSPropertyModel\n> extends LongSizeCSSPropertyValidator<C> {\n  protected computeSize(value: number, unit: CSSLengthUnit) {\n    if (unit === '%') {\n      return null;\n    }\n    return super.computeSize(value, unit);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}