{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _TStyles = require(\"../styles/TStyles\");\n\nvar _markersPrototype = _interopRequireDefault(require(\"./markersPrototype\"));\n\nvar _tnodeSnapshot = _interopRequireDefault(require(\"./tnodeSnapshot\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction updateNodeIndexes(node, i) {\n  node.nodeIndex = i;\n}\n\nvar emptyAttrs = Object.freeze({});\nvar emptyClasses = Object.freeze([]);\n\nfunction findNativeRole(ariaRole) {\n  if (ariaRole === 'img') {\n    return 'image';\n  }\n\n  if (ariaRole === 'heading') {\n    return 'header';\n  }\n\n  if (ariaRole === 'dialog') {\n    return 'alert';\n  }\n\n  if (ariaRole === 'presentation') {\n    return 'none';\n  }\n\n  if (ariaRole === 'button' || ariaRole === 'switch' || ariaRole === 'checkbox' || ariaRole === 'radio' || ariaRole === 'radiogroup' || ariaRole === 'link' || ariaRole === 'search') {\n    return ariaRole;\n  }\n}\n\nfunction setMarkersFromAttributes(targetMarkers, _parentMarkers, _ref) {\n  var attributes = _ref.attributes;\n\n  if ('dir' in attributes) {\n    targetMarkers.direction = attributes.dir;\n  }\n\n  if ('lang' in attributes) {\n    targetMarkers.lang = attributes.lang;\n  }\n}\n\nfunction transformPropsDefinitionsToSwitch(definition) {\n  if (!definition) {\n    return null;\n  }\n\n  return {\n    text: _objectSpread(_objectSpread({}, definition.native), definition.text),\n    view: _objectSpread(_objectSpread({}, definition.native), definition.view)\n  };\n}\n\nfunction mergeSwitches(prev, next) {\n  if (!prev) {\n    return next;\n  }\n\n  if (!next) {\n    return prev;\n  }\n\n  return {\n    text: _objectSpread(_objectSpread({}, prev.text), next.text),\n    view: _objectSpread(_objectSpread({}, prev.view), next.view)\n  };\n}\n\nvar prototype = {\n  children: Object.freeze([]),\n  init: Object.freeze({}),\n  classes: Object.freeze([]),\n  styles: Object.freeze(_TStyles.TStyles.empty()),\n  markers: _markersPrototype.default,\n  __nodeIndex: null,\n  __trimmedLeft: false,\n  __trimmedRight: false,\n  __nativeProps: false,\n  __nativeStyles: false,\n  __webStyles: false,\n  __generateNativePropsFromTNode: function __generateNativePropsFromTNode() {\n    var ret = null;\n\n    if (this.styles.webTextFlow.userSelect) {\n      ret = mergeSwitches(ret, {\n        text: {\n          selectable: this.styles.webTextFlow.userSelect !== 'none'\n        }\n      });\n    }\n\n    if (this.attributes['aria-label']) {\n      var accessibilityProps = {\n        accessibilityLabel: this.attributes['aria-label']\n      };\n      ret = mergeSwitches(ret, {\n        view: accessibilityProps,\n        text: accessibilityProps\n      });\n    }\n\n    if (this.attributes.role) {\n      var role = this.attributes.role;\n      var accessibilityRole = findNativeRole(role);\n\n      if (accessibilityRole) {\n        var _accessibilityProps = {\n          accessibilityRole: accessibilityRole\n        };\n        ret = mergeSwitches(ret, {\n          view: _accessibilityProps,\n          text: _accessibilityProps\n        });\n      }\n    }\n\n    return ret;\n  },\n  __generateDynamicNativePropsFromModel: function __generateDynamicNativePropsFromModel(autoGeneratedProps) {\n    var elm = this.elementModel;\n\n    if (!elm || !elm.getReactNativeProps) {\n      return null;\n    }\n\n    return transformPropsDefinitionsToSwitch(elm.getReactNativeProps(this, autoGeneratedProps, this.domNode) || null);\n  },\n\n  get attributes() {\n    var _this$domNode;\n\n    return ((_this$domNode = this.domNode) === null || _this$domNode === void 0 ? void 0 : _this$domNode.attribs) || emptyAttrs;\n  },\n\n  get hasWhiteSpaceCollapsingEnabled() {\n    return typeof this.styles.webTextFlow.whiteSpace === 'string' ? this.styles.webTextFlow.whiteSpace === 'normal' : true;\n  },\n\n  get contentModel() {\n    var _this$elementModel;\n\n    return ((_this$elementModel = this.elementModel) === null || _this$elementModel === void 0 ? void 0 : _this$elementModel.contentModel) || null;\n  },\n\n  get parentStyles() {\n    var _this$parent;\n\n    return this.init.parentStyles || ((_this$parent = this.parent) === null || _this$parent === void 0 ? void 0 : _this$parent.styles) || null;\n  },\n\n  get id() {\n    return this.attributes.id || null;\n  },\n\n  get domNode() {\n    return this.init.domNode || null;\n  },\n\n  get elementModel() {\n    return this.init.elementModel;\n  },\n\n  get tagName() {\n    var _this$init$domNode;\n\n    return ((_this$init$domNode = this.init.domNode) === null || _this$init$domNode === void 0 ? void 0 : _this$init$domNode.name) || null;\n  },\n\n  get parent() {\n    return this.init.parent || null;\n  },\n\n  get nodeIndex() {\n    if (this.__nodeIndex === null) {\n      this.__nodeIndex = this.init.nodeIndex || 0;\n    }\n\n    return this.__nodeIndex;\n  },\n\n  get isUnregistered() {\n    return this.init.isUnregistered || false;\n  },\n\n  set nodeIndex(nodeIndex) {\n    this.__nodeIndex = nodeIndex;\n  },\n\n  bindChildren: function bindChildren(children) {\n    var shouldUpdateNodeIndexes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.children = children;\n\n    if (shouldUpdateNodeIndexes) {\n      children.forEach(updateNodeIndexes);\n    }\n  },\n  cloneInitParams: function cloneInitParams(partial) {\n    return Object.assign({}, this.init, partial);\n  },\n  isCollapsibleLeft: function isCollapsibleLeft() {\n    if (this.children.length) {\n      return this.hasWhiteSpaceCollapsingEnabled && this.children[0].isCollapsibleLeft();\n    }\n\n    return false;\n  },\n  isCollapsibleRight: function isCollapsibleRight() {\n    if (this.children.length) {\n      return this.hasWhiteSpaceCollapsingEnabled && this.children[this.children.length - 1].isCollapsibleRight();\n    }\n\n    return false;\n  },\n  isEmpty: function isEmpty() {\n    return false;\n  },\n  trimLeft: function trimLeft() {\n    if (!this.__trimmedLeft && this.children.length) {\n      var firstChild = this.children[0];\n      firstChild.trimLeft();\n\n      if (firstChild.isEmpty()) {\n        this.children.splice(0, 1);\n      }\n\n      this.__trimmedLeft = true;\n    }\n  },\n  trimRight: function trimRight() {\n    if (!this.__trimmedRight && this.children.length) {\n      var lastChild = this.children[this.children.length - 1];\n      lastChild.trimRight();\n\n      if (lastChild.isEmpty()) {\n        this.children.splice(-1, 1);\n      }\n\n      this.__trimmedRight = true;\n    }\n  },\n  matchContentModel: function matchContentModel() {\n    return false;\n  },\n  spliceChildren: function spliceChildren(indexesToSplice) {\n    var offset = 0;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(indexesToSplice), _step; !(_step = _iterator()).done;) {\n      var i = _step.value;\n      this.children.splice(i - offset, 1);\n      offset += 1;\n    }\n  },\n  collapse: function collapse() {\n    this.collapseChildren();\n    this.bindChildren(this.children, true);\n  },\n  getNativeStyles: function getNativeStyles() {\n    if (this.__nativeStyles === false) {\n      this.__nativeStyles = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, this.styles.nativeBlockFlow), this.styles.nativeBlockRet), this.styles.nativeTextFlow), this.styles.nativeTextRet);\n    }\n\n    return this.__nativeStyles;\n  },\n  getWebStyles: function getWebStyles() {\n    if (this.__webStyles === false) {\n      this.__webStyles = _objectSpread(_objectSpread({}, this.styles.webTextFlow), this.styles.webBlockRet);\n    }\n\n    return this.__webStyles;\n  },\n  collapseChildren: function collapseChildren() {\n    return;\n  },\n  snapshot: function snapshot() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _options$withStyles = options.withStyles,\n        withStyles = _options$withStyles === void 0 ? false : _options$withStyles,\n        _options$withNodeInde = options.withNodeIndex,\n        withNodeIndex = _options$withNodeInde === void 0 ? false : _options$withNodeInde;\n    return (0, _tnodeSnapshot.default)(this, {\n      withStyles: withStyles,\n      withNodeIndex: withNodeIndex\n    });\n  },\n  hasClass: function hasClass(className) {\n    return this.classes.indexOf(className) > -1;\n  },\n  toString: function toString() {\n    return this.snapshot();\n  },\n  setMarkers: function setMarkers(targetMarkers, parentMarkers) {\n    var _this$elementModel2, _this$init$context$se, _this$init$context;\n\n    if ((_this$elementModel2 = this.elementModel) !== null && _this$elementModel2 !== void 0 && _this$elementModel2.setMarkersForTNode) {\n      this.elementModel.setMarkersForTNode(targetMarkers, parentMarkers, this);\n    }\n\n    setMarkersFromAttributes(targetMarkers, parentMarkers, this);\n    (_this$init$context$se = (_this$init$context = this.init.context).setMarkersForTNode) === null || _this$init$context$se === void 0 ? void 0 : _this$init$context$se.call(_this$init$context, targetMarkers, parentMarkers, this);\n  },\n  getReactNativeProps: function getReactNativeProps() {\n    if (this.__nativeProps === false) {\n      var _this$elementModel3;\n\n      var staticFromModel = transformPropsDefinitionsToSwitch((_this$elementModel3 = this.elementModel) === null || _this$elementModel3 === void 0 ? void 0 : _this$elementModel3.reactNativeProps);\n\n      var dynamicFromAttrs = this.__generateNativePropsFromTNode();\n\n      var autoGeneratedProps = mergeSwitches(staticFromModel, dynamicFromAttrs);\n\n      var dynamicFromModel = this.__generateDynamicNativePropsFromModel(autoGeneratedProps);\n\n      this.__nativeProps = mergeSwitches(autoGeneratedProps, dynamicFromModel);\n    }\n\n    return this.__nativeProps;\n  },\n  initialize: function initialize(init) {\n    var _this$attributes$clas;\n\n    this.init = init;\n    this.classes = ((_this$attributes$clas = this.attributes.class) === null || _this$attributes$clas === void 0 ? void 0 : _this$attributes$clas.split(/\\s+/)) || emptyClasses;\n    var parentMarkers = init.parent ? init.parent.markers : _markersPrototype.default.extend();\n    this.markers = parentMarkers.extend();\n    this.setMarkers(this.markers, parentMarkers, this);\n\n    if (Object.keys(this.markers).length === 0) {\n      this.markers = parentMarkers;\n    }\n\n    this.styles = init.styles || init.context.stylesMerger.buildStyles(this.attributes.style, this.parentStyles || null, this);\n  }\n};\n\nvar TNodeCtor = function TNode(type, displayName, extraAccessors) {\n  this.type = type;\n  this.displayName = displayName;\n  extraAccessors && Object.defineProperties(this, extraAccessors);\n};\n\nTNodeCtor.prototype = prototype;\nvar _default = TNodeCtor;\nexports.default = _default;","map":{"version":3,"sources":["TNodeCtor.ts"],"names":["node","emptyAttrs","Object","emptyClasses","ariaRole","attributes","targetMarkers","text","definition","view","prev","next","prototype","children","init","classes","styles","TStyles","markers","markersPrototype","__nodeIndex","__trimmedLeft","__trimmedRight","__nativeProps","__nativeStyles","__webStyles","__generateNativePropsFromTNode","ret","mergeSwitches","selectable","accessibilityProps","accessibilityLabel","role","accessibilityRole","findNativeRole","__generateDynamicNativePropsFromModel","elm","transformPropsDefinitionsToSwitch","bindChildren","shouldUpdateNodeIndexes","cloneInitParams","isCollapsibleLeft","isCollapsibleRight","isEmpty","trimLeft","firstChild","trimRight","lastChild","matchContentModel","spliceChildren","offset","i","collapse","getNativeStyles","nativeTextRet","getWebStyles","webBlockRet","collapseChildren","snapshot","options","withStyles","withNodeIndex","hasClass","toString","setMarkers","setMarkersFromAttributes","getReactNativeProps","staticFromModel","dynamicFromAttrs","autoGeneratedProps","dynamicFromModel","initialize","parentMarkers","TNodeCtor","extraAccessors"],"mappings":";;;;;;;;;;;;;;;;;;;AAKA,IAAA,QAAA,GAAA,OAAA,qBAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,mBAAA,CAAA;;;;;;;;AAkBA,SAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,EAAgE;AAC9DA,EAAAA,IAAI,CAAJA,SAAAA,GAAAA,CAAAA;AACD;;AAED,IAAMC,UAAU,GAAGC,MAAM,CAANA,MAAAA,CAAnB,EAAmBA,CAAnB;AACA,IAAMC,YAAY,GAAGD,MAAM,CAANA,MAAAA,CAArB,EAAqBA,CAArB;;AAEA,SAAA,cAAA,CAAA,QAAA,EAAyE;AACvE,MAAIE,QAAQ,KAAZ,KAAA,EAAwB;AACtB,WAAA,OAAA;AACD;;AACD,MAAIA,QAAQ,KAAZ,SAAA,EAA4B;AAC1B,WAAA,QAAA;AACD;;AACD,MAAIA,QAAQ,KAAZ,QAAA,EAA2B;AACzB,WAAA,OAAA;AACD;;AACD,MAAIA,QAAQ,KAAZ,cAAA,EAAiC;AAC/B,WAAA,MAAA;AACD;;AACD,MACEA,QAAQ,KAARA,QAAAA,IACAA,QAAQ,KADRA,QAAAA,IAEAA,QAAQ,KAFRA,UAAAA,IAGAA,QAAQ,KAHRA,OAAAA,IAIAA,QAAQ,KAJRA,YAAAA,IAKAA,QAAQ,KALRA,MAAAA,IAMAA,QAAQ,KAPV,QAAA,EAQE;AACA,WAAA,QAAA;AACD;AACF;;AAED,SAAA,wBAAA,CAAA,aAAA,EAAA,cAAA,QAIQ;AAAA,MADJC,UACI,QADJA,UACI;;AACN,MAAI,SAAJ,UAAA,EAAyB;AACvBC,IAAAA,aAAa,CAAbA,SAAAA,GAA0BD,UAAU,CAApCC,GAAAA;AACD;;AACD,MAAI,UAAJ,UAAA,EAA0B;AACxBA,IAAAA,aAAa,CAAbA,IAAAA,GAAqBD,UAAU,CAA/BC,IAAAA;AACD;AACF;;AAED,SAAA,iCAAA,CAAA,UAAA,EAEiC;AAC/B,MAAI,CAAJ,UAAA,EAAiB;AACf,WAAA,IAAA;AACD;;AACD,SAAO;AACLC,IAAAA,IAAI,kCACCC,UAAU,CADT,MAAF,GAECA,UAAU,CAACD,IAFZ,CADC;AAKLE,IAAAA,IAAI,kCACCD,UAAU,CADT,MAAF,GAECA,UAAU,CAACC,IAFZ;AALC,GAAP;AAUD;;AAED,SAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAGE;AACA,MAAI,CAAJ,IAAA,EAAW;AACT,WAAA,IAAA;AACD;;AACD,MAAI,CAAJ,IAAA,EAAW;AACT,WAAA,IAAA;AACD;;AACD,SAAO;AACLF,IAAAA,IAAI,kCACCG,IAAI,CADH,IAAF,GAECC,IAAI,CAACJ,IAFN,CADC;AAKLE,IAAAA,IAAI,kCACCC,IAAI,CADH,IAAF,GAECC,IAAI,CAACF,IAFN;AALC,GAAP;AAUD;;AAED,IAAMG,SAAkD,GAAG;AACzDC,EAAAA,QAAQ,EAAEX,MAAM,CAANA,MAAAA,CAD+C,EAC/CA,CAD+C;AAEzDY,EAAAA,IAAI,EAAEZ,MAAM,CAANA,MAAAA,CAFmD,EAEnDA,CAFmD;AAGzDa,EAAAA,OAAO,EAAEb,MAAM,CAANA,MAAAA,CAHgD,EAGhDA,CAHgD;AAIzDc,EAAAA,MAAM,EAAEd,MAAM,CAANA,MAAAA,CAAce,QAAAA,CAAAA,OAAAA,CAJmC,KAInCA,EAAdf,CAJiD;AAKzDgB,EAAAA,OAAO,EAAEC,iBAAAA,CALgD,OAAA;AAMzDC,EAAAA,WAAW,EAN8C,IAAA;AAOzDC,EAAAA,aAAa,EAP4C,KAAA;AAQzDC,EAAAA,cAAc,EAR2C,KAAA;AASzDC,EAAAA,aAAa,EAT4C,KAAA;AAUzDC,EAAAA,cAAc,EAV2C,KAAA;AAWzDC,EAAAA,WAAW,EAX8C,KAAA;AAYzDC,EAAAA,8BAZyD,4CAYxB;AAC/B,QAAIC,GAAkC,GAAtC,IAAA;;AACA,QAAI,KAAA,MAAA,CAAA,WAAA,CAAJ,UAAA,EAAwC;AACtCA,MAAAA,GAAG,GAAGC,aAAa,CAAA,GAAA,EAAM;AACvBrB,QAAAA,IAAI,EAAE;AACJsB,UAAAA,UAAU,EAAE,KAAA,MAAA,CAAA,WAAA,CAAA,UAAA,KAAuC;AAD/C;AADiB,OAAN,CAAnBF;AAKD;;AACD,QAAI,KAAA,UAAA,CAAJ,YAAI,CAAJ,EAAmC;AACjC,UAAMG,kBAAsC,GAAG;AAC7CC,QAAAA,kBAAkB,EAAE,KAAA,UAAA,CAAA,YAAA;AADyB,OAA/C;AAGAJ,MAAAA,GAAG,GAAGC,aAAa,CAAA,GAAA,EAAM;AACvBnB,QAAAA,IAAI,EADmB,kBAAA;AAEvBF,QAAAA,IAAI,EAAEuB;AAFiB,OAAN,CAAnBH;AAID;;AACD,QAAI,KAAA,UAAA,CAAJ,IAAA,EAA0B;AACxB,UAAMK,IAAI,GAAG,KAAA,UAAA,CAAb,IAAA;AACA,UAAMC,iBAAiB,GAAGC,cAAc,CAAxC,IAAwC,CAAxC;;AACA,UAAA,iBAAA,EAAuB;AACrB,YAAMJ,mBAAsC,GAAG;AAC7CG,UAAAA,iBAAiB,EAAEA;AAD0B,SAA/C;AAGAN,QAAAA,GAAG,GAAGC,aAAa,CAAA,GAAA,EAAM;AACvBnB,UAAAA,IAAI,EADmB,mBAAA;AAEvBF,UAAAA,IAAI,EAAEuB;AAFiB,SAAN,CAAnBH;AAID;AACF;;AACD,WAAA,GAAA;AA3CuD,GAAA;AA8CzDQ,EAAAA,qCA9CyD,iDA8CpB,kBA9CoB,EA8CC;AACxD,QAAMC,GAAG,GAAG,KAAZ,YAAA;;AACA,QAAI,CAAA,GAAA,IAAQ,CAACA,GAAG,CAAhB,mBAAA,EAAsC;AACpC,aAAA,IAAA;AACD;;AACD,WAAOC,iCAAiC,CACtCD,GAAG,CAAHA,mBAAAA,CAAAA,IAAAA,EAAAA,kBAAAA,EAAyD,KAAzDA,OAAAA,KADF,IAAwC,CAAxC;AAnDuD,GAAA;;AAyDzD,MAAA,UAAA,GAAiB;AAAA,QAAA,aAAA;;AACf,WAAO,CAAA,CAAA,aAAA,GAAA,KAAA,OAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAA,CAAA,OAAA,KAAP,UAAA;AA1DuD,GAAA;;AA6DzD,MAAA,8BAAA,GAAqC;AACnC,WAAO,OAAO,KAAA,MAAA,CAAA,WAAA,CAAP,UAAA,KAAA,QAAA,GACH,KAAA,MAAA,CAAA,WAAA,CAAA,UAAA,KADG,QAAA,GAAP,IAAA;AA9DuD,GAAA;;AAmEzD,MAAA,YAAA,GAAmB;AAAA,QAAA,kBAAA;;AACjB,WAAO,CAAA,CAAA,kBAAA,GAAA,KAAA,YAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,kBAAA,CAAA,YAAA,KAAP,IAAA;AApEuD,GAAA;;AAuEzD,MAAA,YAAA,GAAmB;AAAA,QAAA,YAAA;;AACjB,WAAO,KAAA,IAAA,CAAA,YAAA,KAAA,CAAA,YAAA,GAA0B,KAA1B,MAAA,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA0B,YAAA,CAA1B,MAAA,KAAP,IAAA;AAxEuD,GAAA;;AA2EzD,MAAA,EAAA,GAAS;AACP,WAAO,KAAA,UAAA,CAAA,EAAA,IAAP,IAAA;AA5EuD,GAAA;;AA+EzD,MAAA,OAAA,GAAc;AACZ,WAAO,KAAA,IAAA,CAAA,OAAA,IAAP,IAAA;AAhFuD,GAAA;;AAmFzD,MAAA,YAAA,GAAmB;AACjB,WAAO,KAAA,IAAA,CAAP,YAAA;AApFuD,GAAA;;AAuFzD,MAAA,OAAA,GAAc;AAAA,QAAA,kBAAA;;AACZ,WAAO,CAAA,CAAA,kBAAA,GAAA,KAAA,IAAA,CAAA,OAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,kBAAA,CAAA,IAAA,KAAP,IAAA;AAxFuD,GAAA;;AA2FzD,MAAA,MAAA,GAAa;AACX,WAAQ,KAAA,IAAA,CAAD,MAAC,IAAR,IAAA;AA5FuD,GAAA;;AA+FzD,MAAA,SAAA,GAAgB;AACd,QAAI,KAAA,WAAA,KAAJ,IAAA,EAA+B;AAC7B,WAAA,WAAA,GAAmB,KAAA,IAAA,CAAA,SAAA,IAAnB,CAAA;AACD;;AACD,WAAO,KAAP,WAAA;AAnGuD,GAAA;;AAsGzD,MAAA,cAAA,GAAqB;AACnB,WAAO,KAAA,IAAA,CAAA,cAAA,IAAP,KAAA;AAvGuD,GAAA;;AA0GzD,MAAA,SAAA,CAAA,SAAA,EAAiC;AAC/B,SAAA,WAAA,GAAA,SAAA;AA3GuD,GAAA;;AA8GzDE,EAAAA,YA9GyD,wBA8G7C,QA9G6C,EA8GD;AAAA,QAAjCC,uBAAiC,uEAA5C,KAA4C;AAEtD,SAAA,QAAA,GAAA,QAAA;;AACA,QAAA,uBAAA,EAA6B;AAC3B1B,MAAAA,QAAQ,CAARA,OAAAA,CAAAA,iBAAAA;AACD;AAnHsD,GAAA;AAsHzD2B,EAAAA,eAtHyD,2BAsH1C,OAtH0C,EAsHhC;AACvB,WAAOtC,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB,KAAlBA,IAAAA,EAAP,OAAOA,CAAP;AAvHuD,GAAA;AA0HzDuC,EAAAA,iBA1HyD,+BA0HrC;AAClB,QAAI,KAAA,QAAA,CAAJ,MAAA,EAA0B;AACxB,aACE,KAAA,8BAAA,IACA,KAAA,QAAA,CAAA,CAAA,EAFF,iBAEE,EAFF;AAID;;AACD,WAAA,KAAA;AAjIuD,GAAA;AAoIzDC,EAAAA,kBApIyD,gCAoIpC;AACnB,QAAI,KAAA,QAAA,CAAJ,MAAA,EAA0B;AACxB,aACE,KAAA,8BAAA,IACA,KAAA,QAAA,CAAc,KAAA,QAAA,CAAA,MAAA,GAAd,CAAA,EAFF,kBAEE,EAFF;AAID;;AACD,WAAA,KAAA;AA3IuD,GAAA;AA8IzDC,EAAAA,OA9IyD,qBA8I/C;AACR,WAAA,KAAA;AA/IuD,GAAA;AAkJzDC,EAAAA,QAlJyD,sBAkJ9C;AACT,QAAI,CAAC,KAAD,aAAA,IAAuB,KAAA,QAAA,CAA3B,MAAA,EAAiD;AAC/C,UAAMC,UAAU,GAAG,KAAA,QAAA,CAAnB,CAAmB,CAAnB;AACAA,MAAAA,UAAU,CAAVA,QAAAA;;AACA,UAAIA,UAAU,CAAd,OAAIA,EAAJ,EAA0B;AAExB,aAAA,QAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA;AACD;;AACD,WAAA,aAAA,GAAA,IAAA;AACD;AA3JsD,GAAA;AA8JzDC,EAAAA,SA9JyD,uBA8J7C;AACV,QAAI,CAAC,KAAD,cAAA,IAAwB,KAAA,QAAA,CAA5B,MAAA,EAAkD;AAChD,UAAMC,SAAS,GAAG,KAAA,QAAA,CAAc,KAAA,QAAA,CAAA,MAAA,GAAhC,CAAkB,CAAlB;AACAA,MAAAA,SAAS,CAATA,SAAAA;;AACA,UAAIA,SAAS,CAAb,OAAIA,EAAJ,EAAyB;AAEvB,aAAA,QAAA,CAAA,MAAA,CAAqB,CAArB,CAAA,EAAA,CAAA;AACD;;AACD,WAAA,cAAA,GAAA,IAAA;AACD;AAvKsD,GAAA;AA0KzDC,EAAAA,iBA1KyD,+BA0KrC;AAClB,WAAA,KAAA;AA3KuD,GAAA;AA8KzDC,EAAAA,cA9KyD,0BA8K3C,eA9K2C,EA8KzB;AAC9B,QAAIC,MAAM,GAAV,CAAA;;AACA,yDAAA,eAAA,wCAAiC;AAAA,UAAjC,CAAiC;AAE/B,WAAA,QAAA,CAAA,MAAA,CAAqBC,CAAC,GAAtB,MAAA,EAAA,CAAA;AACAD,MAAAA,MAAM,IAANA,CAAAA;AACD;AApLsD,GAAA;AAuLzDE,EAAAA,QAvLyD,sBAuL9C;AACT,SAAA,gBAAA;AACA,SAAA,YAAA,CAAkB,KAAlB,QAAA,EAAA,IAAA;AAzLuD,GAAA;AA4LzDC,EAAAA,eA5LyD,6BA4LvC;AAChB,QAAI,KAAA,cAAA,KAAJ,KAAA,EAAmC;AACjC,WAAA,cAAA,+DACK,KAAA,MAAA,CADiB,eAAtB,GAEK,KAAA,MAAA,CAFiB,cAAtB,GAGK,KAAA,MAAA,CAHiB,cAAtB,GAIK,KAAA,MAAA,CAAYC,aAJjB;AAMD;;AACD,WAAO,KAAP,cAAA;AArMuD,GAAA;AAwMzDC,EAAAA,YAxMyD,0BAwM1C;AACb,QAAI,KAAA,WAAA,KAAJ,KAAA,EAAgC;AAC9B,WAAA,WAAA,mCACK,KAAA,MAAA,CADc,WAAnB,GAEK,KAAA,MAAA,CAAYC,WAFjB;AAID;;AACD,WAAO,KAAP,WAAA;AA/MuD,GAAA;AAkNzDC,EAAAA,gBAlNyD,8BAkNtC;AACjB;AAnNuD,GAAA;AAsNzDC,EAAAA,QAtNyD,sBAsNlC;AAAA,QAAdC,OAAc,uEAAf,EAAe;AACrB,8BAAA,OAAA,CAAQC,UAAR;AAAA,QAAQA,UAAR,oCAAM,KAAN;AAAA,gCAAA,OAAA,CAA4BC,aAA5B;AAAA,QAA4BA,aAA5B,sCAA4C,KAA5C;AACA,WAAO,CAAA,GAAA,cAAA,CAAA,OAAA,EAAA,IAAA,EAA2B;AAAED,MAAAA,UAAF,EAAEA,UAAF;AAAcC,MAAAA,aAAAA,EAAAA;AAAd,KAA3B,CAAP;AAxNuD,GAAA;AA2NzDC,EAAAA,QA3NyD,oBA2NjD,SA3NiD,EA2NrC;AAClB,WAAO,KAAA,OAAA,CAAA,OAAA,CAAA,SAAA,IAAkC,CAAzC,CAAA;AA5NuD,GAAA;AA+NzDC,EAAAA,QA/NyD,sBA+N9C;AACT,WAAO,KAAP,QAAO,EAAP;AAhOuD,GAAA;AAmOzDC,EAAAA,UAnOyD,sBAmO/C,aAnO+C,EAmO/C,aAnO+C,EAmOhB;AAAA,QAAA,mBAAA,EAAA,qBAAA,EAAA,kBAAA;;AACvC,QAAA,CAAA,mBAAA,GAAI,KAAJ,YAAA,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,IAAI,mBAAA,CAAJ,kBAAA,EAA2C;AACzC,WAAA,YAAA,CAAA,kBAAA,CAAA,aAAA,EAAA,aAAA,EAAA,IAAA;AACD;;AACDC,IAAAA,wBAAwB,CAAA,aAAA,EAAA,aAAA,EAAxBA,IAAwB,CAAxBA;AACA,KAAA,qBAAA,GAAA,CAAA,kBAAA,GAAA,KAAA,IAAA,CAAA,OAAA,EAAA,kBAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,IAAA,CAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,IAAA,CAAA;AAxOuD,GAAA;AA2OzDC,EAAAA,mBA3OyD,iCA2OnC;AACpB,QAAI,KAAA,aAAA,KAAJ,KAAA,EAAkC;AAAA,UAAA,mBAAA;;AAChC,UAAMC,eAAe,GAAG9B,iCAAiC,CAAA,CAAA,mBAAA,GACvD,KADuD,YAAA,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GACvD,mBAAA,CADF,gBAAyD,CAAzD;;AAGA,UAAM+B,gBAAgB,GAAG,KAAzB,8BAAyB,EAAzB;;AACA,UAAMC,kBAAkB,GAAGzC,aAAa,CAAA,eAAA,EAAxC,gBAAwC,CAAxC;;AAIA,UAAM0C,gBAAgB,GACpB,KAAA,qCAAA,CADF,kBACE,CADF;;AAEA,WAAA,aAAA,GAAqB1C,aAAa,CAAA,kBAAA,EAAlC,gBAAkC,CAAlC;AACD;;AACD,WAAO,KAAP,aAAA;AAzPuD,GAAA;AA4PzD2C,EAAAA,UA5PyD,sBA4P/C,IA5P+C,EA+PvD;AAAA,QAAA,qBAAA;;AACA,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,OAAA,GAAe,CAAA,CAAA,qBAAA,GAAA,KAAA,UAAA,CAAA,KAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAf,YAAA;AACA,QAAMC,aAAa,GAAG1D,IAAI,CAAJA,MAAAA,GAClBA,IAAI,CAAJA,MAAAA,CADkBA,OAAAA,GAElBK,iBAAAA,CAAAA,OAAAA,CAFJ,MAEIA,EAFJ;AAGA,SAAA,OAAA,GAAeqD,aAAa,CAA5B,MAAeA,EAAf;AACA,SAAA,UAAA,CAAgB,KAAhB,OAAA,EAAA,aAAA,EAPA,IAOA;;AAGA,QAAItE,MAAM,CAANA,IAAAA,CAAY,KAAZA,OAAAA,EAAAA,MAAAA,KAAJ,CAAA,EAA4C;AAC1C,WAAA,OAAA,GAAA,aAAA;AACD;;AACD,SAAA,MAAA,GACEY,IAAI,CAAJA,MAAAA,IACAA,IAAI,CAAJA,OAAAA,CAAAA,YAAAA,CAAAA,WAAAA,CACE,KAAA,UAAA,CADFA,KAAAA,EAEE,KAAA,YAAA,IAFFA,IAAAA,EAFF,IAEEA,CAFF;AAOD;AAnRwD,CAA3D;;AAsRA,IAAM2D,SAAS,GAAG,SAAA,KAAA,CAAA,IAAA,EAAA,WAAA,EAAA,cAAA,EAUhB;AACA,OAAA,IAAA,GAAA,IAAA;AACA,OAAA,WAAA,GAAA,WAAA;AACAC,EAAAA,cAAc,IAAIxE,MAAM,CAANA,gBAAAA,CAAAA,IAAAA,EAAlBwE,cAAkBxE,CAAlBwE;AAbF,CAAA;;AAgBAD,SAAS,CAATA,SAAAA,GAAAA,SAAAA;eAEeA,S","sourcesContent":["import { AccessibilityProps, AccessibilityRole } from 'react-native';\nimport {\n  ReactNativePropsSwitch,\n  ReactNativePropsDefinitions\n} from '../helper-types';\nimport { TStyles } from '../styles/TStyles';\nimport markersPrototype from './markersPrototype';\nimport tnodeToString from './tnodeSnapshot';\nimport {\n  Markers,\n  TNodeDescriptor,\n  TNodeImpl,\n  TNodeInit,\n  TNodeType\n} from './tree-types';\n\nexport type GenericTNodeCtor<Init = TNodeInit, Impl = TNodeImpl> = {\n  new (init: Init): Impl;\n  prototype: Impl;\n};\n\nexport type Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\nfunction updateNodeIndexes(node: Mutable<TNodeImpl>, i: number) {\n  node.nodeIndex = i;\n}\n\nconst emptyAttrs = Object.freeze({});\nconst emptyClasses = Object.freeze([]);\n\nfunction findNativeRole(ariaRole: string): AccessibilityRole | undefined {\n  if (ariaRole === 'img') {\n    return 'image';\n  }\n  if (ariaRole === 'heading') {\n    return 'header';\n  }\n  if (ariaRole === 'dialog') {\n    return 'alert';\n  }\n  if (ariaRole === 'presentation') {\n    return 'none';\n  }\n  if (\n    ariaRole === 'button' ||\n    ariaRole === 'switch' ||\n    ariaRole === 'checkbox' ||\n    ariaRole === 'radio' ||\n    ariaRole === 'radiogroup' ||\n    ariaRole === 'link' ||\n    ariaRole === 'search'\n  ) {\n    return ariaRole;\n  }\n}\n\nfunction setMarkersFromAttributes(\n  targetMarkers: Markers,\n  _parentMarkers: Readonly<Markers>,\n  { attributes }: TNodeDescriptor\n): void {\n  if ('dir' in attributes) {\n    targetMarkers.direction = attributes.dir as 'rtl';\n  }\n  if ('lang' in attributes) {\n    targetMarkers.lang = attributes.lang;\n  }\n}\n\nfunction transformPropsDefinitionsToSwitch(\n  definition?: ReactNativePropsDefinitions | null\n): ReactNativePropsSwitch | null {\n  if (!definition) {\n    return null;\n  }\n  return {\n    text: {\n      ...definition.native,\n      ...definition.text\n    },\n    view: {\n      ...definition.native,\n      ...definition.view\n    }\n  };\n}\n\nfunction mergeSwitches(\n  prev: ReactNativePropsSwitch | null,\n  next: ReactNativePropsSwitch | null\n) {\n  if (!prev) {\n    return next;\n  }\n  if (!next) {\n    return prev;\n  }\n  return {\n    text: {\n      ...prev.text,\n      ...next.text\n    },\n    view: {\n      ...prev.view,\n      ...next.view\n    }\n  };\n}\n\nconst prototype: Omit<TNodeImpl, 'displayName' | 'type'> = {\n  children: Object.freeze([]) as any,\n  init: Object.freeze({}) as any,\n  classes: Object.freeze([]) as any,\n  styles: Object.freeze(TStyles.empty()) as any,\n  markers: markersPrototype,\n  __nodeIndex: null,\n  __trimmedLeft: false,\n  __trimmedRight: false,\n  __nativeProps: false,\n  __nativeStyles: false,\n  __webStyles: false,\n  __generateNativePropsFromTNode() {\n    let ret: ReactNativePropsSwitch | null = null;\n    if (this.styles.webTextFlow.userSelect) {\n      ret = mergeSwitches(ret, {\n        text: {\n          selectable: this.styles.webTextFlow.userSelect !== 'none'\n        }\n      });\n    }\n    if (this.attributes['aria-label']) {\n      const accessibilityProps: AccessibilityProps = {\n        accessibilityLabel: this.attributes['aria-label']\n      };\n      ret = mergeSwitches(ret, {\n        view: accessibilityProps,\n        text: accessibilityProps\n      });\n    }\n    if (this.attributes.role) {\n      const role = this.attributes.role;\n      const accessibilityRole = findNativeRole(role);\n      if (accessibilityRole) {\n        const accessibilityProps: AccessibilityProps = {\n          accessibilityRole: accessibilityRole\n        };\n        ret = mergeSwitches(ret, {\n          view: accessibilityProps,\n          text: accessibilityProps\n        });\n      }\n    }\n    return ret;\n  },\n\n  __generateDynamicNativePropsFromModel(autoGeneratedProps) {\n    const elm = this.elementModel;\n    if (!elm || !elm.getReactNativeProps) {\n      return null;\n    }\n    return transformPropsDefinitionsToSwitch(\n      elm.getReactNativeProps(this as any, autoGeneratedProps, this.domNode!) ||\n        null\n    );\n  },\n\n  get attributes() {\n    return this.domNode?.attribs || emptyAttrs;\n  },\n\n  get hasWhiteSpaceCollapsingEnabled() {\n    return typeof this.styles.webTextFlow.whiteSpace === 'string'\n      ? this.styles.webTextFlow.whiteSpace === 'normal'\n      : true;\n  },\n\n  get contentModel() {\n    return this.elementModel?.contentModel || null;\n  },\n\n  get parentStyles() {\n    return this.init.parentStyles || this.parent?.styles || null;\n  },\n\n  get id() {\n    return this.attributes.id || null;\n  },\n\n  get domNode() {\n    return this.init.domNode || null;\n  },\n\n  get elementModel() {\n    return this.init.elementModel;\n  },\n\n  get tagName() {\n    return this.init.domNode?.name || null;\n  },\n\n  get parent() {\n    return (this.init.parent as any) || null;\n  },\n\n  get nodeIndex() {\n    if (this.__nodeIndex === null) {\n      this.__nodeIndex = this.init.nodeIndex || 0;\n    }\n    return this.__nodeIndex;\n  },\n\n  get isUnregistered() {\n    return this.init.isUnregistered || false;\n  },\n\n  set nodeIndex(nodeIndex: number) {\n    this.__nodeIndex = nodeIndex;\n  },\n\n  bindChildren(children, shouldUpdateNodeIndexes = false) {\n    //@ts-ignore\n    this.children = children;\n    if (shouldUpdateNodeIndexes) {\n      children.forEach(updateNodeIndexes);\n    }\n  },\n\n  cloneInitParams(partial) {\n    return Object.assign({}, this.init, partial) as any;\n  },\n\n  isCollapsibleLeft() {\n    if (this.children.length) {\n      return (\n        this.hasWhiteSpaceCollapsingEnabled &&\n        this.children[0].isCollapsibleLeft()\n      );\n    }\n    return false;\n  },\n\n  isCollapsibleRight() {\n    if (this.children.length) {\n      return (\n        this.hasWhiteSpaceCollapsingEnabled &&\n        this.children[this.children.length - 1].isCollapsibleRight()\n      );\n    }\n    return false;\n  },\n\n  isEmpty() {\n    return false;\n  },\n\n  trimLeft() {\n    if (!this.__trimmedLeft && this.children.length) {\n      const firstChild = this.children[0];\n      firstChild.trimLeft();\n      if (firstChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(0, 1);\n      }\n      this.__trimmedLeft = true;\n    }\n  },\n\n  trimRight() {\n    if (!this.__trimmedRight && this.children.length) {\n      const lastChild = this.children[this.children.length - 1];\n      lastChild.trimRight();\n      if (lastChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(-1, 1);\n      }\n      this.__trimmedRight = true;\n    }\n  },\n\n  matchContentModel() {\n    return false;\n  },\n\n  spliceChildren(indexesToSplice) {\n    let offset = 0;\n    for (const i of indexesToSplice) {\n      //@ts-ignore\n      this.children.splice(i - offset, 1);\n      offset += 1;\n    }\n  },\n\n  collapse() {\n    this.collapseChildren();\n    this.bindChildren(this.children, true);\n  },\n\n  getNativeStyles() {\n    if (this.__nativeStyles === false) {\n      this.__nativeStyles = {\n        ...this.styles.nativeBlockFlow,\n        ...this.styles.nativeBlockRet,\n        ...this.styles.nativeTextFlow,\n        ...this.styles.nativeTextRet\n      };\n    }\n    return this.__nativeStyles;\n  },\n\n  getWebStyles() {\n    if (this.__webStyles === false) {\n      this.__webStyles = {\n        ...this.styles.webTextFlow,\n        ...this.styles.webBlockRet\n      } as ReturnType<TNodeImpl['getWebStyles']>;\n    }\n    return this.__webStyles;\n  },\n\n  collapseChildren() {\n    return;\n  },\n\n  snapshot(options = {}) {\n    const { withStyles = false, withNodeIndex = false } = options;\n    return tnodeToString(this as any, { withStyles, withNodeIndex });\n  },\n\n  hasClass(className) {\n    return this.classes.indexOf(className) > -1;\n  },\n\n  toString() {\n    return this.snapshot();\n  },\n\n  setMarkers(targetMarkers, parentMarkers) {\n    if (this.elementModel?.setMarkersForTNode) {\n      this.elementModel.setMarkersForTNode(targetMarkers, parentMarkers, this);\n    }\n    setMarkersFromAttributes(targetMarkers, parentMarkers, this);\n    this.init.context.setMarkersForTNode?.(targetMarkers, parentMarkers, this);\n  },\n\n  getReactNativeProps() {\n    if (this.__nativeProps === false) {\n      const staticFromModel = transformPropsDefinitionsToSwitch(\n        this.elementModel?.reactNativeProps\n      );\n      const dynamicFromAttrs = this.__generateNativePropsFromTNode();\n      const autoGeneratedProps = mergeSwitches(\n        staticFromModel,\n        dynamicFromAttrs\n      );\n      const dynamicFromModel =\n        this.__generateDynamicNativePropsFromModel(autoGeneratedProps);\n      this.__nativeProps = mergeSwitches(autoGeneratedProps, dynamicFromModel);\n    }\n    return this.__nativeProps;\n  },\n\n  initialize<Impl extends TNodeImpl<TNodeInit> = TNodeImpl>(\n    this: Mutable<Impl>,\n    init: Impl['init']\n  ) {\n    this.init = init;\n    this.classes = this.attributes.class?.split(/\\s+/) || emptyClasses;\n    const parentMarkers = init.parent\n      ? init.parent.markers\n      : markersPrototype.extend();\n    this.markers = parentMarkers.extend();\n    this.setMarkers(this.markers, parentMarkers, this);\n    // Avoid very long prototype chains by assigning parent to current\n    // when current has no own properties\n    if (Object.keys(this.markers).length === 0) {\n      this.markers = parentMarkers;\n    }\n    this.styles =\n      init.styles ||\n      init.context.stylesMerger.buildStyles(\n        this.attributes.style,\n        this.parentStyles || null,\n        this\n      );\n  }\n};\n\nconst TNodeCtor = function TNode<Impl extends TNodeImpl = TNodeImpl>(\n  this: Mutable<TNodeImpl>,\n  type: TNodeType,\n  displayName: string,\n  extraAccessors?: {\n    [k in Exclude<keyof Impl, keyof TNodeImpl>]: {\n      get: () => any;\n      set?: (val: any) => void;\n    };\n  }\n) {\n  this.type = type;\n  this.displayName = displayName;\n  extraAccessors && Object.defineProperties(this, extraAccessors);\n};\n\nTNodeCtor.prototype = prototype as any;\n\nexport default TNodeCtor;\n"]},"metadata":{},"sourceType":"script"}