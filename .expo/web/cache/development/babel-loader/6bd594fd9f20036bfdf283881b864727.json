{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nvar markerClipConfig = {\n  numberOfLines: 1,\n  ellipsizeMode: 'clip'\n};\nexport default function MarkerBox(_ref) {\n  var style = _ref.style,\n      counterRenderer = _ref.counterRenderer,\n      counterIndex = _ref.counterIndex,\n      markerTextStyle = _ref.markerTextStyle,\n      markerTextWidth = _ref.markerTextWidth,\n      enableMarkerClipping = _ref.enableMarkerClipping;\n  var markerStyle = typeof markerTextWidth === 'number' ? [markerTextStyle, {\n    width: markerTextWidth\n  }] : markerTextStyle;\n  return React.createElement(View, {\n    style: style\n  }, React.createElement(Text, _extends({}, enableMarkerClipping ? markerClipConfig : null, {\n    testID: \"marker-box\",\n    style: markerStyle\n  }), counterRenderer.renderMarker(counterIndex)));\n}","map":{"version":3,"sources":["MarkerBox.tsx"],"names":["markerClipConfig","numberOfLines","ellipsizeMode","enableMarkerClipping","markerStyle","width","markerTextWidth","style","counterRenderer"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;;AAIA,IAAMA,gBAAoC,GAAG;AAC3CC,EAAAA,aAAa,EAD8B,CAAA;AAE3CC,EAAAA,aAAa,EAAE;AAF4B,CAA7C;AAYA,eAAe,SAAA,SAAA,OAOI;AAAA,MAPe,KAOf,QAPe,KAOf;AAAA,MAPe,eAOf,QAPe,eAOf;AAAA,MAPe,YAOf,QAPe,YAOf;AAAA,MAPe,eAOf,QAPe,eAOf;AAAA,MAPe,eAOf,QAPe,eAOf;AAAA,MADjBC,oBACiB,QADjBA,oBACiB;AACjB,MAAMC,WAAW,GACf,OAAA,eAAA,KAAA,QAAA,GACI,CAAA,eAAA,EAAkB;AAAEC,IAAAA,KAAK,EAAEC;AAAT,GAAlB,CADJ,GADF,eAAA;AAIA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEC;AAAb,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EACOJ,oBAAoB,GAAA,gBAAA,GAD3B,IAAA,EAAA;AAEE,IAAA,MAAM,EAFR,YAAA;AAGE,IAAA,KAAK,EAAEC;AAHT,GAAA,CAAA,EAIGI,eAAe,CAAfA,YAAAA,CANP,YAMOA,CAJH,CADF,CADF;AAUD","sourcesContent":["import React from 'react';\nimport { Text, TextProps, View } from 'react-native';\nimport { MarkerBoxProps } from './shared-types';\n\nconst markerClipConfig: Partial<TextProps> = {\n  numberOfLines: 1,\n  ellipsizeMode: 'clip'\n};\n\n/**\n * Default component to render the list marker.\n *\n * See {@link https://www.w3.org/TR/css-lists-3/#marker-pseudo | CSS Lists and Counters Module Level 3, Markers}\n *\n * @public\n */\nexport default function MarkerBox({\n  style,\n  counterRenderer,\n  counterIndex,\n  markerTextStyle,\n  markerTextWidth,\n  enableMarkerClipping\n}: MarkerBoxProps) {\n  const markerStyle =\n    typeof markerTextWidth === 'number'\n      ? [markerTextStyle, { width: markerTextWidth }]\n      : markerTextStyle;\n  return (\n    <View style={style}>\n      <Text\n        {...(enableMarkerClipping ? markerClipConfig : null)}\n        testID=\"marker-box\"\n        style={markerStyle}>\n        {counterRenderer.renderMarker(counterIndex)}\n      </Text>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}