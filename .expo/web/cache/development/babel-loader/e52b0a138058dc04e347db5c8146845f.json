{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport { page, isGTE, isLTE, sameMonth } from \"../dateutils\";\nimport { xdateToData, parseDate, toMarkingFormat } from \"../interface\";\nimport { getState } from \"../day-state-manager\";\nimport { extractComponentProps } from \"../componentUpdater\";\nimport { WEEK_NUMBER } from \"../testIDs\";\nimport styleConstructor from \"./style\";\nimport CalendarHeader from \"./header\";\nimport Day from \"./day/index\";\nimport BasicDay from \"./day/basic\";\n\nvar Calendar = function (_Component) {\n  _inherits(Calendar, _Component);\n\n  var _super = _createSuper(Calendar);\n\n  function Calendar() {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      prevInitialDate: _this.props.initialDate,\n      currentMonth: _this.props.current || _this.props.initialDate ? parseDate(_this.props.current || _this.props.initialDate) : new XDate()\n    };\n    _this.style = styleConstructor(_this.props.theme);\n    _this.header = React.createRef();\n\n    _this.addMonth = function (count) {\n      _this.updateMonth(_this.state.currentMonth.clone().addMonths(count, true));\n    };\n\n    _this.updateMonth = function (day) {\n      if (day.toString('yyyy MM') === _this.state.currentMonth.toString('yyyy MM')) {\n        return;\n      }\n\n      _this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        var currMont = _this.state.currentMonth.clone();\n\n        _this.props.onMonthChange == null ? void 0 : _this.props.onMonthChange(xdateToData(currMont));\n        _this.props.onVisibleMonthsChange == null ? void 0 : _this.props.onVisibleMonthsChange([xdateToData(currMont)]);\n      });\n    };\n\n    _this.pressDay = function (date) {\n      if (date) _this.handleDayInteraction(date, _this.props.onDayPress);\n    };\n\n    _this.longPressDay = function (date) {\n      if (date) _this.handleDayInteraction(date, _this.props.onDayLongPress);\n    };\n\n    _this.swipeProps = {\n      onSwipe: function onSwipe(direction) {\n        return _this.onSwipe(direction);\n      }\n    };\n\n    _this.onSwipe = function (gestureName) {\n      var SWIPE_UP = swipeDirections.SWIPE_UP,\n          SWIPE_DOWN = swipeDirections.SWIPE_DOWN,\n          SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n          SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT;\n\n      switch (gestureName) {\n        case SWIPE_UP:\n        case SWIPE_DOWN:\n          break;\n\n        case SWIPE_LEFT:\n          _this.onSwipeLeft();\n\n          break;\n\n        case SWIPE_RIGHT:\n          _this.onSwipeRight();\n\n          break;\n      }\n    };\n\n    _this.onSwipeLeft = function () {\n      var _this$header, _this$header$current;\n\n      (_this$header = _this.header) == null ? void 0 : (_this$header$current = _this$header.current) == null ? void 0 : _this$header$current.onPressRight();\n    };\n\n    _this.onSwipeRight = function () {\n      var _this$header2, _this$header2$current;\n\n      (_this$header2 = _this.header) == null ? void 0 : (_this$header2$current = _this$header2.current) == null ? void 0 : _this$header2$current.onPressLeft();\n    };\n\n    _this.renderWeekNumber = memoize(function (weekNumber) {\n      return React.createElement(View, {\n        style: _this.style.dayContainer,\n        key: \"week-container-\" + weekNumber,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, React.createElement(BasicDay, {\n        key: \"week-\" + weekNumber,\n        marking: {\n          disabled: true,\n          disableTouchEvent: true\n        },\n        theme: _this.props.theme,\n        testID: WEEK_NUMBER + \"-\" + weekNumber,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }, weekNumber));\n    });\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"handleDayInteraction\",\n    value: function handleDayInteraction(date, interaction) {\n      var _this$props = this.props,\n          disableMonthChange = _this$props.disableMonthChange,\n          allowSelectionOutOfRange = _this$props.allowSelectionOutOfRange;\n      var day = parseDate(date);\n      var min = parseDate(this.props.minDate);\n      var max = parseDate(this.props.maxDate);\n\n      if (allowSelectionOutOfRange || !(min && !isGTE(day, min)) && !(max && !isLTE(day, max))) {\n        var shouldUpdateMonth = disableMonthChange === undefined || !disableMonthChange;\n\n        if (shouldUpdateMonth) {\n          this.updateMonth(day);\n        }\n\n        if (interaction) {\n          interaction(date);\n        }\n      }\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(day, id) {\n      var _this$props2 = this.props,\n          hideExtraDays = _this$props2.hideExtraDays,\n          markedDates = _this$props2.markedDates;\n      var dayProps = extractComponentProps(Day, this.props);\n\n      if (!sameMonth(day, this.state.currentMonth) && hideExtraDays) {\n        return React.createElement(View, {\n          key: id,\n          style: this.style.emptyDayContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: this.style.dayContainer,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, React.createElement(Day, _extends({}, dayProps, {\n        day: day,\n        state: getState(day, this.state.currentMonth, this.props),\n        marking: markedDates == null ? void 0 : markedDates[toMarkingFormat(day)],\n        onPress: this.pressDay,\n        onLongPress: this.longPressDay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"renderWeek\",\n    value: function renderWeek(days, id) {\n      var _this2 = this;\n\n      var week = [];\n      days.forEach(function (day, id2) {\n        week.push(_this2.renderDay(day, id2));\n      }, this);\n\n      if (this.props.showWeekNumbers) {\n        week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n      }\n\n      return React.createElement(View, {\n        style: this.style.week,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      }, week);\n    }\n  }, {\n    key: \"renderMonth\",\n    value: function renderMonth() {\n      var currentMonth = this.state.currentMonth;\n      var _this$props3 = this.props,\n          firstDay = _this$props3.firstDay,\n          showSixWeeks = _this$props3.showSixWeeks,\n          hideExtraDays = _this$props3.hideExtraDays;\n      var shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n      var days = page(currentMonth, firstDay, shouldShowSixWeeks);\n      var weeks = [];\n\n      while (days.length) {\n        weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n      }\n\n      return React.createElement(View, {\n        style: this.style.monthView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 16\n        }\n      }, weeks);\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var _this$props4 = this.props,\n          customHeader = _this$props4.customHeader,\n          headerStyle = _this$props4.headerStyle,\n          displayLoadingIndicator = _this$props4.displayLoadingIndicator,\n          markedDates = _this$props4.markedDates,\n          testID = _this$props4.testID;\n      var indicator;\n\n      if (this.state.currentMonth) {\n        var lastMonthOfDay = toMarkingFormat(this.state.currentMonth.clone().addMonths(1, true).setDate(1).addDays(-1));\n\n        if (displayLoadingIndicator && !(markedDates != null && markedDates[lastMonthOfDay])) {\n          indicator = true;\n        }\n      }\n\n      var headerProps = extractComponentProps(CalendarHeader, this.props);\n      var CustomHeader = customHeader;\n      var HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n      var ref = customHeader ? undefined : this.header;\n      return React.createElement(HeaderComponent, _extends({}, headerProps, {\n        testID: testID,\n        style: headerStyle,\n        ref: ref,\n        month: this.state.currentMonth,\n        addMonth: this.addMonth,\n        displayLoadingIndicator: indicator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          enableSwipeMonths = _this$props5.enableSwipeMonths,\n          style = _this$props5.style;\n      var GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n      var gestureProps = enableSwipeMonths ? this.swipeProps : undefined;\n      return React.createElement(GestureComponent, _extends({}, gestureProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: [this.style.container, style],\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }\n      }, this.renderHeader(), this.renderMonth()));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps != null && nextProps.initialDate && (nextProps == null ? void 0 : nextProps.initialDate) !== prevState.prevInitialDate) {\n        return {\n          prevInitialDate: nextProps.initialDate,\n          currentMonth: parseDate(nextProps.initialDate)\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarHeader.propTypes), Day.propTypes), {}, {\n  theme: PropTypes.object,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  current: PropTypes.string,\n  initialDate: PropTypes.string,\n  minDate: PropTypes.string,\n  maxDate: PropTypes.string,\n  firstDay: PropTypes.number,\n  markedDates: PropTypes.object,\n  displayLoadingIndicator: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  hideExtraDays: PropTypes.bool,\n  showSixWeeks: PropTypes.bool,\n  onDayPress: PropTypes.func,\n  onDayLongPress: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  onVisibleMonthsChange: PropTypes.func,\n  disableMonthChange: PropTypes.bool,\n  enableSwipeMonths: PropTypes.bool,\n  disabledByDefault: PropTypes.bool,\n  headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  customHeader: PropTypes.any,\n  allowSelectionOutOfRange: PropTypes.bool\n});\nCalendar.defaultProps = {\n  enableSwipeMonths: false\n};\nexport default Calendar;","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/node_modules/react-native-calendars/src/calendar/index.js"],"names":["PropTypes","XDate","memoize","React","Component","GestureRecognizer","swipeDirections","page","isGTE","isLTE","sameMonth","xdateToData","parseDate","toMarkingFormat","getState","extractComponentProps","WEEK_NUMBER","styleConstructor","CalendarHeader","Day","BasicDay","Calendar","state","prevInitialDate","props","initialDate","currentMonth","current","style","theme","header","createRef","addMonth","count","updateMonth","clone","addMonths","day","toString","setState","currMont","onMonthChange","onVisibleMonthsChange","pressDay","date","handleDayInteraction","onDayPress","longPressDay","onDayLongPress","swipeProps","onSwipe","direction","gestureName","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","onSwipeLeft","onSwipeRight","onPressRight","onPressLeft","renderWeekNumber","weekNumber","dayContainer","disabled","disableTouchEvent","interaction","disableMonthChange","allowSelectionOutOfRange","min","minDate","max","maxDate","shouldUpdateMonth","undefined","id","hideExtraDays","markedDates","dayProps","emptyDayContainer","days","week","forEach","id2","push","renderDay","showWeekNumbers","unshift","length","getWeek","firstDay","showSixWeeks","shouldShowSixWeeks","weeks","renderWeek","splice","monthView","customHeader","headerStyle","displayLoadingIndicator","testID","indicator","lastMonthOfDay","setDate","addDays","headerProps","CustomHeader","HeaderComponent","ref","enableSwipeMonths","GestureComponent","View","gestureProps","container","accessibilityElementsHidden","importantForAccessibility","renderHeader","renderMonth","nextProps","prevState","displayName","propTypes","object","oneOfType","array","number","string","bool","func","disabledByDefault","any","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport { View } from 'react-native';\n// @ts-expect-error\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport { page, isGTE, isLTE, sameMonth } from '../dateutils';\nimport { xdateToData, parseDate, toMarkingFormat } from '../interface';\nimport { getState } from '../day-state-manager';\nimport { extractComponentProps } from '../componentUpdater';\n// @ts-expect-error\nimport { WEEK_NUMBER } from '../testIDs';\nimport styleConstructor from './style';\nimport CalendarHeader from './header';\nimport Day from './day/index';\nimport BasicDay from './day/basic';\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar.gif\n */\nclass Calendar extends Component {\n    static displayName = 'Calendar';\n    static propTypes = {\n        ...CalendarHeader.propTypes,\n        ...Day.propTypes,\n        /** Specify theme properties to override specific styles for calendar parts. Default = {} */\n        theme: PropTypes.object,\n        /** Specify style for calendar container element. Default = {} */\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n        /** Initially visible month in 'yyyy-MM-dd' format. Default = now */\n        current: PropTypes.string,\n        /** Initially visible month. If changed will initialize the calendar to this value */\n        initialDate: PropTypes.string,\n        /** Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined */\n        minDate: PropTypes.string,\n        /** Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined */\n        maxDate: PropTypes.string,\n        /** If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday. */\n        firstDay: PropTypes.number,\n        /** Collection of dates that have to be marked. Default = {} */\n        markedDates: PropTypes.object,\n        /** Display loading indicator. Default = false */\n        displayLoadingIndicator: PropTypes.bool,\n        /** Show week numbers. Default = false */\n        showWeekNumbers: PropTypes.bool,\n        /** Do not show days of other months in month page. Default = false */\n        hideExtraDays: PropTypes.bool,\n        /** Always show six weeks on each month (only when hideExtraDays = false). Default = false */\n        showSixWeeks: PropTypes.bool,\n        /** Handler which gets executed on day press. Default = undefined */\n        onDayPress: PropTypes.func,\n        /** Handler which gets executed on day long press. Default = undefined */\n        onDayLongPress: PropTypes.func,\n        /** Handler which gets executed when month changes in calendar. Default = undefined */\n        onMonthChange: PropTypes.func,\n        /** Handler which gets executed when visible month changes in calendar. Default = undefined */\n        onVisibleMonthsChange: PropTypes.func,\n        /** Disables changing month when click on days of other months (when hideExtraDays is false). Default = false */\n        disableMonthChange: PropTypes.bool,\n        /** Enable the option to swipe between months. Default: false */\n        enableSwipeMonths: PropTypes.bool,\n        /** Disable days by default. Default = false */\n        disabledByDefault: PropTypes.bool,\n        /** Style passed to the header */\n        headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n        /** Allow rendering of a totally custom header */\n        customHeader: PropTypes.any,\n        /** Allow selection of dates before minDate or after maxDate */\n        allowSelectionOutOfRange: PropTypes.bool\n    };\n    static defaultProps = {\n        enableSwipeMonths: false\n    };\n    state = {\n        prevInitialDate: this.props.initialDate,\n        currentMonth: this.props.current || this.props.initialDate ?\n            parseDate(this.props.current || this.props.initialDate) : new XDate()\n    };\n    style = styleConstructor(this.props.theme);\n    header = React.createRef();\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps?.initialDate && nextProps?.initialDate !== prevState.prevInitialDate) {\n            return {\n                prevInitialDate: nextProps.initialDate,\n                currentMonth: parseDate(nextProps.initialDate)\n            };\n        }\n        return null;\n    }\n    addMonth = (count) => {\n        this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n    };\n    updateMonth = (day) => {\n        if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n            return;\n        }\n        this.setState({ currentMonth: day.clone() }, () => {\n            const currMont = this.state.currentMonth.clone();\n            this.props.onMonthChange?.(xdateToData(currMont));\n            this.props.onVisibleMonthsChange?.([xdateToData(currMont)]);\n        });\n    };\n    handleDayInteraction(date, interaction) {\n        const { disableMonthChange, allowSelectionOutOfRange } = this.props;\n        const day = parseDate(date);\n        const min = parseDate(this.props.minDate);\n        const max = parseDate(this.props.maxDate);\n        if (allowSelectionOutOfRange || !(min && !isGTE(day, min)) && !(max && !isLTE(day, max))) {\n            const shouldUpdateMonth = disableMonthChange === undefined || !disableMonthChange;\n            if (shouldUpdateMonth) {\n                this.updateMonth(day);\n            }\n            if (interaction) {\n                interaction(date);\n            }\n        }\n    }\n    pressDay = (date) => {\n        if (date)\n            this.handleDayInteraction(date, this.props.onDayPress);\n    };\n    longPressDay = (date) => {\n        if (date)\n            this.handleDayInteraction(date, this.props.onDayLongPress);\n    };\n    swipeProps = { onSwipe: (direction) => this.onSwipe(direction) };\n    onSwipe = (gestureName) => {\n        const { SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT } = swipeDirections;\n        switch (gestureName) {\n            case SWIPE_UP:\n            case SWIPE_DOWN:\n                break;\n            case SWIPE_LEFT:\n                this.onSwipeLeft();\n                break;\n            case SWIPE_RIGHT:\n                this.onSwipeRight();\n                break;\n        }\n    };\n    onSwipeLeft = () => {\n        this.header?.current?.onPressRight();\n    };\n    onSwipeRight = () => {\n        this.header?.current?.onPressLeft();\n    };\n    renderWeekNumber = memoize(weekNumber => {\n        return (<View style={this.style.dayContainer} key={`week-container-${weekNumber}`}>\n        <BasicDay key={`week-${weekNumber}`} marking={{ disabled: true, disableTouchEvent: true }} \n        // state='disabled'\n        theme={this.props.theme} testID={`${WEEK_NUMBER}-${weekNumber}`}>\n          {weekNumber}\n        </BasicDay>\n      </View>);\n    });\n    renderDay(day, id) {\n        const { hideExtraDays, markedDates } = this.props;\n        const dayProps = extractComponentProps(Day, this.props);\n        if (!sameMonth(day, this.state.currentMonth) && hideExtraDays) {\n            return <View key={id} style={this.style.emptyDayContainer}/>;\n        }\n        return (<View style={this.style.dayContainer} key={id}>\n        <Day {...dayProps} day={day} state={getState(day, this.state.currentMonth, this.props)} marking={markedDates?.[toMarkingFormat(day)]} onPress={this.pressDay} onLongPress={this.longPressDay}/>\n      </View>);\n    }\n    renderWeek(days, id) {\n        const week = [];\n        days.forEach((day, id2) => {\n            week.push(this.renderDay(day, id2));\n        }, this);\n        if (this.props.showWeekNumbers) {\n            week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n        }\n        return (<View style={this.style.week} key={id}>\n        {week}\n      </View>);\n    }\n    renderMonth() {\n        const { currentMonth } = this.state;\n        const { firstDay, showSixWeeks, hideExtraDays } = this.props;\n        const shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n        const days = page(currentMonth, firstDay, shouldShowSixWeeks);\n        const weeks = [];\n        while (days.length) {\n            weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n        }\n        return <View style={this.style.monthView}>{weeks}</View>;\n    }\n    renderHeader() {\n        const { customHeader, headerStyle, displayLoadingIndicator, markedDates, testID } = this.props;\n        let indicator;\n        if (this.state.currentMonth) {\n            const lastMonthOfDay = toMarkingFormat(this.state.currentMonth.clone().addMonths(1, true).setDate(1).addDays(-1));\n            if (displayLoadingIndicator && !markedDates?.[lastMonthOfDay]) {\n                indicator = true;\n            }\n        }\n        const headerProps = extractComponentProps(CalendarHeader, this.props);\n        const CustomHeader = customHeader;\n        const HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n        const ref = customHeader ? undefined : this.header;\n        return (<HeaderComponent {...headerProps} testID={testID} style={headerStyle} ref={ref} month={this.state.currentMonth} addMonth={this.addMonth} displayLoadingIndicator={indicator}/>);\n    }\n    render() {\n        const { enableSwipeMonths, style } = this.props;\n        const GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n        const gestureProps = enableSwipeMonths ? this.swipeProps : undefined;\n        return (<GestureComponent {...gestureProps}>\n        <View style={[this.style.container, style]} accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n         importantForAccessibility={this.props.importantForAccessibility} // Android\n        >\n          {this.renderHeader()}\n          {this.renderMonth()}\n        </View>\n      </GestureComponent>);\n    }\n}\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}