{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pages\\\\PageAlterarsenha.tsx\";\n\nimport React, { useState } from \"react\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input, Card, Button } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Globais from \"../Configs/Globais\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      titulo = _ref.titulo;\n\n  var _useState = useState(Globais.emailusuario),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setemail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      senha = _useState4[0],\n      setsenha = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      repetirsenha = _useState6[0],\n      setrepetirsenha = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dados = _useState8[0],\n      setDados = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      temerro = _useState10[0],\n      settemErro = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mensagem = _useState12[0],\n      setmensagem = _useState12[1];\n\n  var dadosFormdata = new FormData();\n  dadosFormdata.append(\"username\", email);\n  dadosFormdata.append(\"password\", senha);\n  var requestPost = {\n    method: \"POST\",\n    body: dadosFormdata\n  };\n\n  function logincandidato() {\n    var url = Globais.url + \"v1/alterarsenha/\" + Globais.codigousuario;\n    fetch(url, requestPost).then(function (resp) {\n      return resp.json();\n    }).then(function (json) {\n      var dadosretorno = json.data.data;\n      console.log(json);\n\n      if (dadosretorno.error == \"Unauthorized\") {\n        settemErro(true);\n        setmensagem(dadosretorno.info);\n      } else {\n        Globais.nomeusuario = dadosretorno.nome;\n        Globais.emailusuario = dadosretorno.email;\n        Globais.logado = true;\n        Globais.turma = dadosretorno.turma;\n        Globais.token = dadosretorno.access_token;\n        Globais.fotousuario = dadosretorno.foto;\n        Globais.ArmazenarJson(\"dadoslogin\", dadosretorno);\n        setDados(json.login);\n        navigation.navigate(\"AppInicio\");\n      }\n    }).catch(function (e) {\n      alert(\"erro\" + e);\n    }).finally(function () {});\n  }\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingTop: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: estilos.image,\n    source: require(\"../assets/images/logo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), React.createElement(Card, {\n    containerStyle: {\n      width: \"90%\",\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Title, {\n    style: {\n      color: \"#43C1C4\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Alterar Senha\"), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(texto) {\n      setemail(texto);\n    },\n    style: {\n      color: \"#F38DAD\"\n    },\n    value: email,\n    placeholder: \"Email\",\n    leftIcon: {\n      type: \"font-awesome\",\n      name: \"user\",\n      color: \"#F38DAD\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    secureTextEntry: true,\n    placeholder: \"Nova Senha\",\n    value: senha,\n    style: {\n      color: \"#F38DAD\"\n    },\n    onChangeText: function onChangeText(texto) {\n      setsenha(texto);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      size: 24,\n      color: \"#F38DAD\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    secureTextEntry: true,\n    placeholder: \"Repetir Senha\",\n    value: repetirsenha,\n    style: {\n      color: \"#F38DAD\"\n    },\n    onChangeText: function onChangeText(texto) {\n      setrepetirsenha(texto);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      size: 24,\n      color: \"#F38DAD\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    buttonStyle: {\n      backgroundColor: \"#5BA3D9\"\n    },\n    onPress: function onPress() {\n      return logincandidato();\n    },\n    icon: React.createElement(Icon, {\n      name: \"arrow-right\",\n      size: 18,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }),\n    title: \"Alterar Senha\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), temerro ? React.createElement(View, {\n    style: {\n      width: \"100%\",\n      height: 15,\n      alignContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, mensagem)) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }))));\n});\nvar estilos = StyleSheet.create({\n  image: {\n    width: \"90%\",\n    height: Globais.percentualaltura(40),\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pages/PageAlterarsenha.tsx"],"names":["React","useState","Icon","Input","Card","Button","Globais","navigation","titulo","emailusuario","email","setemail","senha","setsenha","repetirsenha","setrepetirsenha","dados","setDados","temerro","settemErro","mensagem","setmensagem","dadosFormdata","FormData","append","requestPost","method","body","logincandidato","url","codigousuario","fetch","then","resp","json","dadosretorno","data","console","log","error","info","nomeusuario","nome","logado","turma","token","access_token","fotousuario","foto","ArmazenarJson","login","navigate","catch","e","alert","finally","flexDirection","justifyContent","alignItems","paddingTop","estilos","image","require","width","borderRadius","color","texto","type","name","backgroundColor","height","alignContent","fontSize","StyleSheet","create","percentualaltura","resizeMode"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { Input, Card, Button } from \"react-native-elements\";\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Image,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Globais from \"../Configs/Globais\";\r\nexport default ({ navigation, titulo }) => {\r\n  const [email, setemail] = useState(Globais.emailusuario);\r\n  const [senha, setsenha] = useState(\"\");\r\n  const [repetirsenha, setrepetirsenha] = useState(\"\");\r\n  const [dados, setDados] = useState([]);\r\n  const [temerro, settemErro] = useState(false);\r\n  const [mensagem, setmensagem] = useState(\"\");\r\n\r\n  var dadosFormdata = new FormData();\r\n  dadosFormdata.append(\"username\", email);\r\n  dadosFormdata.append(\"password\", senha);\r\n\r\n  var requestPost = {\r\n    method: \"POST\",\r\n    body: dadosFormdata,\r\n  };\r\n\r\n  function logincandidato() {\r\n    var url = Globais.url + \"v1/alterarsenha/\" + Globais.codigousuario;\r\n\r\n    fetch(url, requestPost)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        let dadosretorno = json.data.data;\r\n        console.log(json);\r\n\r\n        if (dadosretorno.error == \"Unauthorized\") {\r\n          settemErro(true);\r\n\r\n          setmensagem(dadosretorno.info);\r\n        } else {\r\n          Globais.nomeusuario = dadosretorno.nome;\r\n          Globais.emailusuario = dadosretorno.email;\r\n          Globais.logado = true;\r\n          Globais.turma = dadosretorno.turma;\r\n\r\n          Globais.token = dadosretorno.access_token;\r\n          Globais.fotousuario = dadosretorno.foto;\r\n          //  ArmazenarJson(\"dadoslogin\", dadosretorno);\r\n          Globais.ArmazenarJson(\"dadoslogin\", dadosretorno);\r\n\r\n          setDados(json.login);\r\n          navigation.navigate(\"AppInicio\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        alert(\"erro\" + e);\r\n      })\r\n      .finally(() => {\r\n        //alert(\"fim\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View\r\n        style={{\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          paddingTop: 5,\r\n        }}\r\n      >\r\n        <Image\r\n          style={estilos.image}\r\n          source={require(\"../assets/images/logo.png\")}\r\n        />\r\n\r\n        <Card containerStyle={{ width: \"90%\", borderRadius: 10 }}>\r\n          <Card.Title style={{ color: \"#43C1C4\" }}>Alterar Senha</Card.Title>\r\n          <Card.Divider />\r\n          <Input\r\n            onChangeText={(texto) => {\r\n              setemail(texto);\r\n            }}\r\n            style={{ color: \"#F38DAD\" }}\r\n            value={email}\r\n            placeholder=\"Email\"\r\n            leftIcon={{ type: \"font-awesome\", name: \"user\", color: \"#F38DAD\" }}\r\n          />\r\n\r\n          <Input\r\n            secureTextEntry={true}\r\n            placeholder=\"Nova Senha\"\r\n            value={senha}\r\n            style={{ color: \"#F38DAD\" }}\r\n            onChangeText={(texto) => {\r\n              setsenha(texto);\r\n            }}\r\n            leftIcon={<Icon name=\"lock\" size={24} color=\"#F38DAD\" />}\r\n          />\r\n          <Input\r\n            secureTextEntry={true}\r\n            placeholder=\"Repetir Senha\"\r\n            value={repetirsenha}\r\n            style={{ color: \"#F38DAD\" }}\r\n            onChangeText={(texto) => {\r\n              setrepetirsenha(texto);\r\n            }}\r\n            leftIcon={<Icon name=\"lock\" size={24} color=\"#F38DAD\" />}\r\n          />\r\n          <Button\r\n            buttonStyle={{ backgroundColor: \"#5BA3D9\" }}\r\n            onPress={() => logincandidato()}\r\n            icon={<Icon name=\"arrow-right\" size={18} color=\"white\" />}\r\n            title=\"Alterar Senha\"\r\n          />\r\n          {temerro ? (\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 15,\r\n                alignContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: 20,\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                {mensagem}\r\n              </Text>\r\n            </View>\r\n          ) : (\r\n            <View></View>\r\n          )}\r\n        </Card>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst estilos = StyleSheet.create({\r\n  image: {\r\n    width: \"90%\",\r\n    height: Globais.percentualaltura(40),\r\n    resizeMode: \"contain\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}