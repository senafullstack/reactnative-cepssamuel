{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pagesexternas\\\\Calendario.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Agenda } from \"react-native-calendars\";\n\nvar AgendaScreen = function (_Component) {\n  _inherits(AgendaScreen, _Component);\n\n  var _super = _createSuper(AgendaScreen);\n\n  function AgendaScreen() {\n    var _this;\n\n    _classCallCheck(this, AgendaScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      items: {}\n    };\n    return _this;\n  }\n\n  _createClass(AgendaScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Agenda, {\n        items: {\n          \"2012-05-22\": [{\n            name: \"item 1 - any js object\"\n          }],\n          \"2012-05-23\": [{\n            name: \"item 2 - any js object\",\n            height: 80\n          }],\n          \"2012-05-24\": [],\n          \"2012-05-25\": [{\n            name: \"item 3 - any js object\"\n          }, {\n            name: \"any js object\"\n          }]\n        },\n        loadItemsForMonth: function loadItemsForMonth(month) {\n          console.log(\"trigger items loading\");\n        },\n        onCalendarToggled: function onCalendarToggled(calendarOpened) {\n          console.log(calendarOpened);\n        },\n        onDayPress: function onDayPress(day) {\n          console.log(\"day pressed\");\n        },\n        onDayChange: function onDayChange(day) {\n          console.log(\"day changed\");\n        },\n        selected: \"2012-05-16\",\n        minDate: \"2012-05-10\",\n        maxDate: \"2012-05-30\",\n        pastScrollRange: 50,\n        futureScrollRange: 50,\n        renderItem: function renderItem(item, firstItemInDay) {\n          return React.createElement(View, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 18\n            }\n          });\n        },\n        renderDay: function renderDay(day, item) {\n          return React.createElement(View, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 18\n            }\n          });\n        },\n        renderEmptyDate: function renderEmptyDate() {\n          return React.createElement(View, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 18\n            }\n          });\n        },\n        renderKnob: function renderKnob() {\n          return React.createElement(View, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 18\n            }\n          });\n        },\n        renderEmptyData: function renderEmptyData() {\n          return React.createElement(View, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 18\n            }\n          });\n        },\n        rowHasChanged: function rowHasChanged(r1, r2) {\n          return r1.text !== r2.text;\n        },\n        hideKnob: true,\n        markedDates: {\n          \"2012-05-16\": {\n            selected: true,\n            marked: true\n          },\n          \"2012-05-17\": {\n            marked: true\n          },\n          \"2012-05-18\": {\n            disabled: true\n          }\n        },\n        disabledByDefault: true,\n        onRefresh: function onRefresh() {\n          return console.log(\"refreshing...\");\n        },\n        refreshing: false,\n        refreshControl: null,\n        theme: _objectSpread(_objectSpread({}, calendarTheme), {}, {\n          agendaDayTextColor: \"yellow\",\n          agendaDayNumColor: \"green\",\n          agendaTodayColor: \"red\",\n          agendaKnobColor: \"blue\"\n        }),\n        style: {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"loadItems\",\n    value: function loadItems(day) {\n      var _this3 = this;\n\n      setTimeout(function () {\n        for (var i = -2; i < 10; i++) {\n          var time = day.timestamp + i * 24 * 60 * 60 * 1000;\n\n          var strTime = _this3.timeToString(time);\n\n          if (!_this3.state.items[strTime]) {\n            _this3.state.items[strTime] = [];\n            var numItems = Math.floor(Math.random() * 3 + 1);\n\n            for (var j = 0; j < numItems; j++) {\n              _this3.state.items[strTime].push({\n                name: \"Item for \" + strTime + \" #\" + j,\n                height: Math.max(50, Math.floor(Math.random() * 150))\n              });\n            }\n          }\n        }\n\n        var newItems = {};\n        Object.keys(_this3.state.items).forEach(function (key) {\n          newItems[key] = _this3.state.items[key];\n        });\n        console.log(newItems);\n\n        _this3.setState({\n          items: newItems\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        testID: \"item\",\n        style: [styles.item, {\n          height: item.height\n        }],\n        onPress: function onPress() {\n          return Alert.alert(item.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, item.name));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        style: styles.emptyDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }, {\n    key: \"timeToString\",\n    value: function timeToString(time) {\n      var date = new Date(time);\n      return date.toISOString().split(\"T\")[0];\n    }\n  }]);\n\n  return AgendaScreen;\n}(Component);\n\nexport { AgendaScreen as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"white\",\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pagesexternas/Calendario.tsx"],"names":["React","Component","Agenda","AgendaScreen","state","items","name","height","month","console","log","calendarOpened","day","item","firstItemInDay","r1","r2","text","selected","marked","disabled","calendarTheme","agendaDayTextColor","agendaDayNumColor","agendaTodayColor","agendaKnobColor","setTimeout","i","time","timestamp","strTime","timeToString","numItems","Math","floor","random","j","push","max","newItems","Object","keys","forEach","key","setState","styles","Alert","alert","emptyDate","date","Date","toISOString","split","StyleSheet","create","backgroundColor","flex","borderRadius","padding","marginRight","marginTop","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Alert, StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\n// @ts-expect-error\r\nimport { Agenda } from \"react-native-calendars\";\r\n\r\nexport default class AgendaScreen extends Component {\r\n  state = {\r\n    items: {},\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Agenda\r\n        // The list of items that have to be displayed in agenda. If you want to render item as empty date\r\n        // the value of date key has to be an empty array []. If there exists no value for date key it is\r\n        // considered that the date in question is not yet loaded\r\n        items={{\r\n          \"2012-05-22\": [{ name: \"item 1 - any js object\" }],\r\n          \"2012-05-23\": [{ name: \"item 2 - any js object\", height: 80 }],\r\n          \"2012-05-24\": [],\r\n          \"2012-05-25\": [\r\n            { name: \"item 3 - any js object\" },\r\n            { name: \"any js object\" },\r\n          ],\r\n        }}\r\n        // Callback that gets called when items for a certain month should be loaded (month became visible)\r\n        loadItemsForMonth={(month) => {\r\n          console.log(\"trigger items loading\");\r\n        }}\r\n        // Callback that fires when the calendar is opened or closed\r\n        onCalendarToggled={(calendarOpened) => {\r\n          console.log(calendarOpened);\r\n        }}\r\n        // Callback that gets called on day press\r\n        onDayPress={(day) => {\r\n          console.log(\"day pressed\");\r\n        }}\r\n        // Callback that gets called when day changes while scrolling agenda list\r\n        onDayChange={(day) => {\r\n          console.log(\"day changed\");\r\n        }}\r\n        // Initially selected day\r\n        selected={\"2012-05-16\"}\r\n        // Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined\r\n        minDate={\"2012-05-10\"}\r\n        // Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined\r\n        maxDate={\"2012-05-30\"}\r\n        // Max amount of months allowed to scroll to the past. Default = 50\r\n        pastScrollRange={50}\r\n        // Max amount of months allowed to scroll to the future. Default = 50\r\n        futureScrollRange={50}\r\n        // Specify how each item should be rendered in agenda\r\n        renderItem={(item, firstItemInDay) => {\r\n          return <View />;\r\n        }}\r\n        // Specify how each date should be rendered. day can be undefined if the item is not first in that day.\r\n        renderDay={(day, item) => {\r\n          return <View />;\r\n        }}\r\n        // Specify how empty date content with no items should be rendered\r\n        renderEmptyDate={() => {\r\n          return <View />;\r\n        }}\r\n        // Specify how agenda knob should look like\r\n        renderKnob={() => {\r\n          return <View />;\r\n        }}\r\n        // Specify what should be rendered instead of ActivityIndicator\r\n        renderEmptyData={() => {\r\n          return <View />;\r\n        }}\r\n        // Specify your item comparison function for increased performance\r\n        rowHasChanged={(r1, r2) => {\r\n          return r1.text !== r2.text;\r\n        }}\r\n        // Hide knob button. Default = false\r\n        hideKnob={true}\r\n        // By default, agenda dates are marked if they have at least one item, but you can override this if needed\r\n        markedDates={{\r\n          \"2012-05-16\": { selected: true, marked: true },\r\n          \"2012-05-17\": { marked: true },\r\n          \"2012-05-18\": { disabled: true },\r\n        }}\r\n        // If disabledByDefault={true} dates flagged as not disabled will be enabled. Default = false\r\n        disabledByDefault={true}\r\n        // If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make sure to also set the refreshing prop correctly.\r\n        onRefresh={() => console.log(\"refreshing...\")}\r\n        // Set this true while waiting for new data from a refresh\r\n        refreshing={false}\r\n        // Add a custom RefreshControl component, used to provide pull-to-refresh functionality for the ScrollView.\r\n        refreshControl={null}\r\n        // Agenda theme\r\n        theme={{\r\n          ...calendarTheme,\r\n          agendaDayTextColor: \"yellow\",\r\n          agendaDayNumColor: \"green\",\r\n          agendaTodayColor: \"red\",\r\n          agendaKnobColor: \"blue\",\r\n        }}\r\n        // Agenda container style\r\n        style={{}}\r\n      />\r\n    );\r\n  }\r\n\r\n  loadItems(day) {\r\n    setTimeout(() => {\r\n      for (let i = -2; i < 10; i++) {\r\n        const time = day.timestamp + i * 24 * 60 * 60 * 1000;\r\n        const strTime = this.timeToString(time);\r\n        if (!this.state.items[strTime]) {\r\n          this.state.items[strTime] = [];\r\n          const numItems = Math.floor(Math.random() * 3 + 1);\r\n          for (let j = 0; j < numItems; j++) {\r\n            this.state.items[strTime].push({\r\n              name: \"Item for \" + strTime + \" #\" + j,\r\n              height: Math.max(50, Math.floor(Math.random() * 150)),\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const newItems = {};\r\n      Object.keys(this.state.items).forEach((key) => {\r\n        newItems[key] = this.state.items[key];\r\n      });\r\n      console.log(newItems);\r\n      this.setState({\r\n        items: newItems,\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <TouchableOpacity\r\n        testID={\"item\"}\r\n        style={[styles.item, { height: item.height }]}\r\n        onPress={() => Alert.alert(item.name)}\r\n      >\r\n        <Text>{item.name}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  rowHasChanged(r1, r2) {\r\n    return r1.name !== r2.name;\r\n  }\r\n\r\n  timeToString(time) {\r\n    const date = new Date(time);\r\n    return date.toISOString().split(\"T\")[0];\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}