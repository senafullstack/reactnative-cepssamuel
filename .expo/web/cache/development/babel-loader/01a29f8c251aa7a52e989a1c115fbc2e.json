{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSSParseRun = void 0;\n\nvar _CSSProcessedProps = require(\"./CSSProcessedProps\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar CSSParseRun = function () {\n  function CSSParseRun(validationMap) {\n    _classCallCheck(this, CSSParseRun);\n\n    _defineProperty(this, \"validationMap\", void 0);\n\n    _defineProperty(this, \"processedProps\", void 0);\n\n    this.validationMap = validationMap;\n    this.processedProps = new _CSSProcessedProps.CSSProcessedProps();\n  }\n\n  _createClass(CSSParseRun, [{\n    key: \"exec\",\n    value: function exec() {\n      this.fillProcessedProps();\n      return this.processedProps;\n    }\n  }]);\n\n  return CSSParseRun;\n}();\n\nexports.CSSParseRun = CSSParseRun;","map":{"version":3,"sources":["CSSParseRun.ts"],"names":["constructor","CSSProcessedProps","exec"],"mappings":";;;;;;;;;;;AACA,IAAA,kBAAA,GAAA,OAAA,uBAAA;;;;;;;;;;;;;;;;;IAEO,W;AAILA,uBAAW,aAAXA,EAAuD;AAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,KAAA,CAAA,CAAA;;AACrD,SAAA,aAAA,GAAA,aAAA;AACA,SAAA,cAAA,GAAsB,IAAIC,kBAAAA,CAA1B,iBAAsB,EAAtB;AACD;;;;WAIMC,gBAA0B;AAC/B,WAAA,kBAAA;AACA,aAAO,KAAP,cAAA;AACD","sourcesContent":["import { CSSPropertiesValidationRegistry as CSSPropertiesValidationMap } from './CSSPropertiesValidationRegistry';\nimport { CSSProcessedProps } from './CSSProcessedProps';\n\nexport abstract class CSSParseRun {\n  protected validationMap: CSSPropertiesValidationMap;\n  protected processedProps: CSSProcessedProps;\n\n  constructor(validationMap: CSSPropertiesValidationMap) {\n    this.validationMap = validationMap;\n    this.processedProps = new CSSProcessedProps();\n  }\n\n  protected abstract fillProcessedProps(): void;\n\n  public exec(): CSSProcessedProps {\n    this.fillProcessedProps();\n    return this.processedProps;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}