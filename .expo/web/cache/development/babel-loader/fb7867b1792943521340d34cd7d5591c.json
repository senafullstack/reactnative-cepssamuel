{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"Container\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { Children, Fragment } from 'react';\nimport MarkedListItem from \"./MarkedListItem\";\nimport useMarkedList from \"./useMarkedList\";\nexport default function MarkedList(_ref) {\n  var children = _ref.children,\n      _ref$Container = _ref.Container,\n      Container = _ref$Container === void 0 ? Fragment : _ref$Container,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var normalChildren = Children.toArray(children);\n  var listProps = useMarkedList(_objectSpread(_objectSpread({}, props), {}, {\n    length: normalChildren.length\n  }));\n  return React.createElement(Container, {}, normalChildren.map(function (child, index) {\n    return React.createElement(MarkedListItem, _extends({\n      key: index,\n      index: index\n    }, listProps), child);\n  }));\n}","map":{"version":3,"sources":["MarkedList.tsx"],"names":["Container","props","normalChildren","Children","listProps","useMarkedList","length","index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,QAAA,EAAA,QAAA,QAAA,OAAA;AACA,OAAA,cAAA;AAEA,OAAA,aAAA;AAWA,eAAe,SAAA,UAAA,OAIwB;AAAA,MAJJ,QAII,QAJJ,QAII;AAAA,4BAFrCA,SAEqC;AAAA,MAFrCA,SAEqC,+BAJJ,QAII;AAAA,MADlCC,KACkC;;AACrC,MAAMC,cAAc,GAAGC,QAAQ,CAARA,OAAAA,CAAvB,QAAuBA,CAAvB;AACA,MAAMC,SAAS,GAAGC,aAAa,iCAAC,KAAD;AAAaC,IAAAA,MAAM,EAAEJ,cAAc,CAACI;AAApC,KAA/B;AACA,SAAO,KAAK,CAAL,aAAA,CAAA,SAAA,EAAA,EAAA,EAGL,cAAc,CAAd,GAAA,CAAmB,UAAA,KAAA,EAAA,KAAA,EAAkB;AACnC,WACE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,QAAA,CAAA;AAAgB,MAAA,GAAG,EAAnB,KAAA;AAA4B,MAAA,KAAK,EAAEC;AAAnC,KAAA,EAAA,SAAA,CAAA,EADF,KACE,CADF;AAJJ,GAGE,CAHK,CAAP;AAWD","sourcesContent":["import React, { Children, Fragment, PropsWithChildren } from 'react';\nimport MarkedListItem from './MarkedListItem';\nimport { MarkedListProps } from './shared-types';\nimport useMarkedList from './useMarkedList';\n\n/**\n * A component which given a counter style, wraps each of its children with a\n * {@link MarkedListItem}. The latter prepends the child with a marker\n * box containing a marker string representation for this child index.\n *\n * See {@link https://www.w3.org/TR/css-lists-3/#markers | CSS Lists and Counters Module Level 3, Markers}.\n *\n * @public\n */\nexport default function MarkedList({\n  children,\n  Container = Fragment,\n  ...props\n}: PropsWithChildren<MarkedListProps>) {\n  const normalChildren = Children.toArray(children);\n  const listProps = useMarkedList({ ...props, length: normalChildren.length });\n  return React.createElement(\n    Container,\n    {},\n    normalChildren.map((child, index) => {\n      return (\n        <MarkedListItem key={index} index={index} {...listProps}>\n          {child}\n        </MarkedListItem>\n      );\n    })\n  );\n}\n"]},"metadata":{},"sourceType":"module"}