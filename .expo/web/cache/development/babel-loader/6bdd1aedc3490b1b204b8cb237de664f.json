{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty2 = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShortDualNativepropertyValidator = void 0;\n\nvar _ShortMergeRequest = require(\"../ShortMergeRequest\");\n\nvar _ShortCSSPropertyValidator = require(\"./ShortCSSPropertyValidator\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar ShortDualNativepropertyValidator = function (_ShortCSSPropertyVali) {\n  _inherits(ShortDualNativepropertyValidator, _ShortCSSPropertyVali);\n\n  var _super = _createSuper(ShortDualNativepropertyValidator);\n\n  function ShortDualNativepropertyValidator(params, directions) {\n    var _this;\n\n    _classCallCheck(this, ShortDualNativepropertyValidator);\n\n    _this = _super.call(this, params);\n\n    _defineProperty(_assertThisInitialized(_this), \"directions\", void 0);\n\n    _this.directions = directions;\n    return _this;\n  }\n\n  _createClass(ShortDualNativepropertyValidator, [{\n    key: \"normalizeInlineCSSValue\",\n    value: function normalizeInlineCSSValue() {\n      return null;\n    }\n  }, {\n    key: \"normalizeNativeValue\",\n    value: function normalizeNativeValue(value) {\n      var _ShortMergeRequest$Sh;\n\n      return new _ShortMergeRequest.ShortMergeRequest((_ShortMergeRequest$Sh = {}, _defineProperty2(_ShortMergeRequest$Sh, this.directions[0], value), _defineProperty2(_ShortMergeRequest$Sh, this.directions[1], value), _ShortMergeRequest$Sh));\n    }\n  }]);\n\n  return ShortDualNativepropertyValidator;\n}(_ShortCSSPropertyValidator.ShortCSSPropertyValidator);\n\nexports.ShortDualNativepropertyValidator = ShortDualNativepropertyValidator;","map":{"version":3,"sources":["ShortDualNativePropertyValidator.ts"],"names":["ShortCSSPropertyValidator","constructor","normalizeInlineCSSValue","normalizeNativeValue","ShortMergeRequest","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,kBAAA,GAAA,OAAA,wBAAA;;AACA,IAAA,0BAAA,GAAA,OAAA,+BAAA;;;;;;;;;;;;;;;;;IAGO,gC;;;;;AAILC,4CAAW,MAAXA,EAAW,UAAXA,EAME;AAAA;;AAAA;;AACA,8BAAA,MAAA;;AADA,IAAA,eAAA,gCAAA,YAAA,EAAA,KAAA,CAAA,CAAA;;AAEA,UAAA,UAAA,GAAA,UAAA;AAFA;AARmC;;;;WAcrCC,mCAA0B;AACxB,aAAA,IAAA;AACD;;;WAEDC,8BAAoB,KAApBA,EAA6C;AAAA;;AAC3C,aAAO,IAAIC,kBAAAA,CAAJ,iBAAA,sEACJ,KAAA,UAAA,CAAD,CAAC,CADI,EAAsB,KAAtB,2CAEJ,KAAA,UAAA,CAAD,CAAC,CAFI,EAEiBC,KAFjB,0BAAP;AAID;;;;EAvBOL,0BAAAA,CAFH,yB","sourcesContent":["import { ShortMergeRequest } from '../ShortMergeRequest';\nimport { ShortCSSPropertyValidator } from './ShortCSSPropertyValidator';\nimport { CSSPropertyModel, ShortCSSPropertyValidatorParams } from './types';\n\nexport class ShortDualNativepropertyValidator<\n  C extends CSSPropertyModel = any\n> extends ShortCSSPropertyValidator<C> {\n  public directions: [string, string];\n  constructor(\n    params: ShortCSSPropertyValidatorParams<C>,\n    /**\n     * First direction, second direction.\n     */\n    directions: [string, string]\n  ) {\n    super(params);\n    this.directions = directions;\n  }\n\n  // These properties are only available for native styles.\n  normalizeInlineCSSValue() {\n    return null;\n  }\n\n  normalizeNativeValue(value: string | number) {\n    return new ShortMergeRequest({\n      [this.directions[0]]: value,\n      [this.directions[1]]: value\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"script"}