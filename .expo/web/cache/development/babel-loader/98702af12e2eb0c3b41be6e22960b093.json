{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TEmptyCtor = exports.default = void 0;\n\nvar _HTMLContentModel = _interopRequireDefault(require(\"../model/HTMLContentModel\"));\n\nvar _TNodeCtor = _interopRequireDefault(require(\"./TNodeCtor\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar TEmptyCtor = function TEmpty(init) {\n  this.initialize(init);\n};\n\nexports.TEmptyCtor = TEmptyCtor;\nTEmptyCtor.prototype = new _TNodeCtor.default('empty', 'TEmpty');\n\nTEmptyCtor.prototype.matchContentModel = function matchContentModel(contentModel) {\n  return contentModel === _HTMLContentModel.default.none;\n};\n\nvar _default = TEmptyCtor;\nexports.default = _default;","map":{"version":3,"sources":["TEmptyCtor.ts"],"names":["TEmptyCtor","TNodeCtor","contentModel","HTMLContentModel"],"mappings":";;;;;;;AAAA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,6BAAA,CAAA;;AAGA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,eAAA,CAAA;;;;;;;;AAUA,IAAMA,UAAU,GAAG,SAAA,MAAA,CAAA,IAAA,EAGjB;AACA,OAAA,UAAA,CAAA,IAAA;AAJF,CAAA;;;AAQAA,UAAU,CAAVA,SAAAA,GAAuB,IAAIC,UAAAA,CAAJ,OAAA,CAAA,OAAA,EAAvBD,QAAuB,CAAvBA;;AAEAA,UAAU,CAAVA,SAAAA,CAAAA,iBAAAA,GAAyC,SAAA,iBAAA,CAAA,YAAA,EAEvC;AACA,SAAOE,YAAY,KAAKC,iBAAAA,CAAAA,OAAAA,CAAxB,IAAA;AAHFH,CAAAA;;eAMeA,U","sourcesContent":["import HTMLContentModel from '../model/HTMLContentModel';\nimport { Element } from '../dom/dom-utils';\nimport { TNodeImpl, TNodeInit } from './tree-types';\nimport TNodeCtor, { GenericTNodeCtor, Mutable } from './TNodeCtor';\n\nexport interface TEmptyImpl extends TNodeImpl<TEmptyInit> {\n  readonly domNode: Element;\n}\n\nexport interface TEmptyInit extends TNodeInit {\n  domNode: Element;\n}\n\nconst TEmptyCtor = function TEmpty(\n  this: Mutable<TEmptyImpl>,\n  init: TEmptyInit\n) {\n  this.initialize(init);\n} as Function as GenericTNodeCtor<TEmptyInit, TEmptyImpl>;\n\n//@ts-ignore\nTEmptyCtor.prototype = new TNodeCtor('empty', 'TEmpty');\n\nTEmptyCtor.prototype.matchContentModel = function matchContentModel(\n  contentModel: HTMLContentModel\n) {\n  return contentModel === HTMLContentModel.none;\n};\n\nexport default TEmptyCtor;\n\nexport { TEmptyCtor };\n"]},"metadata":{},"sourceType":"script"}