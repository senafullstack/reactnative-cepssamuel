{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"style\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useIMGElementProps = useIMGElementProps;\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _IMGElement = _interopRequireDefault(require(\"../elements/IMGElement\"));\n\nvar _SharedPropsProvider = require(\"../context/SharedPropsProvider\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _useNormalizedUrl = _interopRequireDefault(require(\"../hooks/useNormalizedUrl\"));\n\nvar _RenderersPropsProvider = require(\"../context/RenderersPropsProvider\");\n\nvar _useContentWidth = _interopRequireDefault(require(\"../hooks/useContentWidth\"));\n\nvar _getNativePropsForTNode = _interopRequireDefault(require(\"../helpers/getNativePropsForTNode\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction useIMGElementProps(props) {\n  var tnode = props.tnode;\n  var contentWidth = (0, _useContentWidth.default)();\n\n  var _ref = (0, _RenderersPropsProvider.useRendererProps)('img'),\n      initialDimensions = _ref.initialDimensions,\n      enableExperimentalPercentWidth = _ref.enableExperimentalPercentWidth;\n\n  var computeImagesMaxWidth = (0, _SharedPropsProvider.useComputeMaxWidthForTag)('img');\n  var src = tnode.attributes.src || '';\n  var source = {\n    uri: (0, _useNormalizedUrl.default)(src)\n  };\n\n  var _ref2 = (0, _getNativePropsForTNode.default)(props),\n      rawStyle = _ref2.style,\n      containerProps = _objectWithoutProperties(_ref2, _excluded);\n\n  var style = (0, _react.useMemo)(function () {\n    return rawStyle ? _reactNative.StyleSheet.flatten(rawStyle) : {};\n  }, [rawStyle]);\n  return {\n    contentWidth: contentWidth,\n    containerProps: containerProps,\n    enableExperimentalPercentWidth: enableExperimentalPercentWidth,\n    initialDimensions: initialDimensions,\n    source: source,\n    style: style,\n    testID: 'img',\n    computeMaxWidth: computeImagesMaxWidth,\n    alt: tnode.attributes.alt,\n    altColor: tnode.styles.nativeTextFlow.color,\n    width: tnode.attributes.width,\n    height: tnode.attributes.height,\n    objectFit: tnode.styles.webBlockRet.objectFit\n  };\n}\n\nvar IMGRenderer = function IMGRenderer(props) {\n  return _react.default.createElement(_IMGElement.default, useIMGElementProps(props));\n};\n\nvar _default = IMGRenderer;\nexports.default = _default;","map":{"version":3,"sources":["IMGRenderer.tsx"],"names":["tnode","contentWidth","enableExperimentalPercentWidth","computeImagesMaxWidth","src","source","uri","style","containerProps","rawStyle","StyleSheet","initialDimensions","testID","computeMaxWidth","alt","altColor","width","height","objectFit","IMGRenderer","props","React","IMGElement","useIMGElementProps"],"mappings":";;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,0BAAA,CAAA;;AAEA,IAAA,oBAAA,GAAA,OAAA,kCAAA;;;;AAGA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,6BAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,qCAAA;;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,4BAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,sBAAA,CAAA,OAAA,qCAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMO,SAAA,kBAAA,CAAA,KAAA,EAEY;AACjB,MAAQA,KAAR,GAAA,KAAA,CAAQA,KAAR;AAEA,MAAMC,YAAY,GAAG,CAAA,GAAA,gBAAA,CAArB,OAAqB,GAArB;;AACA,aACE,CAAA,GAAA,uBAAA,CAAA,gBAAA,EADF,KACE,CADF;AAAA,MAAM,iBAAN,QAAM,iBAAN;AAAA,MAA2BC,8BAA3B,QAA2BA,8BAA3B;;AAEA,MAAMC,qBAAqB,GAAG,CAAA,GAAA,oBAAA,CAAA,wBAAA,EAA9B,KAA8B,CAA9B;AACA,MAAMC,GAAG,GAAGJ,KAAK,CAALA,UAAAA,CAAAA,GAAAA,IAAZ,EAAA;AACA,MAAMK,MAAM,GAAG;AAAEC,IAAAA,GAAG,EAAE,CAAA,GAAA,iBAAA,CAAA,OAAA,EAAA,GAAA;AAAP,GAAf;;AACA,cAA+C,CAAA,GAAA,uBAAA,CAAA,OAAA,EAA/C,KAA+C,CAA/C;AAAA,MAAM,QAAN,SAAQC,KAAR;AAAA,MAA4BC,cAA5B;;AACA,MAAMD,KAAK,GAAG,CAAA,GAAA,MAAA,CAAA,OAAA,EACZ;AAAA,WAAOE,QAAQ,GAAIC,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAAJ,QAAIA,CAAJ,GADH,EACZ;AAAA,GADY,EAEZ,CAFF,QAEE,CAFY,CAAd;AAIA,SAAO;AACLT,IAAAA,YADK,EACLA,YADK;AAELO,IAAAA,cAFK,EAELA,cAFK;AAGLN,IAAAA,8BAHK,EAGLA,8BAHK;AAILS,IAAAA,iBAJK,EAILA,iBAJK;AAKLN,IAAAA,MALK,EAKLA,MALK;AAMLE,IAAAA,KANK,EAMLA,KANK;AAOLK,IAAAA,MAAM,EAPD,KAAA;AAQLC,IAAAA,eAAe,EARV,qBAAA;AASLC,IAAAA,GAAG,EAAEd,KAAK,CAALA,UAAAA,CATA,GAAA;AAULe,IAAAA,QAAQ,EAAEf,KAAK,CAALA,MAAAA,CAAAA,cAAAA,CAVL,KAAA;AAWLgB,IAAAA,KAAK,EAAEhB,KAAK,CAALA,UAAAA,CAXF,KAAA;AAYLiB,IAAAA,MAAM,EAAEjB,KAAK,CAALA,UAAAA,CAZH,MAAA;AAaLkB,IAAAA,SAAS,EAAElB,KAAK,CAALA,MAAAA,CAAAA,WAAAA,CAAyBkB;AAb/B,GAAP;AAeD;;AAED,IAAMC,WAAkC,GAAIC,SAAtCD,WAAsCC,CAAAA,KAAD,EAAW;AACpD,SAAOC,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAoBC,WAAAA,CAApBD,OAAAA,EAAgCE,kBAAkB,CAAzD,KAAyD,CAAlDF,CAAP;AADF,CAAA;;eAIeF,W","sourcesContent":["import React, { useMemo } from 'react';\nimport { TBlock } from '@native-html/transient-render-engine';\nimport IMGElement, { IMGElementProps } from '../elements/IMGElement';\nimport { InternalBlockRenderer } from '../render/render-types';\nimport { useComputeMaxWidthForTag } from '../context/SharedPropsProvider';\nimport { ImageStyle, StyleSheet } from 'react-native';\nimport { InternalRendererProps } from '../shared-types';\nimport useNormalizedUrl from '../hooks/useNormalizedUrl';\nimport { useRendererProps } from '../context/RenderersPropsProvider';\nimport useContentWidth from '../hooks/useContentWidth';\nimport getNativePropsForTNode from '../helpers/getNativePropsForTNode';\n\n/**\n * A hook to produce props consumable by {@link IMGElement} component\n * from custom renderer props.\n */\nexport function useIMGElementProps(\n  props: InternalRendererProps<TBlock>\n): IMGElementProps {\n  const { tnode } = props;\n\n  const contentWidth = useContentWidth();\n  const { initialDimensions, enableExperimentalPercentWidth } =\n    useRendererProps('img');\n  const computeImagesMaxWidth = useComputeMaxWidthForTag('img');\n  const src = tnode.attributes.src || '';\n  const source = { uri: useNormalizedUrl(src) };\n  const { style: rawStyle, ...containerProps } = getNativePropsForTNode(props);\n  const style = useMemo<ImageStyle>(\n    () => (rawStyle ? (StyleSheet.flatten(rawStyle) as ImageStyle) : {}),\n    [rawStyle]\n  );\n  return {\n    contentWidth,\n    containerProps,\n    enableExperimentalPercentWidth,\n    initialDimensions,\n    source,\n    style,\n    testID: 'img',\n    computeMaxWidth: computeImagesMaxWidth,\n    alt: tnode.attributes.alt,\n    altColor: tnode.styles.nativeTextFlow.color as string,\n    width: tnode.attributes.width,\n    height: tnode.attributes.height,\n    objectFit: tnode.styles.webBlockRet.objectFit\n  };\n}\n\nconst IMGRenderer: InternalBlockRenderer = (props) => {\n  return React.createElement(IMGElement, useIMGElementProps(props));\n};\n\nexport default IMGRenderer;\n"]},"metadata":{},"sourceType":"script"}