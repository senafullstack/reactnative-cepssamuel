{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _get = require(\"@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _domhandler = require(\"domhandler\");\n\nvar _domUtils = require(\"./dom-utils\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar DomHandler = function (_domhandler$DomHandle) {\n  _inherits(DomHandler, _domhandler$DomHandle);\n\n  var _super = _createSuper(DomHandler);\n\n  function DomHandler(options) {\n    var _this;\n\n    _classCallCheck(this, DomHandler);\n\n    _this = _super.call(this, undefined, options, undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"ignoredTags\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"ignoredTagsCount\", -1);\n\n    _defineProperty(_assertThisInitialized(_this), \"visitors\", void 0);\n\n    var ignoredTags = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose(options.ignoredTags || []), _step; !(_step = _iterator()).done;) {\n      var tag = _step.value;\n      ignoredTags[tag] = true;\n    }\n\n    _this.ignoredTags = ignoredTags;\n    _this.visitors = options.visitors || {};\n\n    var isIgnored = _this.isIgnored.bind(_assertThisInitialized(_this));\n\n    if (options.ignoreNode) {\n      _this.isIgnored = function (node) {\n        return isIgnored(node) || options.ignoreNode(node, _this.tagStack[_this.tagStack.length - 1]);\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(DomHandler, [{\n    key: \"isIgnored\",\n    value: function isIgnored(node) {\n      return this.ignoredTags[node.name] || this.ignoredTagsCount > -1;\n    }\n  }, {\n    key: \"addNode\",\n    value: function addNode(node) {\n      if (this.isIgnored(node) === true) {\n        if ((0, _domUtils.isDomElement)(node)) {\n          this.ignoredTagsCount++;\n        }\n      } else {\n        _get(_getPrototypeOf(DomHandler.prototype), \"addNode\", this).call(this, node);\n\n        if ((0, _domUtils.isDomText)(node)) {\n          var _this$visitors$onText, _this$visitors;\n\n          (_this$visitors$onText = (_this$visitors = this.visitors).onText) === null || _this$visitors$onText === void 0 ? void 0 : _this$visitors$onText.call(_this$visitors, node);\n        }\n      }\n    }\n  }, {\n    key: \"ontext\",\n    value: function ontext(text) {\n      if (this.ignoredTagsCount < 0) {\n        _get(_getPrototypeOf(DomHandler.prototype), \"ontext\", this).call(this, text);\n      }\n    }\n  }, {\n    key: \"onopentag\",\n    value: function onopentag(name, attribs) {\n      _get(_getPrototypeOf(DomHandler.prototype), \"onopentag\", this).call(this, name, attribs);\n    }\n  }, {\n    key: \"onclosetag\",\n    value: function onclosetag() {\n      var _this$visitors$onElem, _this$visitors2;\n\n      (_this$visitors$onElem = (_this$visitors2 = this.visitors).onElement) === null || _this$visitors$onElem === void 0 ? void 0 : _this$visitors$onElem.call(_this$visitors2, this.tagStack[this.tagStack.length - 1]);\n\n      _get(_getPrototypeOf(DomHandler.prototype), \"onclosetag\", this).call(this);\n\n      if (this.ignoredTagsCount > -1) {\n        this.ignoredTagsCount--;\n      }\n    }\n  }, {\n    key: \"onend\",\n    value: function onend() {\n      var _this$visitors$onDocu, _this$visitors3;\n\n      (_this$visitors$onDocu = (_this$visitors3 = this.visitors).onDocument) === null || _this$visitors$onDocu === void 0 ? void 0 : _this$visitors$onDocu.call(_this$visitors3, this.root);\n    }\n  }]);\n\n  return DomHandler;\n}(_domhandler.DomHandler);\n\nexports.default = DomHandler;","map":{"version":3,"sources":["DomHandler.ts"],"names":["OriginalDomHandler","constructor","ignoredTags","options","isIgnored","node","addNode","ontext","onopentag","onclosetag","onend"],"mappings":"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","sourcesContent":["import {\n  DomHandler as OriginalDomHandler,\n  DomHandlerOptions as OriginalDomHandlerOptions,\n  Document,\n  Element,\n  Node,\n  Text,\n  NodeWithChildren\n} from 'domhandler';\nimport { isDomElement, isDomText } from './dom-utils';\n\n/**\n * A record of callback to visit the DOM.\n *\n * @public\n */\nexport interface DomVisitorCallbacks {\n  /**\n   * A callback invoked when encountering a {@link Document}.\n   *\n   * @param document - The document to visit.\n   *\n   */\n  onDocument?(document: Document): void;\n  /**\n   * A callback invoked when encountering an {@link Element}.\n   *\n   * @param element - The element to visit.\n   */\n  onElement?(element: Element): void;\n  /**\n   * A callback invoked when encountering a {@link Text} node.\n   *\n   * @param text - The text to visit.\n   */\n  onText?(text: Text): void;\n}\n\nexport interface DomHandlerOptions extends OriginalDomHandlerOptions {\n  ignoredTags?: string[];\n  visitors?: DomVisitorCallbacks;\n  ignoreNode?: (\n    node: Node,\n    parent: NodeWithChildren\n  ) => boolean | void | unknown;\n}\n\nexport default class DomHandler extends OriginalDomHandler {\n  private ignoredTags: Record<string, boolean>;\n  private ignoredTagsCount = -1;\n  private visitors: DomVisitorCallbacks;\n\n  constructor(options: DomHandlerOptions) {\n    super(undefined, options, undefined);\n    let ignoredTags: DomHandler['ignoredTags'] = {};\n    for (const tag of options.ignoredTags || []) {\n      ignoredTags[tag] = true;\n    }\n    this.ignoredTags = ignoredTags;\n    this.visitors = options.visitors || {};\n    const isIgnored = this.isIgnored.bind(this);\n    if (options.ignoreNode) {\n      this.isIgnored = (node) => {\n        return (\n          isIgnored(node) ||\n          options.ignoreNode!(node, this.tagStack[this.tagStack.length - 1])\n        );\n      };\n    }\n  }\n\n  isIgnored(node: Node): boolean | unknown | void {\n    return (\n      (this.ignoredTags[(node as Element).name] as boolean) ||\n      this.ignoredTagsCount > -1\n    );\n  }\n\n  addNode(node: Node): void {\n    if (this.isIgnored(node) === true) {\n      // increment only for elements.\n      if (isDomElement(node)) {\n        this.ignoredTagsCount++;\n      }\n    } else {\n      super.addNode(node);\n      if (isDomText(node)) {\n        this.visitors.onText?.(node);\n      }\n    }\n  }\n\n  ontext(text: string) {\n    // Only include text when out of an\n    // ignoring session.\n    if (this.ignoredTagsCount < 0) {\n      super.ontext(text);\n    }\n  }\n\n  onopentag(name: string, attribs: any): void {\n    super.onopentag(name, attribs);\n  }\n\n  onclosetag() {\n    // Call onElement on close to give access to this node children\n    this.visitors.onElement?.(\n      this.tagStack[this.tagStack.length - 1] as Element\n    );\n    super.onclosetag();\n    if (this.ignoredTagsCount > -1) {\n      this.ignoredTagsCount--;\n    }\n  }\n\n  onend(): void {\n    this.visitors.onDocument?.(this.root);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}