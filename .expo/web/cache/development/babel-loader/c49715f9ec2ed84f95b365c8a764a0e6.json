{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pagesexternas\\\\Calendario.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Agenda, LocaleConfig } from \"react-native-calendars\";\nLocaleConfig.locales.fr = {\n  monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n  monthNamesShort: [\"Jan.\", \"Fev.\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul.\", \"Ago\", \"Set.\", \"Out.\", \"Nov.\", \"Dez.\"],\n  dayNames: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n  dayNamesShort: [\"Dom.\", \"Seg.\", \"Ter.\", \"Qua.\", \"Qui.\", \"Sex.\", \"Sáb.\"]\n};\nLocaleConfig.defaultLocale = \"fr\";\n\nvar AgendaScreen = function (_Component) {\n  _inherits(AgendaScreen, _Component);\n\n  var _super = _createSuper(AgendaScreen);\n\n  function AgendaScreen() {\n    var _this;\n\n    _classCallCheck(this, AgendaScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      items: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AgendaScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Agenda, {\n        testID: \"agenda\",\n        items: this.state.items,\n        loadItemsForMonth: this.loadItems.bind(this),\n        selected: \"2021-12-23\",\n        renderItem: this.renderItem.bind(this),\n        renderEmptyDate: this.renderEmptyDate.bind(this),\n        rowHasChanged: this.rowHasChanged.bind(this),\n        showClosingKnob: true,\n        rowHasChanged: function rowHasChanged(row) {\n          console.log(row);\n        },\n        renderEmptyDate: function renderEmptyDate(row) {\n          console.log(row);\n        },\n        onCalendarToggled: function onCalendarToggled(calendarOpened) {\n          console.log(calendarOpened);\n        },\n        onDayPress: function onDayPress(day) {\n          console.log(day);\n        },\n        onDayChange: function onDayChange(day) {\n          console.log(\"day changed\");\n        },\n        theme: {\n          calendarBackground: \"#5BA3D9\",\n          agendaDayTextColor: \"#F38DAD\",\n          agendaDayNumColor: \"#43C1C4\",\n          agendaTodayColor: \"#5BA3D9\",\n          agendaKnobColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"loadItems\",\n    value: function loadItems(day) {\n      this.setState({\n        items: {\n          \"2021-12-23\": [{\n            name: {\n              id_agenda: 1,\n              titulo: \"Dia de Vespera\"\n            },\n            start: \"2021-12-23T13:45:00\",\n            end: \"2021-12-23 19:45\",\n            endereco: \"rua  bla bla bla\"\n          }, {\n            name: {\n              id_agenda: 2,\n              titulo: \"Dia de Vespera\"\n            },\n            start: \"2020-06-09T18:45:00\",\n            end: \"2020-06-09 21:45\",\n            endereco: \"rua  bla bla bla\"\n          }],\n          \"2021-12-25\": [{\n            name: {\n              id_agenda: 3,\n              titulo: \"Dia de Vespera\"\n            },\n            start: \"2021-12-25T13:45:00\",\n            end: \"2021-12-25 19:45\",\n            endereco: \"rua  bla bla bla\"\n          }, {\n            name: {\n              id_agenda: 4,\n              titulo: \"Dia de Vespera\"\n            },\n            start: \"2021-12-25T18:45:00\",\n            end: \"2021-12-25 21:45\",\n            endereco: \"rua  bla bla bla\"\n          }]\n        }\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        testID: \"item\",\n        style: [styles.item, {\n          height: item.height\n        }],\n        onPress: function onPress() {\n          console.log(item);\n          Alert.alert(item.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, item.name.titulo));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        style: styles.emptyDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }, {\n    key: \"timeToString\",\n    value: function timeToString(time) {\n      var date = new Date(time);\n      return date.toISOString().split(\"T\")[0];\n    }\n  }]);\n\n  return AgendaScreen;\n}(Component);\n\nexport { AgendaScreen as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"white\",\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pagesexternas/Calendario.tsx"],"names":["React","Component","Agenda","LocaleConfig","locales","fr","monthNames","monthNamesShort","dayNames","dayNamesShort","defaultLocale","AgendaScreen","state","items","loadItems","bind","renderItem","renderEmptyDate","rowHasChanged","row","console","log","calendarOpened","day","calendarBackground","agendaDayTextColor","agendaDayNumColor","agendaTodayColor","agendaKnobColor","setState","name","id_agenda","titulo","start","end","endereco","item","styles","height","Alert","alert","emptyDate","r1","r2","time","date","Date","toISOString","split","StyleSheet","create","backgroundColor","flex","borderRadius","padding","marginRight","marginTop","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Alert, StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\n\r\nimport { Agenda, LocaleConfig } from \"react-native-calendars\";\r\nLocaleConfig.locales.fr = {\r\n  monthNames: [\r\n    \"Janeiro\",\r\n    \"Fevereiro\",\r\n    \"Março\",\r\n    \"Abril\",\r\n    \"Maio\",\r\n    \"Junho\",\r\n    \"Julho\",\r\n    \"Agosto\",\r\n    \"Setembro\",\r\n    \"Outubro\",\r\n    \"Novembro\",\r\n    \"Dezembro\",\r\n  ],\r\n  monthNamesShort: [\r\n    \"Jan.\",\r\n    \"Fev.\",\r\n    \"Mar\",\r\n    \"Abr\",\r\n    \"Mai\",\r\n    \"Jun\",\r\n    \"Jul.\",\r\n    \"Ago\",\r\n    \"Set.\",\r\n    \"Out.\",\r\n    \"Nov.\",\r\n    \"Dez.\",\r\n  ],\r\n  dayNames: [\r\n    \"Domingo\",\r\n    \"Segunda\",\r\n    \"Terça\",\r\n    \"Quarta\",\r\n    \"Quinta\",\r\n    \"Sexta\",\r\n    \"Sábado\",\r\n  ],\r\n  dayNamesShort: [\"Dom.\", \"Seg.\", \"Ter.\", \"Qua.\", \"Qui.\", \"Sex.\", \"Sáb.\"],\r\n};\r\n\r\nLocaleConfig.defaultLocale = \"fr\";\r\nexport default class AgendaScreen extends Component {\r\n  state = {\r\n    items: \"\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Agenda\r\n        testID={\"agenda\"}\r\n        items={this.state.items}\r\n        loadItemsForMonth={this.loadItems.bind(this)}\r\n        selected={\"2021-12-23\"}\r\n        renderItem={this.renderItem.bind(this)}\r\n        renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n        rowHasChanged={this.rowHasChanged.bind(this)}\r\n        showClosingKnob={true}\r\n        // TESTES\r\n        rowHasChanged={(row) => {\r\n          console.log(row);\r\n        }}\r\n        renderEmptyDate={(row) => {\r\n          console.log(row);\r\n        }}\r\n        onCalendarToggled={(calendarOpened) => {\r\n          console.log(calendarOpened);\r\n        }}\r\n        onDayPress={(day) => {\r\n          console.log(day);\r\n        }}\r\n        onDayChange={(day) => {\r\n          console.log(\"day changed\");\r\n        }}\r\n        theme={{\r\n          calendarBackground: \"#5BA3D9\",\r\n          agendaDayTextColor: \"#F38DAD\",\r\n          agendaDayNumColor: \"#43C1C4\",\r\n          agendaTodayColor: \"#5BA3D9\",\r\n          agendaKnobColor: \"white\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  loadItems(day) {\r\n    this.setState({\r\n      items: {\r\n        \"2021-12-23\": [\r\n          {\r\n            name: { id_agenda: 1, titulo: \"Dia de Vespera\" },\r\n            start: \"2021-12-23T13:45:00\",\r\n            end: \"2021-12-23 19:45\",\r\n            endereco: \"rua  bla bla bla\",\r\n          },\r\n          {\r\n            name: { id_agenda: 2, titulo: \"Dia de Vespera\" },\r\n            start: \"2020-06-09T18:45:00\",\r\n            end: \"2020-06-09 21:45\",\r\n            endereco: \"rua  bla bla bla\",\r\n          },\r\n        ],\r\n\r\n        \"2021-12-25\": [\r\n          {\r\n            name: { id_agenda: 3, titulo: \"Dia de Vespera\" },\r\n            start: \"2021-12-25T13:45:00\",\r\n            end: \"2021-12-25 19:45\",\r\n            endereco: \"rua  bla bla bla\",\r\n          },\r\n          {\r\n            name: { id_agenda: 4, titulo: \"Dia de Vespera\" },\r\n            start: \"2021-12-25T18:45:00\",\r\n            end: \"2021-12-25 21:45\",\r\n            endereco: \"rua  bla bla bla\",\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  }\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <TouchableOpacity\r\n        testID={\"item\"}\r\n        style={[styles.item, { height: item.height }]}\r\n        onPress={() => {\r\n          console.log(item);\r\n          Alert.alert(item.name);\r\n        }}\r\n      >\r\n        <Text>{item.name.titulo}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  rowHasChanged(r1, r2) {\r\n    return r1.name !== r2.name;\r\n  }\r\n\r\n  timeToString(time) {\r\n    const date = new Date(time);\r\n    return date.toISOString().split(\"T\")[0];\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}