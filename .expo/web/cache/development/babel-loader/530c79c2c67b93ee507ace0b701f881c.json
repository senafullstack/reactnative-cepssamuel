{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShortMergeRequest = void 0;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar ShortMergeRequest = function () {\n  function ShortMergeRequest(properties) {\n    _classCallCheck(this, ShortMergeRequest);\n\n    _defineProperty(this, \"properties\", void 0);\n\n    this.properties = properties;\n  }\n\n  _createClass(ShortMergeRequest, [{\n    key: \"forEach\",\n    value: function forEach(callback) {\n      this.entries().forEach(callback);\n    }\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      return this.entries().map(callback);\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      if (this.properties == null) {\n        return [];\n      }\n\n      return Object.entries(this.properties);\n    }\n  }]);\n\n  return ShortMergeRequest;\n}();\n\nexports.ShortMergeRequest = ShortMergeRequest;","map":{"version":3,"sources":["ShortMergeRequest.ts"],"names":["constructor","forEach","map","entries","Object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;IAEO,iB;AAELA,6BAAW,UAAXA,EAA8C;AAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,KAAA,CAAA,CAAA;;AAC5C,SAAA,UAAA,GAAA,UAAA;AACD;;;;WAEDC,iBAAO,QAAPA,EAA2D;AACzD,WAAA,OAAA,GAAA,OAAA,CAAA,QAAA;AACD;;;WAEDC,aAAG,QAAHA,EAAuD;AACrD,aAAO,KAAA,OAAA,GAAA,GAAA,CAAP,QAAO,CAAP;AACD;;;WAEDC,mBAAU;AACR,UAAI,KAAA,UAAA,IAAJ,IAAA,EAA6B;AAC3B,eAAA,EAAA;AACD;;AACD,aAAOC,MAAM,CAANA,OAAAA,CAAe,KAAtB,UAAOA,CAAP;AACD","sourcesContent":["import { CSSProperties } from './processor-types';\n\nexport class ShortMergeRequest {\n  public readonly properties: CSSProperties | null;\n  constructor(properties: CSSProperties | null) {\n    this.properties = properties;\n  }\n\n  forEach(callback: (record: CSSProperties[number]) => void) {\n    this.entries().forEach(callback);\n  }\n\n  map<T>(callback: (record: CSSProperties[number]) => T) {\n    return this.entries().map(callback);\n  }\n\n  entries() {\n    if (this.properties == null) {\n      return [];\n    }\n    return Object.entries(this.properties);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}