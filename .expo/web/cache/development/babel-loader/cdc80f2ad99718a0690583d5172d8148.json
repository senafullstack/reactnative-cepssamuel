{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pages\\\\VerEvento.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Card } from \"react-native-elements\";\nimport WebView from \"react-native-webview\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Globais from \"../Configs/Globais\";\nimport * as WebBrowser from \"expo-web-browser\";\nexport default (function (_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation,\n      titulo = _ref.titulo;\n\n  function Download(url) {\n    return _regeneratorRuntime.async(function Download$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(WebBrowser.openBrowserAsync(url));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    setDados(informacoes);\n  }, []);\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dados = _useState4[0],\n      setDados = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      carregando = _useState6[0],\n      setCarregando = _useState6[1];\n\n  var informacoes = route.params.informacoes;\n  return React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, carregando ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    animating: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }) : React.createElement(Card, {\n    containerStyle: {\n      width: \"90%\",\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, React.createElement(Card.Title, {\n    style: {\n      color: \"#43C1C4\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"TabEventos\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    style: {\n      color: \"#F38DAD\",\n      fontSize: 22\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, \" \", dados.titulo)))), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), React.createElement(Card.Image, {\n    source: {\n      uri: Globais.urladmin + dados.foto\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), React.createElement(WebView, {\n    source: {\n      html: dados.texto\n    },\n    style: {\n      fontSize: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }))));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: StatusBar.currentHeight\n  },\n  scrollView: {\n    marginHorizontal: 0\n  },\n  text: {\n    fontSize: 42\n  },\n  titulo: {\n    color: \"#43C1C4\",\n    fontSize: 20\n  },\n  a: {\n    fontWeight: \"300\",\n    color: \"#FF3366\"\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pages/VerEvento.tsx"],"names":["React","useEffect","useState","Icon","Card","WebView","Globais","WebBrowser","route","navigation","titulo","Download","url","openBrowserAsync","setDados","informacoes","useWindowDimensions","width","modalVisible","setModalVisible","dados","carregando","setCarregando","params","styles","scrollView","flexDirection","justifyContent","alignItems","borderRadius","color","navigate","fontSize","uri","urladmin","foto","html","texto","StyleSheet","create","container","flex","paddingTop","StatusBar","currentHeight","marginHorizontal","text","a","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { Input, Card, Button } from \"react-native-elements\";\r\nimport { MaskedTextInput } from \"react-native-mask-text\";\r\nimport WebView from \"react-native-webview\";\r\nimport Icone from \"../Configs/Icone\";\r\nimport {\r\n  View,\r\n  Modal,\r\n  StatusBar,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  Image,\r\n  Text,\r\n  useWindowDimensions,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Pressable,\r\n  Alert,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Globais from \"../Configs/Globais\";\r\nimport * as WebBrowser from \"expo-web-browser\";\r\nexport default ({ route, navigation, titulo }) => {\r\n  async function Download(url) {\r\n    await WebBrowser.openBrowserAsync(url);\r\n  }\r\n  useEffect(() => {\r\n    setDados(informacoes);\r\n  }, []);\r\n  const { width } = useWindowDimensions();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [dados, setDados] = useState([]);\r\n  const [carregando, setCarregando] = useState(false);\r\n\r\n  const informacoes = route.params.informacoes;\r\n\r\n  return (\r\n    <ScrollView style={styles.scrollView}>\r\n      <View\r\n        style={{\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {carregando ? (\r\n          <ActivityIndicator size=\"large\" animating={true} />\r\n        ) : (\r\n          <Card containerStyle={{ width: \"90%\", borderRadius: 10 }}>\r\n            <Card.Title style={{ color: \"#43C1C4\" }}>\r\n              <TouchableOpacity\r\n                onPress={() => navigation.navigate(\"TabEventos\")}\r\n              >\r\n                <Icon\r\n                  name=\"arrow-left\"\r\n                  style={{ color: \"#F38DAD\", fontSize: 22 }}\r\n                />\r\n                <View>\r\n                  <Text> {dados.titulo}</Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            </Card.Title>\r\n            <Card.Divider />\r\n            <Card.Image source={{ uri: Globais.urladmin + dados.foto }} />\r\n            <Card.Divider />\r\n\r\n            <WebView source={{ html: dados.texto }} style={{ fontSize: 40 }} />\r\n          </Card>\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n  },\r\n  scrollView: {\r\n    marginHorizontal: 0,\r\n  },\r\n  text: {\r\n    fontSize: 42,\r\n  },\r\n  titulo: {\r\n    color: \"#43C1C4\",\r\n    fontSize: 20,\r\n  },\r\n  a: {\r\n    fontWeight: \"300\",\r\n    color: \"#FF3366\", // make links coloured pink\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}