{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\agendaList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport get from 'lodash/get';\nimport map from 'lodash/map';\nimport omit from 'lodash/omit';\nimport isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport { isToday, isGTE, sameDate } from \"../dateutils\";\nimport { getMoment } from \"../momentResolver\";\nimport { parseDate } from \"../interface\";\nimport styleConstructor from \"./style\";\nimport asCalendarConsumer from \"./asCalendarConsumer\";\n\nvar commons = require(\"./commons\");\n\nvar updateSources = commons.UpdateSources;\n\nvar AgendaList = function (_Component) {\n  _inherits(AgendaList, _Component);\n\n  var _super = _createSuper(AgendaList);\n\n  function AgendaList() {\n    var _this;\n\n    _classCallCheck(this, AgendaList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.style = styleConstructor(_this.props.theme);\n    _this._topSection = get(_this.props, 'sections[0].title');\n    _this.didScroll = false;\n    _this.sectionScroll = false;\n    _this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n    _this.list = React.createRef();\n    _this.sectionHeight = 0;\n\n    _this.onViewableItemsChanged = function (info) {\n      if (info != null && info.viewableItems && !_this.sectionScroll) {\n        var topSection = get(info == null ? void 0 : info.viewableItems[0], 'section.title');\n\n        if (topSection && topSection !== _this._topSection) {\n          _this._topSection = topSection;\n\n          if (_this.didScroll && !_this.props.avoidDateUpdates) {\n            _this.props.context.setDate == null ? void 0 : _this.props.context.setDate(_this._topSection, updateSources.LIST_DRAG);\n          }\n        }\n      }\n    };\n\n    _this.onScroll = function (event) {\n      if (!_this.didScroll) {\n        _this.didScroll = true;\n      }\n\n      _this.props.onScroll == null ? void 0 : _this.props.onScroll(event);\n    };\n\n    _this.onMomentumScrollBegin = function (event) {\n      _this.props.context.setDisabled == null ? void 0 : _this.props.context.setDisabled(true);\n      _this.props.onMomentumScrollBegin == null ? void 0 : _this.props.onMomentumScrollBegin(event);\n    };\n\n    _this.onMomentumScrollEnd = function (event) {\n      _this.sectionScroll = false;\n      _this.props.context.setDisabled == null ? void 0 : _this.props.context.setDisabled(false);\n      _this.props.onMomentumScrollEnd == null ? void 0 : _this.props.onMomentumScrollEnd(event);\n    };\n\n    _this.onScrollToIndexFailed = function (info) {\n      if (_this.props.onScrollToIndexFailed) {\n        _this.props.onScrollToIndexFailed(info);\n      } else {\n        console.warn('onScrollToIndexFailed info: ', info);\n      }\n    };\n\n    _this.onHeaderLayout = function (event) {\n      _this.sectionHeight = event.nativeEvent.layout.height;\n    };\n\n    _this.renderSectionHeader = function (info) {\n      var _info$section;\n\n      var _this$props = _this.props,\n          renderSectionHeader = _this$props.renderSectionHeader,\n          sectionStyle = _this$props.sectionStyle;\n      var title = info == null ? void 0 : (_info$section = info.section) == null ? void 0 : _info$section.title;\n\n      if (renderSectionHeader) {\n        return renderSectionHeader(title);\n      }\n\n      return React.createElement(Text, {\n        allowFontScaling: false,\n        style: [_this.style.sectionText, sectionStyle],\n        onLayout: _this.onHeaderLayout,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }, _this.getSectionTitle(title));\n    };\n\n    _this.keyExtractor = function (item, index) {\n      var keyExtractor = _this.props.keyExtractor;\n      return isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n    };\n\n    return _this;\n  }\n\n  _createClass(AgendaList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var date = this.props.context.date;\n\n      if (date !== this._topSection) {\n        setTimeout(function () {\n          _this2.scrollToSection();\n        }, 500);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props$context = this.props.context,\n          updateSource = _this$props$context.updateSource,\n          date = _this$props$context.date;\n\n      if (date !== prevProps.context.date) {\n        if (updateSource !== updateSources.LIST_DRAG && updateSource !== updateSources.CALENDAR_INIT) {\n          this.scrollToSection();\n        }\n      }\n    }\n  }, {\n    key: \"getSectionIndex\",\n    value: function getSectionIndex(date) {\n      var i;\n      map(this.props.sections, function (section, index) {\n        if (section.title === date) {\n          i = index;\n          return;\n        }\n      });\n      return i;\n    }\n  }, {\n    key: \"getNextSectionIndex\",\n    value: function getNextSectionIndex(date) {\n      var i = 0;\n      var sections = this.props.sections;\n\n      for (var j = 1; j < sections.length; j++) {\n        var prev = parseDate(sections[j - 1].title);\n        var next = parseDate(sections[j].title);\n        var cur = parseDate(date);\n\n        if (isGTE(cur, prev) && isGTE(next, cur)) {\n          i = sameDate(prev, cur) ? j - 1 : j;\n          break;\n        } else if (isGTE(cur, next)) {\n          i = j;\n        }\n      }\n\n      return i;\n    }\n  }, {\n    key: \"getSectionTitle\",\n    value: function getSectionTitle(title) {\n      if (!title) return;\n      var _this$props2 = this.props,\n          dayFormatter = _this$props2.dayFormatter,\n          dayFormat = _this$props2.dayFormat,\n          useMoment = _this$props2.useMoment,\n          markToday = _this$props2.markToday;\n      var sectionTitle = title;\n\n      if (dayFormatter) {\n        sectionTitle = dayFormatter(title);\n      } else if (dayFormat) {\n        if (useMoment) {\n          var moment = getMoment();\n          sectionTitle = moment(title).format(dayFormat);\n        } else {\n          sectionTitle = new XDate(title).toString(dayFormat);\n        }\n      }\n\n      if (markToday) {\n        var todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n        var today = isToday(new XDate(title));\n        sectionTitle = today ? todayString + \", \" + sectionTitle : sectionTitle;\n      }\n\n      return sectionTitle;\n    }\n  }, {\n    key: \"scrollToSection\",\n    value: function scrollToSection() {\n      var _this$list;\n\n      var date = this.props.context.date;\n      var _this$props3 = this.props,\n          scrollToNextEvent = _this$props3.scrollToNextEvent,\n          sections = _this$props3.sections,\n          _this$props3$viewOffs = _this$props3.viewOffset,\n          viewOffset = _this$props3$viewOffs === void 0 ? 0 : _this$props3$viewOffs;\n      var sectionIndex = scrollToNextEvent ? this.getNextSectionIndex(date) : this.getSectionIndex(date);\n\n      if (isUndefined(sectionIndex)) {\n        return;\n      }\n\n      if ((_this$list = this.list) != null && _this$list.current && sectionIndex !== undefined) {\n        this.sectionScroll = true;\n        this._topSection = sections[sectionIndex].title;\n        this.list.current.scrollToLocation({\n          animated: true,\n          sectionIndex: sectionIndex,\n          itemIndex: 0,\n          viewPosition: 0,\n          viewOffset: (commons.isAndroid ? this.sectionHeight : 0) + viewOffset\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = omit(this.props, 'context');\n      return React.createElement(SectionList, _extends({}, props, {\n        ref: this.list,\n        keyExtractor: this.keyExtractor,\n        showsVerticalScrollIndicator: false,\n        onViewableItemsChanged: this.onViewableItemsChanged,\n        viewabilityConfig: this.viewabilityConfig,\n        renderSectionHeader: this.renderSectionHeader,\n        onScroll: this.onScroll,\n        onMomentumScrollBegin: this.onMomentumScrollBegin,\n        onMomentumScrollEnd: this.onMomentumScrollEnd,\n        onScrollToIndexFailed: this.onScrollToIndexFailed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return AgendaList;\n}(Component);\n\nAgendaList.displayName = 'AgendaList';\nAgendaList.propTypes = {\n  dayFormat: PropTypes.string,\n  dayFormatter: PropTypes.func,\n  useMoment: PropTypes.bool,\n  markToday: PropTypes.bool,\n  sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  avoidDateUpdates: PropTypes.bool\n};\nAgendaList.defaultProps = {\n  dayFormat: 'dddd, MMM d',\n  stickySectionHeadersEnabled: true,\n  markToday: true\n};\nexport default asCalendarConsumer(AgendaList);","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/node_modules/react-native-calendars/src/expandableCalendar/agendaList.js"],"names":["get","map","omit","isFunction","isUndefined","PropTypes","XDate","React","Component","isToday","isGTE","sameDate","getMoment","parseDate","styleConstructor","asCalendarConsumer","commons","require","updateSources","UpdateSources","AgendaList","style","props","theme","_topSection","didScroll","sectionScroll","viewabilityConfig","itemVisiblePercentThreshold","list","createRef","sectionHeight","onViewableItemsChanged","info","viewableItems","topSection","avoidDateUpdates","context","setDate","LIST_DRAG","onScroll","event","onMomentumScrollBegin","setDisabled","onMomentumScrollEnd","onScrollToIndexFailed","console","warn","onHeaderLayout","nativeEvent","layout","height","renderSectionHeader","sectionStyle","title","section","sectionText","getSectionTitle","keyExtractor","item","index","String","date","setTimeout","scrollToSection","prevProps","updateSource","CALENDAR_INIT","i","sections","j","length","prev","next","cur","dayFormatter","dayFormat","useMoment","markToday","sectionTitle","moment","format","toString","todayString","locales","defaultLocale","today","scrollToNextEvent","viewOffset","sectionIndex","getNextSectionIndex","getSectionIndex","current","undefined","scrollToLocation","animated","itemIndex","viewPosition","isAndroid","displayName","propTypes","string","func","bool","oneOfType","object","number","array","defaultProps","stickySectionHeadersEnabled"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\nimport map from 'lodash/map';\nimport omit from 'lodash/omit';\nimport isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { Text, SectionList } from 'react-native';\nimport { isToday, isGTE, sameDate } from '../dateutils';\nimport { getMoment } from '../momentResolver';\nimport { parseDate } from '../interface';\nimport styleConstructor from './style';\nimport asCalendarConsumer from './asCalendarConsumer';\nconst commons = require('./commons');\nconst updateSources = commons.UpdateSources;\n/**\n * @description: AgendaList component\n * @note: Should be wrapped with 'CalendarProvider'\n * @extends: SectionList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass AgendaList extends Component {\n    static displayName = 'AgendaList';\n    static propTypes = {\n        // ...SectionList.propTypes,\n        /** day format in section title. Formatting values: http://arshaw.com/xdate/#Formatting */\n        dayFormat: PropTypes.string,\n        /** a function to custom format the section header's title */\n        dayFormatter: PropTypes.func,\n        /** whether to use moment.js for date string formatting\n         * (remember to pass 'dayFormat' with appropriate format, like 'dddd, MMM D') */\n        useMoment: PropTypes.bool,\n        /** whether to mark today's title with the \"Today, ...\" string. Default = true */\n        markToday: PropTypes.bool,\n        /** style passed to the section view */\n        sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n        /** whether to block the date change in calendar (and calendar context provider) when agenda scrolls */\n        avoidDateUpdates: PropTypes.bool\n    };\n    static defaultProps = {\n        dayFormat: 'dddd, MMM d',\n        stickySectionHeadersEnabled: true,\n        markToday: true\n    };\n    style = styleConstructor(this.props.theme);\n    _topSection = get(this.props, 'sections[0].title');\n    didScroll = false;\n    sectionScroll = false;\n    viewabilityConfig = {\n        itemVisiblePercentThreshold: 20 // 50 means if 50% of the item is visible\n    };\n    list = React.createRef();\n    sectionHeight = 0;\n    componentDidMount() {\n        const { date } = this.props.context;\n        if (date !== this._topSection) {\n            setTimeout(() => {\n                this.scrollToSection();\n            }, 500);\n        }\n    }\n    componentDidUpdate(prevProps) {\n        const { updateSource, date } = this.props.context;\n        if (date !== prevProps.context.date) {\n            // NOTE: on first init data should set first section to the current date!!!\n            if (updateSource !== updateSources.LIST_DRAG && updateSource !== updateSources.CALENDAR_INIT) {\n                this.scrollToSection();\n            }\n        }\n    }\n    getSectionIndex(date) {\n        let i;\n        map(this.props.sections, (section, index) => {\n            // NOTE: sections titles should match current date format!!!\n            if (section.title === date) {\n                i = index;\n                return;\n            }\n        });\n        return i;\n    }\n    getNextSectionIndex(date) {\n        let i = 0;\n        const { sections } = this.props;\n        for (let j = 1; j < sections.length; j++) {\n            const prev = parseDate(sections[j - 1].title);\n            const next = parseDate(sections[j].title);\n            const cur = parseDate(date);\n            if (isGTE(cur, prev) && isGTE(next, cur)) {\n                i = sameDate(prev, cur) ? j - 1 : j;\n                break;\n            }\n            else if (isGTE(cur, next)) {\n                i = j;\n            }\n        }\n        return i;\n    }\n    getSectionTitle(title) {\n        if (!title)\n            return;\n        const { dayFormatter, dayFormat, useMoment, markToday } = this.props;\n        let sectionTitle = title;\n        if (dayFormatter) {\n            sectionTitle = dayFormatter(title);\n        }\n        else if (dayFormat) {\n            if (useMoment) {\n                const moment = getMoment();\n                sectionTitle = moment(title).format(dayFormat);\n            }\n            else {\n                sectionTitle = new XDate(title).toString(dayFormat);\n            }\n        }\n        if (markToday) {\n            // @ts-expect-error\n            const todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n            const today = isToday(new XDate(title));\n            sectionTitle = today ? `${todayString}, ${sectionTitle}` : sectionTitle;\n        }\n        return sectionTitle;\n    }\n    scrollToSection() {\n        const { date } = this.props.context;\n        const { scrollToNextEvent, sections, viewOffset = 0 } = this.props;\n        const sectionIndex = scrollToNextEvent ? this.getNextSectionIndex(date) : this.getSectionIndex(date);\n        if (isUndefined(sectionIndex)) {\n            return;\n        }\n        if (this.list?.current && sectionIndex !== undefined) {\n            this.sectionScroll = true; // to avoid setDate() in onViewableItemsChanged\n            this._topSection = sections[sectionIndex].title;\n            this.list.current.scrollToLocation({\n                animated: true,\n                sectionIndex: sectionIndex,\n                itemIndex: 0,\n                viewPosition: 0,\n                viewOffset: (commons.isAndroid ? this.sectionHeight : 0) + viewOffset\n            });\n        }\n    }\n    onViewableItemsChanged = (info) => {\n        if (info?.viewableItems && !this.sectionScroll) {\n            const topSection = get(info?.viewableItems[0], 'section.title');\n            if (topSection && topSection !== this._topSection) {\n                this._topSection = topSection;\n                if (this.didScroll && !this.props.avoidDateUpdates) {\n                    // to avoid setDate() on first load (while setting the initial context.date value)\n                    this.props.context.setDate?.(this._topSection, updateSources.LIST_DRAG);\n                }\n            }\n        }\n    };\n    onScroll = (event) => {\n        if (!this.didScroll) {\n            this.didScroll = true;\n        }\n        this.props.onScroll?.(event);\n    };\n    onMomentumScrollBegin = (event) => {\n        this.props.context.setDisabled?.(true);\n        this.props.onMomentumScrollBegin?.(event);\n    };\n    onMomentumScrollEnd = (event) => {\n        // when list momentum ends AND when scrollToSection scroll ends\n        this.sectionScroll = false;\n        this.props.context.setDisabled?.(false);\n        this.props.onMomentumScrollEnd?.(event);\n    };\n    onScrollToIndexFailed = (info) => {\n        if (this.props.onScrollToIndexFailed) {\n            this.props.onScrollToIndexFailed(info);\n        }\n        else {\n            console.warn('onScrollToIndexFailed info: ', info);\n        }\n    };\n    onHeaderLayout = (event) => {\n        this.sectionHeight = event.nativeEvent.layout.height;\n    };\n    renderSectionHeader = (info) => {\n        const { renderSectionHeader, sectionStyle } = this.props;\n        const title = info?.section?.title;\n        if (renderSectionHeader) {\n            return renderSectionHeader(title);\n        }\n        return (<Text allowFontScaling={false} style={[this.style.sectionText, sectionStyle]} onLayout={this.onHeaderLayout}>\n        {this.getSectionTitle(title)}\n      </Text>);\n    };\n    keyExtractor = (item, index) => {\n        const { keyExtractor } = this.props;\n        return isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n    };\n    render() {\n        const props = omit(this.props, 'context');\n        return (<SectionList {...props} ref={this.list} keyExtractor={this.keyExtractor} showsVerticalScrollIndicator={false} onViewableItemsChanged={this.onViewableItemsChanged} viewabilityConfig={this.viewabilityConfig} renderSectionHeader={this.renderSectionHeader} onScroll={this.onScroll} onMomentumScrollBegin={this.onMomentumScrollBegin} onMomentumScrollEnd={this.onMomentumScrollEnd} onScrollToIndexFailed={this.onScrollToIndexFailed}/>);\n    }\n}\nexport default asCalendarConsumer(AgendaList);\n"]},"metadata":{},"sourceType":"module"}