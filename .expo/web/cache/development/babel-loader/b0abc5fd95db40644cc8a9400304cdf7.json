{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _defineProperty2 = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TStyles = void 0;\n\nvar _cssProcessor = require(\"@native-html/css-processor\");\n\nvar _isNil = _interopRequireDefault(require(\"ramda/src/isNil\"));\n\nvar _not = _interopRequireDefault(require(\"ramda/src/not\"));\n\nvar _compose = _interopRequireDefault(require(\"ramda/src/compose\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar notNil = (0, _compose.default)(_not.default, _isNil.default);\n\nfunction inheritProperties() {\n  for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  var realProperties = properties.filter(notNil);\n\n  if (realProperties.length === 1) {\n    return realProperties[0];\n  }\n\n  if (Object.keys(realProperties[0]).length === 0) {\n    return realProperties[1];\n  }\n\n  return realProperties.reduce(function (prev, curr) {\n    return _objectSpread(_objectSpread({}, prev), curr);\n  }, Object.prototype);\n}\n\nvar TStyles = function () {\n  function TStyles(ownProcessedProps, parentStyles) {\n    _classCallCheck(this, TStyles);\n\n    _defineProperty(this, \"nativeTextFlow\", void 0);\n\n    _defineProperty(this, \"nativeBlockFlow\", void 0);\n\n    _defineProperty(this, \"nativeTextRet\", void 0);\n\n    _defineProperty(this, \"nativeBlockRet\", void 0);\n\n    _defineProperty(this, \"webTextFlow\", void 0);\n\n    _defineProperty(this, \"webBlockRet\", void 0);\n\n    this.nativeTextFlow = inheritProperties(parentStyles === null || parentStyles === void 0 ? void 0 : parentStyles.nativeTextFlow, ownProcessedProps.native.text.flow);\n    this.nativeBlockFlow = inheritProperties(parentStyles === null || parentStyles === void 0 ? void 0 : parentStyles.nativeBlockFlow, ownProcessedProps.native.block.flow);\n    this.webTextFlow = inheritProperties(parentStyles === null || parentStyles === void 0 ? void 0 : parentStyles.webTextFlow, ownProcessedProps.web.text.flow);\n    this.nativeTextRet = inheritProperties(parentStyles === null || parentStyles === void 0 ? void 0 : parentStyles.nativeTextRet, ownProcessedProps.native.text.retain);\n    this.nativeBlockRet = ownProcessedProps.native.block.retain;\n    this.webBlockRet = ownProcessedProps.web.block.retain;\n  }\n\n  _createClass(TStyles, null, [{\n    key: \"empty\",\n    value: function empty() {\n      return new TStyles(new _cssProcessor.CSSProcessedProps());\n    }\n  }]);\n\n  return TStyles;\n}();\n\nexports.TStyles = TStyles;","map":{"version":3,"sources":["TStyles.ts"],"names":["notNil","not","nil","realProperties","properties","Object","curr","constructor","inheritProperties","parentStyles","ownProcessedProps","empty","CSSProcessedProps"],"mappings":"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","sourcesContent":["import { CSSProperties, CSSProcessedProps } from '@native-html/css-processor';\nimport nil from 'ramda/src/isNil';\nimport not from 'ramda/src/not';\nimport compose from 'ramda/src/compose';\n\nconst notNil = compose(not, nil);\n/**\n * A merge properties from left to right.\n *\n * @param child\n * @param parent\n */\nfunction inheritProperties(\n  ...properties: Array<CSSProperties | null | undefined>\n): CSSProperties {\n  const realProperties = properties.filter(notNil) as CSSProperties[];\n  if (realProperties.length === 1) {\n    return realProperties[0];\n  }\n  if (Object.keys(realProperties[0]).length === 0) {\n    return realProperties[1];\n  }\n  return realProperties.reduce(\n    (prev, curr) => ({ ...prev, ...curr }),\n    Object.prototype as CSSProperties\n  ) as CSSProperties;\n}\n\n/**\n * A record of styles organized in logical chunks:\n *\n * - wether they are supported in React Native (native) and others (web).\n * - wether they target native Views (block) or Text (text).\n * - wether they are inherited by this node's children (flow) or not (retain).\n *\n * @public\n */\nexport interface TStylesShape {\n  readonly nativeTextFlow: CSSProcessedProps['native']['text']['flow'];\n  readonly nativeBlockFlow: CSSProcessedProps['native']['block']['flow'];\n  readonly nativeTextRet: CSSProcessedProps['native']['text']['retain'];\n  readonly nativeBlockRet: CSSProcessedProps['native']['block']['retain'];\n  readonly webTextFlow: CSSProcessedProps['web']['text']['flow'];\n  readonly webBlockRet: CSSProcessedProps['web']['block']['retain'];\n}\n\nexport class TStyles implements TStylesShape {\n  public readonly nativeTextFlow: CSSProcessedProps['native']['text']['flow'];\n  public readonly nativeBlockFlow: CSSProcessedProps['native']['block']['flow'];\n  public readonly nativeTextRet: CSSProcessedProps['native']['text']['retain'];\n  public readonly nativeBlockRet: CSSProcessedProps['native']['block']['retain'];\n  public readonly webTextFlow: CSSProcessedProps['web']['text']['flow'];\n  public readonly webBlockRet: CSSProcessedProps['web']['block']['retain'];\n\n  constructor(\n    ownProcessedProps: CSSProcessedProps,\n    parentStyles?: TStyles | null\n  ) {\n    this.nativeTextFlow = inheritProperties(\n      parentStyles?.nativeTextFlow,\n      ownProcessedProps.native.text.flow\n    );\n    this.nativeBlockFlow = inheritProperties(\n      parentStyles?.nativeBlockFlow,\n      ownProcessedProps.native.block.flow\n    );\n    this.webTextFlow = inheritProperties(\n      parentStyles?.webTextFlow,\n      ownProcessedProps.web.text.flow\n    );\n    // In theory, we shouldn't merge those properties. However, these\n    // properties being textDecoration*, we actually want children nodes to\n    // inherit from them. A cleaner solution would be to to let each TNode\n    // handle its merging logic, because only TPhrasing and TText nodes would\n    // need to merge these.\n    this.nativeTextRet = inheritProperties(\n      parentStyles?.nativeTextRet,\n      ownProcessedProps.native.text.retain\n    );\n    this.nativeBlockRet = ownProcessedProps.native.block.retain;\n    this.webBlockRet = ownProcessedProps.web.block.retain;\n  }\n\n  static empty(): TStyles {\n    return new TStyles(new CSSProcessedProps());\n  }\n}\n"]},"metadata":{},"sourceType":"script"}