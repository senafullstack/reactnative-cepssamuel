{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useMemo } from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport MarkerBox from \"./MarkerBox\";\n\nvar defaultRenderMarker = function defaultRenderMarker(props) {\n  return React.createElement(MarkerBox, props);\n};\n\nvar defaultComputeMarkerBoxWidth = function defaultComputeMarkerBoxWidth(maxNumOfCodepoints, fontSize) {\n  return maxNumOfCodepoints * fontSize * 0.6;\n};\n\nvar DEFAULT_FONT_SIZE = 14;\nexport default function useMarkedList(_ref) {\n  var counterRenderer = _ref.counterRenderer,\n      _ref$startIndex = _ref.startIndex,\n      startIndex = _ref$startIndex === void 0 ? 1 : _ref$startIndex,\n      lineStyle = _ref.lineStyle,\n      _ref$rtlLineReversed = _ref.rtlLineReversed,\n      rtlLineReversed = _ref$rtlLineReversed === void 0 ? false : _ref$rtlLineReversed,\n      _ref$rtlMarkerReverse = _ref.rtlMarkerReversed,\n      rtlMarkerReversed = _ref$rtlMarkerReverse === void 0 ? false : _ref$rtlMarkerReverse,\n      markerTextStyle = _ref.markerTextStyle,\n      markerBoxStyle = _ref.markerBoxStyle,\n      _ref$dynamicMarkerBox = _ref.dynamicMarkerBoxWidth,\n      dynamicMarkerBoxWidth = _ref$dynamicMarkerBox === void 0 ? true : _ref$dynamicMarkerBox,\n      _ref$length = _ref.length,\n      length = _ref$length === void 0 ? 0 : _ref$length,\n      _ref$renderMarker = _ref.renderMarker,\n      renderMarker = _ref$renderMarker === void 0 ? defaultRenderMarker : _ref$renderMarker,\n      _ref$enableMarkerClip = _ref.enableMarkerClipping,\n      enableMarkerClipping = _ref$enableMarkerClip === void 0 ? false : _ref$enableMarkerClip,\n      _ref$computeMarkerBox = _ref.computeMarkerBoxWidth,\n      computeMarkerBoxWidth = _ref$computeMarkerBox === void 0 ? defaultComputeMarkerBoxWidth : _ref$computeMarkerBox;\n  var maxNumOfCodepoints = useMemo(function () {\n    return counterRenderer.maxMarkerLenInRange(startIndex, startIndex + length - 1);\n  }, [counterRenderer, length, startIndex]);\n  var syntheticRtlLineReversed = !I18nManager.isRTL && rtlLineReversed;\n  var markerTextWidth = useMemo(function () {\n    var _markerTextStyle$font;\n\n    return dynamicMarkerBoxWidth && computeMarkerBoxWidth(maxNumOfCodepoints, (_markerTextStyle$font = markerTextStyle === null || markerTextStyle === void 0 ? void 0 : markerTextStyle.fontSize) !== null && _markerTextStyle$font !== void 0 ? _markerTextStyle$font : DEFAULT_FONT_SIZE);\n  }, [computeMarkerBoxWidth, markerTextStyle === null || markerTextStyle === void 0 ? void 0 : markerTextStyle.fontSize, maxNumOfCodepoints, dynamicMarkerBoxWidth]);\n  var renderer = useMemo(function () {\n    return rtlMarkerReversed ? counterRenderer.withRtl(rtlMarkerReversed === true ? undefined : rtlMarkerReversed) : counterRenderer;\n  }, [counterRenderer, rtlMarkerReversed]);\n  var syntheticMarkerTextStyle = useMemo(function () {\n    return _objectSpread({\n      flexGrow: 0,\n      flexShrink: 0,\n      fontSize: DEFAULT_FONT_SIZE,\n      textAlign: syntheticRtlLineReversed ? 'left' : 'right',\n      alignSelf: syntheticRtlLineReversed ? 'flex-start' : 'flex-end'\n    }, markerTextStyle);\n  }, [markerTextStyle, syntheticRtlLineReversed]);\n  return {\n    maxNumOfCodepoints: maxNumOfCodepoints,\n    rtlMarkerReversed: rtlMarkerReversed,\n    markerTextWidth: markerTextWidth,\n    renderMarker: renderMarker,\n    startIndex: startIndex,\n    rtlLineReversed: syntheticRtlLineReversed,\n    markerTextStyle: syntheticMarkerTextStyle,\n    markerBoxStyle: markerBoxStyle,\n    counterRenderer: renderer,\n    style: lineStyle,\n    enableMarkerClipping: enableMarkerClipping\n  };\n}","map":{"version":3,"sources":["useMarkedList.ts"],"names":["defaultRenderMarker","props","React","defaultComputeMarkerBoxWidth","maxNumOfCodepoints","DEFAULT_FONT_SIZE","startIndex","rtlLineReversed","rtlMarkerReversed","dynamicMarkerBoxWidth","length","renderMarker","enableMarkerClipping","computeMarkerBoxWidth","useMemo","counterRenderer","syntheticRtlLineReversed","I18nManager","markerTextWidth","markerTextStyle","renderer","syntheticMarkerTextStyle","flexGrow","flexShrink","fontSize","textAlign","alignSelf","markerBoxStyle","style"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { I18nManager } from 'react-native';\nimport MarkerBox from './MarkerBox';\nimport { MarkedListItemProps } from './MarkedListItem';\nimport { MarkedListProps } from './shared-types';\n\nconst defaultRenderMarker: NonNullable<MarkedListProps['renderMarker']> = (\n  props\n) => React.createElement(MarkerBox, props);\n\nconst defaultComputeMarkerBoxWidth: NonNullable<\n  MarkedListProps['computeMarkerBoxWidth']\n> = (maxNumOfCodepoints, fontSize) => maxNumOfCodepoints * fontSize * 0.6;\n\nconst DEFAULT_FONT_SIZE = 14;\n\n/**\n * A hook to reuse MarkedList logic to render custom lists components in\n * combination with {@link MarkedListItem}.\n *\n * @public\n */\nexport default function useMarkedList({\n  counterRenderer,\n  startIndex = 1,\n  lineStyle,\n  rtlLineReversed = false,\n  rtlMarkerReversed = false,\n  markerTextStyle,\n  markerBoxStyle,\n  dynamicMarkerBoxWidth = true,\n  length = 0,\n  renderMarker = defaultRenderMarker,\n  enableMarkerClipping = false,\n  computeMarkerBoxWidth = defaultComputeMarkerBoxWidth\n}: MarkedListProps & { length: number }): Omit<MarkedListItemProps, 'index'> {\n  const maxNumOfCodepoints = useMemo(\n    () =>\n      counterRenderer.maxMarkerLenInRange(startIndex, startIndex + length - 1),\n    [counterRenderer, length, startIndex]\n  );\n  const syntheticRtlLineReversed = !I18nManager.isRTL && rtlLineReversed;\n  const markerTextWidth = useMemo(\n    () =>\n      dynamicMarkerBoxWidth &&\n      computeMarkerBoxWidth(\n        maxNumOfCodepoints,\n        markerTextStyle?.fontSize ?? DEFAULT_FONT_SIZE\n      ),\n    [\n      computeMarkerBoxWidth,\n      markerTextStyle?.fontSize,\n      maxNumOfCodepoints,\n      dynamicMarkerBoxWidth\n    ]\n  );\n  const renderer = useMemo(\n    () =>\n      rtlMarkerReversed\n        ? counterRenderer.withRtl(\n            rtlMarkerReversed === true ? undefined : rtlMarkerReversed\n          )\n        : counterRenderer,\n    [counterRenderer, rtlMarkerReversed]\n  );\n  const syntheticMarkerTextStyle = useMemo(\n    () =>\n      ({\n        flexGrow: 0,\n        flexShrink: 0,\n        fontSize: DEFAULT_FONT_SIZE,\n        textAlign: syntheticRtlLineReversed ? 'left' : 'right',\n        alignSelf: syntheticRtlLineReversed ? 'flex-start' : 'flex-end',\n        ...markerTextStyle\n      } as const),\n    [markerTextStyle, syntheticRtlLineReversed]\n  );\n  return {\n    maxNumOfCodepoints,\n    rtlMarkerReversed,\n    markerTextWidth,\n    renderMarker,\n    startIndex,\n    rtlLineReversed: syntheticRtlLineReversed,\n    markerTextStyle: syntheticMarkerTextStyle,\n    markerBoxStyle: markerBoxStyle as any,\n    counterRenderer: renderer,\n    style: lineStyle,\n    enableMarkerClipping\n  };\n}\n"]},"metadata":{},"sourceType":"module"}