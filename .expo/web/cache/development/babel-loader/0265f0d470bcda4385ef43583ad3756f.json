{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pages\\\\PageLogin.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input, Card, Button } from \"react-native-elements\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Globais from \"../Configs/Globais\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      titulo = _ref.titulo;\n\n  var _useState = useState(\"maria@maria.com.br\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setemail = _useState2[1];\n\n  var _useState3 = useState(\"123456\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      senha = _useState4[0],\n      setsenha = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dados = _useState6[0],\n      setDados = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      temerro = _useState8[0],\n      settemErro = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mensagem = _useState10[0],\n      setmensagem = _useState10[1];\n\n  var Armazenar = function Armazenar(chave, valor) {\n    AsyncStorage.setItem(chave, valor);\n  };\n\n  var storeData = function storeData(chave, value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@storage_Key\", jsonValue));\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var Buscar = function Buscar(chave) {\n    var valor;\n    return _regeneratorRuntime.async(function Buscar$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(chave));\n\n          case 2:\n            valor = _context2.sent;\n            return _context2.abrupt(\"return\", valor);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var dadosFormdata = new FormData();\n  dadosFormdata.append(\"username\", email);\n  dadosFormdata.append(\"password\", senha);\n  var requestPost = {\n    method: \"POST\",\n    body: dadosFormdata\n  };\n\n  function logincandidato() {\n    var url = Globais.url + \"login\";\n    fetch(url, requestPost).then(function (resp) {\n      return resp.json();\n    }).then(function (json) {\n      var dadosretorno = json;\n\n      if (dadosretorno.error == \"Unauthorized\") {\n        settemErro(true);\n        setmensagem(dadosretorno.info);\n      } else {\n        Globais.nomeusuario = dadosretorno.nome;\n        Globais.emailusuario = dadosretorno.email;\n        Globais.logado = true;\n        Globais.token = dadosretorno.token;\n        Globais.fotousuario = dadosretorno.foto;\n        Armazenar(\"dadoslogin\", dadosretorno);\n        Armazenar(\"nomeusuario\", dadosretorno.nome);\n        Armazenar(\"emailusuario\", dadosretorno.email);\n        Armazenar(\"fotousuario\", dadosretorno.foto);\n        Armazenar(\"logado\", \"true\");\n        Armazenar(\"token\", dadosretorno.token);\n        setDados(json.login);\n        navigation.navigate(\"AppInicio\");\n      }\n    }).catch(function (e) {\n      alert(\"erro\" + e);\n    }).finally(function () {});\n  }\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: estilos.image,\n    source: require(\"../assets/images/logo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), React.createElement(Card, {\n    containerStyle: {\n      width: \"90%\",\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Title, {\n    style: {\n      color: \"#43C1C4\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Bem vindo(a)\"), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(texto) {\n      setemail(texto);\n    },\n    style: {\n      color: \"#F38DAD\"\n    },\n    value: email,\n    placeholder: \"Email\",\n    leftIcon: {\n      type: \"font-awesome\",\n      name: \"user\",\n      color: \"#F38DAD\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    secureTextEntry: true,\n    placeholder: \"Senha\",\n    value: senha,\n    style: {\n      color: \"#F38DAD\"\n    },\n    onChangeText: function onChangeText(texto) {\n      setsenha(texto);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      size: 24,\n      color: \"#F38DAD\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    buttonStyle: {\n      backgroundColor: \"#5BA3D9\"\n    },\n    onPress: function onPress() {\n      return logincandidato();\n    },\n    icon: React.createElement(Icon, {\n      name: \"arrow-right\",\n      size: 18,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }),\n    title: \"Entrar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), temerro ? React.createElement(View, {\n    style: {\n      width: \"100%\",\n      height: 15,\n      alignContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, mensagem)) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }))));\n});\nvar estilos = StyleSheet.create({\n  image: {\n    width: 300,\n    height: 300,\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pages/PageLogin.tsx"],"names":["React","useState","Icon","Input","Card","Button","AsyncStorage","Globais","navigation","titulo","email","setemail","senha","setsenha","dados","setDados","temerro","settemErro","mensagem","setmensagem","Armazenar","chave","valor","setItem","storeData","value","jsonValue","JSON","stringify","Buscar","getItem","dadosFormdata","FormData","append","requestPost","method","body","logincandidato","url","fetch","then","resp","json","dadosretorno","error","info","nomeusuario","nome","emailusuario","logado","token","fotousuario","foto","login","navigate","catch","e","alert","finally","flexDirection","justifyContent","alignItems","estilos","image","require","width","borderRadius","color","texto","type","name","backgroundColor","height","alignContent","fontSize","StyleSheet","create","resizeMode"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { Input, Card, Button } from \"react-native-elements\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Image,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Globais from \"../Configs/Globais\";\r\nexport default ({ navigation, titulo }) => {\r\n  const [email, setemail] = useState(\"maria@maria.com.br\");\r\n  const [senha, setsenha] = useState(\"123456\");\r\n  const [dados, setDados] = useState([]);\r\n  const [temerro, settemErro] = useState(false);\r\n  const [mensagem, setmensagem] = useState(\"\");\r\n\r\n  const Armazenar = (chave, valor) => {\r\n    AsyncStorage.setItem(chave, valor);\r\n  };\r\n\r\n  const storeData = async (chave, value) => {\r\n    try {\r\n      const jsonValue = JSON.stringify(value);\r\n      await AsyncStorage.setItem(\"@storage_Key\", jsonValue);\r\n    } catch (e) {\r\n      // saving error\r\n    }\r\n  };\r\n  const Buscar = async (chave) => {\r\n    const valor = await AsyncStorage.getItem(chave);\r\n    return valor;\r\n  };\r\n\r\n  var dadosFormdata = new FormData();\r\n  dadosFormdata.append(\"username\", email);\r\n  dadosFormdata.append(\"password\", senha);\r\n\r\n  var requestPost = {\r\n    method: \"POST\",\r\n    body: dadosFormdata,\r\n  };\r\n\r\n  function logincandidato() {\r\n    var url = Globais.url + \"login\";\r\n\r\n    fetch(url, requestPost)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        let dadosretorno = json;\r\n\r\n        if (dadosretorno.error == \"Unauthorized\") {\r\n          settemErro(true);\r\n\r\n          setmensagem(dadosretorno.info);\r\n        } else {\r\n          Globais.nomeusuario = dadosretorno.nome;\r\n          Globais.emailusuario = dadosretorno.email;\r\n          Globais.logado = true;\r\n          Globais.token = dadosretorno.token;\r\n          Globais.fotousuario = dadosretorno.foto;\r\n          Armazenar(\"dadoslogin\", dadosretorno);\r\n          Armazenar(\"nomeusuario\", dadosretorno.nome);\r\n          Armazenar(\"emailusuario\", dadosretorno.email);\r\n          Armazenar(\"fotousuario\", dadosretorno.foto);\r\n          Armazenar(\"logado\", \"true\");\r\n          Armazenar(\"token\", dadosretorno.token);\r\n\r\n          setDados(json.login);\r\n          navigation.navigate(\"AppInicio\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        alert(\"erro\" + e);\r\n      })\r\n      .finally(() => {\r\n        //alert(\"fim\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View\r\n        style={{\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Image\r\n          style={estilos.image}\r\n          source={require(\"../assets/images/logo.png\")}\r\n        />\r\n\r\n        <Card containerStyle={{ width: \"90%\", borderRadius: 10 }}>\r\n          <Card.Title style={{ color: \"#43C1C4\" }}>Bem vindo(a)</Card.Title>\r\n          <Card.Divider />\r\n          <Input\r\n            onChangeText={(texto) => {\r\n              setemail(texto);\r\n            }}\r\n            style={{ color: \"#F38DAD\" }}\r\n            value={email}\r\n            placeholder=\"Email\"\r\n            leftIcon={{ type: \"font-awesome\", name: \"user\", color: \"#F38DAD\" }}\r\n          />\r\n\r\n          <Input\r\n            secureTextEntry={true}\r\n            placeholder=\"Senha\"\r\n            value={senha}\r\n            style={{ color: \"#F38DAD\" }}\r\n            onChangeText={(texto) => {\r\n              setsenha(texto);\r\n            }}\r\n            leftIcon={<Icon name=\"lock\" size={24} color=\"#F38DAD\" />}\r\n          />\r\n          <Button\r\n            buttonStyle={{ backgroundColor: \"#5BA3D9\" }}\r\n            onPress={() => logincandidato()}\r\n            icon={<Icon name=\"arrow-right\" size={18} color=\"white\" />}\r\n            title=\"Entrar\"\r\n          />\r\n          {temerro ? (\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 15,\r\n                alignContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: 20,\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                {mensagem}\r\n              </Text>\r\n            </View>\r\n          ) : (\r\n            <View></View>\r\n          )}\r\n        </Card>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst estilos = StyleSheet.create({\r\n  image: {\r\n    width: 300,\r\n    height: 300,\r\n    resizeMode: \"contain\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}