{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\reactnative\\\\AppRh\\\\Pages\\\\PageLogin.tsx\";\n\nimport React, { useState } from \"react\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input, Card, Button } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Globais from \"../Configs/Globais\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      titulo = _ref.titulo;\n  var nome = Globais.url;\n  Globais.nomeusuario = \"joao\";\n  Globais.limparvariaveis();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setemail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      senha = _useState4[0],\n      setsenha = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dados = _useState6[0],\n      setDados = _useState6[1];\n\n  var requestPost = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      senha: senha\n    })\n  };\n\n  function logincandidato() {\n    fetch(Globais.url + \"candidato/login\", JSON.stringify({\n      email: email,\n      senha: senha\n    })).then(function (resp) {\n      return resp.json();\n    }).then(function (json) {\n      console.log(json);\n    }).catch(function (e) {\n      alert(\"erro\" + e);\n    }).finally(function () {\n      alert(\"fim\");\n    });\n  }\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Card.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, Globais.nomeusuario, \" \", email), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(texto) {\n      setemail(texto);\n    },\n    value: email,\n    placeholder: \"Email\",\n    leftIcon: {\n      type: \"font-awesome\",\n      name: \"user\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    secureTextEntry: true,\n    placeholder: \"Senha\",\n    value: senha,\n    onChangeText: function onChangeText(texto) {\n      setsenha(texto);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return logincandidato();\n    },\n    icon: React.createElement(Icon, {\n      name: \"arrow-right\",\n      size: 15,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }),\n    title: \"Entrar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["C:/xampp/htdocs/reactnative/AppRh/Pages/PageLogin.tsx"],"names":["React","useState","Icon","Input","Card","Button","Globais","navigation","titulo","nome","url","nomeusuario","limparvariaveis","email","setemail","senha","setsenha","dados","setDados","requestPost","method","headers","body","JSON","stringify","logincandidato","fetch","then","resp","json","console","log","catch","e","alert","finally","texto","type","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { Input, Card, Button } from \"react-native-elements\";\r\nimport { View, Text } from \"react-native\";\r\nimport Globais from \"../Configs/Globais\";\r\n\r\nexport default ({ navigation, titulo }) => {\r\n  var nome = Globais.url;\r\n  Globais.nomeusuario = \"joao\";\r\n  Globais.limparvariaveis();\r\n\r\n  const [email, setemail] = useState(\"\");\r\n  const [senha, setsenha] = useState(\"\");\r\n  const [dados, setDados] = useState([]);\r\n  var requestPost = {\r\n    method: \"POST\",\r\n\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      email: email,\r\n      senha: senha,\r\n    }),\r\n  };\r\n\r\n  function logincandidato() {\r\n    fetch(\r\n      Globais.url + \"candidato/login\",\r\n      JSON.stringify({\r\n        email: email,\r\n        senha: senha,\r\n      })\r\n    )\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n      })\r\n      .catch((e) => {\r\n        alert(\"erro\" + e);\r\n      })\r\n      .finally(() => {\r\n        alert(\"fim\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Card>\r\n        <Card.Title>\r\n          {Globais.nomeusuario} {email}\r\n        </Card.Title>\r\n        <Card.Divider />\r\n        <Input\r\n          onChangeText={(texto) => {\r\n            setemail(texto);\r\n          }}\r\n          value={email}\r\n          placeholder=\"Email\"\r\n          leftIcon={{ type: \"font-awesome\", name: \"user\" }}\r\n        />\r\n\r\n        <Input\r\n          secureTextEntry={true}\r\n          placeholder=\"Senha\"\r\n          value={senha}\r\n          onChangeText={(texto) => {\r\n            setsenha(texto);\r\n          }}\r\n          leftIcon={<Icon name=\"lock\" size={24} color=\"black\" />}\r\n        />\r\n        <Button\r\n          onPress={() => logincandidato()}\r\n          icon={<Icon name=\"arrow-right\" size={15} color=\"white\" />}\r\n          title=\"Entrar\"\r\n        />\r\n      </Card>\r\n    </View>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}