{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LongFloatNumberCSSPropertyValidator = void 0;\n\nvar _LongCSSPropertyValidator = require(\"./LongCSSPropertyValidator\");\n\nvar LongFloatNumberCSSPropertyValidator = function (_LongCSSPropertyValid) {\n  _inherits(LongFloatNumberCSSPropertyValidator, _LongCSSPropertyValid);\n\n  var _super = _createSuper(LongFloatNumberCSSPropertyValidator);\n\n  function LongFloatNumberCSSPropertyValidator() {\n    _classCallCheck(this, LongFloatNumberCSSPropertyValidator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LongFloatNumberCSSPropertyValidator, [{\n    key: \"normalizeRawInlineCSSValue\",\n    value: function normalizeRawInlineCSSValue(value) {\n      var normalizedVal = Number(value);\n\n      if (Number.isNaN(normalizedVal)) {\n        return null;\n      }\n\n      return normalizedVal;\n    }\n  }, {\n    key: \"normalizeNativeValue\",\n    value: function normalizeNativeValue(v) {\n      return this.normalizeInlineCSSValue(v);\n    }\n  }]);\n\n  return LongFloatNumberCSSPropertyValidator;\n}(_LongCSSPropertyValidator.LongCSSPropertyValidator);\n\nexports.LongFloatNumberCSSPropertyValidator = LongFloatNumberCSSPropertyValidator;","map":{"version":3,"sources":["LongFloatNumberCSSPropertyValidator.ts"],"names":["LongCSSPropertyValidator","normalizeRawInlineCSSValue","normalizedVal","Number","normalizeNativeValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,yBAAA,GAAA,OAAA,8BAAA;;IAGO,mC;;;;;;;;;;;;;WAGLC,oCAA0B,KAA1BA,EAAyD;AACvD,UAAMC,aAAa,GAAGC,MAAM,CAA5B,KAA4B,CAA5B;;AACA,UAAIA,MAAM,CAANA,KAAAA,CAAJ,aAAIA,CAAJ,EAAiC;AAC/B,eAAA,IAAA;AACD;;AACD,aAAA,aAAA;AACD;;;WAEDC,8BAAoB,CAApBA,EAAwD;AACtD,aAAO,KAAA,uBAAA,CAAP,CAAO,CAAP;AACD;;;;EAXOJ,yBAAAA,CAFH,wB","sourcesContent":["import { LongCSSPropertyValidator } from './LongCSSPropertyValidator';\nimport { CSSPropertyModel } from './types';\n\nexport class LongFloatNumberCSSPropertyValidator<\n  C extends CSSPropertyModel\n> extends LongCSSPropertyValidator<C, number> {\n  normalizeRawInlineCSSValue(value: string): number | null {\n    const normalizedVal = Number(value);\n    if (Number.isNaN(normalizedVal)) {\n      return null;\n    }\n    return normalizedVal;\n  }\n\n  normalizeNativeValue(v: string | number): number | null {\n    return this.normalizeInlineCSSValue(v);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}