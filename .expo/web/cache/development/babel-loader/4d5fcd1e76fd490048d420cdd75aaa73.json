{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pages\\\\CalendarioNovo.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Calendar } from \"react-native-big-calendar\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport Globais from \"../Configs/Globais\";\nimport \"../assets/locale/pt-br\";\n\nfunction carregarAgenda(token) {\n  var url = Globais.url + \"v1/eventocalendario\";\n  fetch(url, {\n    method: \"get\",\n    headers: new Headers({\n      Authorization: \"Bearer \" + token\n    })\n  }).then(function (resp) {\n    return resp.json();\n  }).then(function (json) {\n    console.log(json);\n  }).catch(function (e) {\n    return null;\n  }).finally(function () {\n    return null;\n  });\n}\n\nexport default function CalendarioNovo() {\n  var _useState = useState(\"month\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      estacao = _useState2[0],\n      setestacao = _useState2[1];\n\n  var _useState3 = useState([{\n    title: \"teste\",\n    id_noticia: 0,\n    start: new Date(Date.now()),\n    end: new Date(Date.now())\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      eventos = _useState4[0],\n      setEventos = _useState4[1];\n\n  useEffect(function () {}, []);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Picker, {\n    selectedValue: estacao,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setestacao(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Mensal\",\n    value: \"month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Semanal\",\n    value: \"week\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Di\\xE1rio\",\n    value: \"day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"3 Dias\",\n    value: \"3days\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Cunstomiz\\xE1vel\",\n    value: \"custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), React.createElement(Calendar, {\n    events: eventos,\n    date: new Date(Date.now()),\n    mode: estacao,\n    height: 600,\n    activeDate: new Date(Date.now()),\n    onPressCell: function onPressCell() {\n      return alert(\"ok\");\n    },\n    onPressEvent: function onPressEvent(data) {\n      alert(data.id_noticia);\n    },\n    swipeEnabled: true,\n    locale: \"pt-br\",\n    hideNowIndicator: true,\n    showAllDayEventCell: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pages/CalendarioNovo.tsx"],"names":["React","useState","useEffect","Calendar","Picker","Globais","carregarAgenda","token","url","fetch","method","headers","Headers","Authorization","then","resp","json","console","log","catch","e","finally","CalendarioNovo","estacao","setestacao","title","id_noticia","start","Date","now","end","eventos","setEventos","itemValue","itemIndex","alert","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { Calendar } from \"react-native-big-calendar\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport Globais from \"../Configs/Globais\";\r\nimport \"../assets/locale/pt-br\";\r\n\r\nfunction carregarAgenda(token) {\r\n  var url = Globais.url + \"v1/eventocalendario\";\r\n  fetch(url, {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: \"Bearer \" + token,\r\n    }),\r\n  })\r\n    .then((resp) => resp.json())\r\n    .then((json) => {\r\n      console.log(json);\r\n    })\r\n    .catch((e) => {\r\n      return null;\r\n    })\r\n    .finally(() => {\r\n      return null;\r\n    });\r\n}\r\nexport default function CalendarioNovo() {\r\n  const [estacao, setestacao] = useState(\"month\");\r\n  const [eventos, setEventos] = useState([\r\n    {\r\n      title: \"teste\",\r\n      id_noticia: 0,\r\n      start: new Date(Date.now()),\r\n      end: new Date(Date.now()),\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <View>\r\n      <Picker\r\n        selectedValue={estacao}\r\n        onValueChange={(itemValue, itemIndex) => setestacao(itemValue)}\r\n      >\r\n        <Picker.Item label=\"Mensal\" value=\"month\" />\r\n        <Picker.Item label=\"Semanal\" value=\"week\" />\r\n        <Picker.Item label=\"Diário\" value=\"day\" />\r\n        <Picker.Item label=\"3 Dias\" value=\"3days\" />\r\n        <Picker.Item label=\"Cunstomizável\" value=\"custom\" />\r\n      </Picker>\r\n      <Calendar\r\n        events={eventos}\r\n        date={new Date(Date.now())}\r\n        mode={estacao}\r\n        height={600}\r\n        activeDate={new Date(Date.now())}\r\n        onPressCell={() => alert(\"ok\")}\r\n        onPressEvent={(data) => {\r\n          alert(data.id_noticia);\r\n        }}\r\n        swipeEnabled={true}\r\n        locale=\"pt-br\"\r\n        hideNowIndicator={true}\r\n        showAllDayEventCell={true}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}