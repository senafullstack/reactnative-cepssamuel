{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pagesexternas\\\\Calendario.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Agenda } from \"react-native-calendars\";\nimport testIDs from \"./Call\";\n\nvar AgendaScreen = function (_Component) {\n  _inherits(AgendaScreen, _Component);\n\n  var _super = _createSuper(AgendaScreen);\n\n  function AgendaScreen() {\n    var _this;\n\n    _classCallCheck(this, AgendaScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      items: {}\n    };\n    return _this;\n  }\n\n  _createClass(AgendaScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Agenda, {\n        testID: \"agenda\",\n        items: this.state.items,\n        loadItemsForMonth: this.loadItems.bind(this),\n        selected: \"2017-05-16\",\n        renderItem: this.renderItem.bind(this),\n        renderEmptyDate: this.renderEmptyDate.bind(this),\n        rowHasChanged: this.rowHasChanged.bind(this),\n        showClosingKnob: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"loadItems\",\n    value: function loadItems(day) {\n      var _this2 = this;\n\n      setTimeout(function () {\n        for (var i = -2; i < 10; i++) {\n          var time = day.timestamp + i * 24 * 60 * 60 * 1000;\n\n          var strTime = _this2.timeToString(time);\n\n          if (!_this2.state.items[strTime]) {\n            _this2.state.items[strTime] = [];\n            var numItems = Math.floor(Math.random() * 3 + 1);\n\n            for (var j = 0; j < numItems; j++) {\n              _this2.state.items[strTime].push({\n                name: \"Item for \" + strTime + \" #\" + j,\n                height: Math.max(50, Math.floor(Math.random() * 150))\n              });\n            }\n          }\n        }\n\n        var newItems = {};\n        Object.keys(_this2.state.items).forEach(function (key) {\n          newItems[key] = _this2.state.items[key];\n        });\n        console.log(newItems);\n\n        _this2.setState({\n          items: newItems\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        testID: testIDs.agenda.ITEM,\n        style: [styles.item, {\n          height: item.height\n        }],\n        onPress: function onPress() {\n          return Alert.alert(item.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, item.name));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        style: styles.emptyDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }, {\n    key: \"timeToString\",\n    value: function timeToString(time) {\n      var date = new Date(time);\n      return date.toISOString().split(\"T\")[0];\n    }\n  }]);\n\n  return AgendaScreen;\n}(Component);\n\nexport { AgendaScreen as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"white\",\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pagesexternas/Calendario.tsx"],"names":["React","Component","Agenda","testIDs","AgendaScreen","state","items","loadItems","bind","renderItem","renderEmptyDate","rowHasChanged","day","setTimeout","i","time","timestamp","strTime","timeToString","numItems","Math","floor","random","j","push","name","height","max","newItems","Object","keys","forEach","key","console","log","setState","item","agenda","ITEM","styles","Alert","alert","emptyDate","r1","r2","date","Date","toISOString","split","StyleSheet","create","backgroundColor","flex","borderRadius","padding","marginRight","marginTop","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Alert, StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\n// @ts-expect-error\r\nimport { Agenda } from \"react-native-calendars\";\r\nimport testIDs from \"./Call\";\r\n\r\nexport default class AgendaScreen extends Component {\r\n  state = {\r\n    items: {},\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Agenda\r\n        testID={\"agenda\"}\r\n        items={this.state.items}\r\n        loadItemsForMonth={this.loadItems.bind(this)}\r\n        selected={\"2017-05-16\"}\r\n        renderItem={this.renderItem.bind(this)}\r\n        renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n        rowHasChanged={this.rowHasChanged.bind(this)}\r\n        showClosingKnob={true}\r\n        // markingType={'period'}\r\n        // markedDates={{\r\n        //    '2017-05-08': {textColor: '#43515c'},\r\n        //    '2017-05-09': {textColor: '#43515c'},\r\n        //    '2017-05-14': {startingDay: true, endingDay: true, color: 'blue'},\r\n        //    '2017-05-21': {startingDay: true, color: 'blue'},\r\n        //    '2017-05-22': {endingDay: true, color: 'gray'},\r\n        //    '2017-05-24': {startingDay: true, color: 'gray'},\r\n        //    '2017-05-25': {color: 'gray'},\r\n        //    '2017-05-26': {endingDay: true, color: 'gray'}}}\r\n        // monthFormat={'yyyy'}\r\n        // theme={{calendarBackground: 'red', agendaKnobColor: 'green'}}\r\n        //renderDay={(day, item) => (<Text>{day ? day.day: 'item'}</Text>)}\r\n        // hideExtraDays={false}\r\n      />\r\n    );\r\n  }\r\n\r\n  loadItems(day) {\r\n    setTimeout(() => {\r\n      for (let i = -2; i < 10; i++) {\r\n        const time = day.timestamp + i * 24 * 60 * 60 * 1000;\r\n        const strTime = this.timeToString(time);\r\n        if (!this.state.items[strTime]) {\r\n          this.state.items[strTime] = [];\r\n          const numItems = Math.floor(Math.random() * 3 + 1);\r\n          for (let j = 0; j < numItems; j++) {\r\n            this.state.items[strTime].push({\r\n              name: \"Item for \" + strTime + \" #\" + j,\r\n              height: Math.max(50, Math.floor(Math.random() * 150)),\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const newItems = {};\r\n      Object.keys(this.state.items).forEach((key) => {\r\n        newItems[key] = this.state.items[key];\r\n      });\r\n      console.log(newItems);\r\n      this.setState({\r\n        items: newItems,\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <TouchableOpacity\r\n        testID={testIDs.agenda.ITEM}\r\n        style={[styles.item, { height: item.height }]}\r\n        onPress={() => Alert.alert(item.name)}\r\n      >\r\n        <Text>{item.name}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  rowHasChanged(r1, r2) {\r\n    return r1.name !== r2.name;\r\n  }\r\n\r\n  timeToString(time) {\r\n    const date = new Date(time);\r\n    return date.toISOString().split(\"T\")[0];\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}