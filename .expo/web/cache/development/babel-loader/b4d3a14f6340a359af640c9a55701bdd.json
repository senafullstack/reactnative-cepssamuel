{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty2 = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShortCardinalCSSpropertyValidator = void 0;\n\nvar _ShortMergeRequest = require(\"../ShortMergeRequest\");\n\nvar _ShortCSSPropertyValidator = require(\"./ShortCSSPropertyValidator\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar WHITESPACE_REGEX = /\\s+/;\n\nvar ShortCardinalCSSpropertyValidator = function (_ShortCSSPropertyVali) {\n  _inherits(ShortCardinalCSSpropertyValidator, _ShortCSSPropertyVali);\n\n  var _super = _createSuper(ShortCardinalCSSpropertyValidator);\n\n  function ShortCardinalCSSpropertyValidator(params, directions) {\n    var _this;\n\n    _classCallCheck(this, ShortCardinalCSSpropertyValidator);\n\n    _this = _super.call(this, params);\n\n    _defineProperty(_assertThisInitialized(_this), \"directions\", void 0);\n\n    _this.directions = directions;\n    return _this;\n  }\n\n  _createClass(ShortCardinalCSSpropertyValidator, [{\n    key: \"normalizeInlineCSSValue\",\n    value: function normalizeInlineCSSValue(value) {\n      if (typeof value === 'number') {\n        var _ShortMergeRequest$Sh;\n\n        return new _ShortMergeRequest.ShortMergeRequest((_ShortMergeRequest$Sh = {}, _defineProperty2(_ShortMergeRequest$Sh, this.directions.top, value), _defineProperty2(_ShortMergeRequest$Sh, this.directions.right, value), _defineProperty2(_ShortMergeRequest$Sh, this.directions.bottom, value), _defineProperty2(_ShortMergeRequest$Sh, this.directions.left, value), _ShortMergeRequest$Sh));\n      }\n\n      var values = value.split(WHITESPACE_REGEX);\n\n      if (values.length === 4) {\n        var _ShortMergeRequest$Sh2;\n\n        return new _ShortMergeRequest.ShortMergeRequest((_ShortMergeRequest$Sh2 = {}, _defineProperty2(_ShortMergeRequest$Sh2, this.directions.top, values[0]), _defineProperty2(_ShortMergeRequest$Sh2, this.directions.right, values[1]), _defineProperty2(_ShortMergeRequest$Sh2, this.directions.bottom, values[2]), _defineProperty2(_ShortMergeRequest$Sh2, this.directions.left, values[3]), _ShortMergeRequest$Sh2));\n      }\n\n      if (values.length === 3) {\n        var _ShortMergeRequest$Sh3;\n\n        return new _ShortMergeRequest.ShortMergeRequest((_ShortMergeRequest$Sh3 = {}, _defineProperty2(_ShortMergeRequest$Sh3, this.directions.top, values[0]), _defineProperty2(_ShortMergeRequest$Sh3, this.directions.right, values[1]), _defineProperty2(_ShortMergeRequest$Sh3, this.directions.bottom, values[2]), _defineProperty2(_ShortMergeRequest$Sh3, this.directions.left, values[1]), _ShortMergeRequest$Sh3));\n      }\n\n      if (values.length === 2) {\n        var _ShortMergeRequest$Sh4;\n\n        return new _ShortMergeRequest.ShortMergeRequest((_ShortMergeRequest$Sh4 = {}, _defineProperty2(_ShortMergeRequest$Sh4, this.directions.top, values[0]), _defineProperty2(_ShortMergeRequest$Sh4, this.directions.right, values[1]), _defineProperty2(_ShortMergeRequest$Sh4, this.directions.bottom, values[0]), _defineProperty2(_ShortMergeRequest$Sh4, this.directions.left, values[1]), _ShortMergeRequest$Sh4));\n      }\n\n      if (values.length === 1) {\n        var _ShortMergeRequest$Sh5;\n\n        return new _ShortMergeRequest.ShortMergeRequest((_ShortMergeRequest$Sh5 = {}, _defineProperty2(_ShortMergeRequest$Sh5, this.directions.top, values[0]), _defineProperty2(_ShortMergeRequest$Sh5, this.directions.right, values[0]), _defineProperty2(_ShortMergeRequest$Sh5, this.directions.bottom, values[0]), _defineProperty2(_ShortMergeRequest$Sh5, this.directions.left, values[0]), _ShortMergeRequest$Sh5));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"normalizeNativeValue\",\n    value: function normalizeNativeValue(value) {\n      return this.normalizeInlineCSSValue(value);\n    }\n  }]);\n\n  return ShortCardinalCSSpropertyValidator;\n}(_ShortCSSPropertyValidator.ShortCSSPropertyValidator);\n\nexports.ShortCardinalCSSpropertyValidator = ShortCardinalCSSpropertyValidator;","map":{"version":3,"sources":["ShortCardinalCSSPropertyValidator.ts"],"names":["WHITESPACE_REGEX","ShortCSSPropertyValidator","constructor","normalizeInlineCSSValue","ShortMergeRequest","value","values","normalizeNativeValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,kBAAA,GAAA,OAAA,wBAAA;;AACA,IAAA,0BAAA,GAAA,OAAA,+BAAA;;;;;;;;;;;;;;;;;AAUA,IAAMA,gBAAgB,GAAtB,KAAA;;IAEO,iC;;;;;AAILE,6CAAW,MAAXA,EAAW,UAAXA,EAME;AAAA;;AAAA;;AACA,8BAAA,MAAA;;AADA,IAAA,eAAA,gCAAA,YAAA,EAAA,KAAA,CAAA,CAAA;;AAEA,UAAA,UAAA,GAAA,UAAA;AAFA;AAGD;;;;WAEDC,iCAAuB,KAAvBA,EAAgD;AAC9C,UAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;AAAA;;AAC7B,eAAO,IAAIC,kBAAAA,CAAJ,iBAAA,sEACJ,KAAA,UAAA,CAAD,GADK,EAAsB,KAAtB,2CAEJ,KAAA,UAAA,CAAD,KAFK,EAAsB,KAAtB,2CAGJ,KAAA,UAAA,CAAD,MAHK,EAAsB,KAAtB,2CAIJ,KAAA,UAAA,CAAD,IAJK,EAImBC,KAJnB,0BAAP;AAMD;;AACD,UAAMC,MAAM,GAAGD,KAAK,CAALA,KAAAA,CAAf,gBAAeA,CAAf;;AACA,UAAIC,MAAM,CAANA,MAAAA,KAAJ,CAAA,EAAyB;AAAA;;AACvB,eAAO,IAAIF,kBAAAA,CAAJ,iBAAA,wEACJ,KAAA,UAAA,CAAD,GADK,EACkBE,MAAM,CADF,CACE,CADxB,4CAEJ,KAAA,UAAA,CAAD,KAFK,EAEoBA,MAAM,CAFJ,CAEI,CAF1B,4CAGJ,KAAA,UAAA,CAAD,MAHK,EAGqBA,MAAM,CAHL,CAGK,CAH3B,4CAIJ,KAAA,UAAA,CAAD,IAJK,EAImBA,MAAM,CAAA,CAAA,CAJzB,2BAAP;AAMD;;AACD,UAAIA,MAAM,CAANA,MAAAA,KAAJ,CAAA,EAAyB;AAAA;;AACvB,eAAO,IAAIF,kBAAAA,CAAJ,iBAAA,wEACJ,KAAA,UAAA,CAAD,GADK,EACkBE,MAAM,CADF,CACE,CADxB,4CAEJ,KAAA,UAAA,CAAD,KAFK,EAEoBA,MAAM,CAFJ,CAEI,CAF1B,4CAGJ,KAAA,UAAA,CAAD,MAHK,EAGqBA,MAAM,CAHL,CAGK,CAH3B,4CAIJ,KAAA,UAAA,CAAD,IAJK,EAImBA,MAAM,CAAA,CAAA,CAJzB,2BAAP;AAMD;;AACD,UAAIA,MAAM,CAANA,MAAAA,KAAJ,CAAA,EAAyB;AAAA;;AACvB,eAAO,IAAIF,kBAAAA,CAAJ,iBAAA,wEACJ,KAAA,UAAA,CAAD,GADK,EACkBE,MAAM,CADF,CACE,CADxB,4CAEJ,KAAA,UAAA,CAAD,KAFK,EAEoBA,MAAM,CAFJ,CAEI,CAF1B,4CAGJ,KAAA,UAAA,CAAD,MAHK,EAGqBA,MAAM,CAHL,CAGK,CAH3B,4CAIJ,KAAA,UAAA,CAAD,IAJK,EAImBA,MAAM,CAAA,CAAA,CAJzB,2BAAP;AAMD;;AACD,UAAIA,MAAM,CAANA,MAAAA,KAAJ,CAAA,EAAyB;AAAA;;AACvB,eAAO,IAAIF,kBAAAA,CAAJ,iBAAA,wEACJ,KAAA,UAAA,CAAD,GADK,EACkBE,MAAM,CADF,CACE,CADxB,4CAEJ,KAAA,UAAA,CAAD,KAFK,EAEoBA,MAAM,CAFJ,CAEI,CAF1B,4CAGJ,KAAA,UAAA,CAAD,MAHK,EAGqBA,MAAM,CAHL,CAGK,CAH3B,4CAIJ,KAAA,UAAA,CAAD,IAJK,EAImBA,MAAM,CAAA,CAAA,CAJzB,2BAAP;AAMD;;AACD,aAAA,IAAA;AACD;;;WAEDC,8BAAoB,KAApBA,EAA6C;AAC3C,aAAO,KAAA,uBAAA,CAAP,KAAO,CAAP;AACD;;;;EA5DON,0BAAAA,CAFH,yB","sourcesContent":["import { ShortMergeRequest } from '../ShortMergeRequest';\nimport { ShortCSSPropertyValidator } from './ShortCSSPropertyValidator';\nimport { CSSPropertyModel, ShortCSSPropertyValidatorParams } from './types';\n\nexport type Directions = {\n  top: string;\n  bottom: string;\n  left: string;\n  right: string;\n};\n\nconst WHITESPACE_REGEX = /\\s+/;\n\nexport class ShortCardinalCSSpropertyValidator<\n  C extends CSSPropertyModel = any\n> extends ShortCSSPropertyValidator<C> {\n  public directions: Readonly<Directions>;\n  constructor(\n    params: ShortCSSPropertyValidatorParams<C>,\n    /**\n     * Top, Right, Bottom, Left\n     */\n    directions: Readonly<Directions>\n  ) {\n    super(params);\n    this.directions = directions;\n  }\n\n  normalizeInlineCSSValue(value: string | number) {\n    if (typeof value === 'number') {\n      return new ShortMergeRequest({\n        [this.directions.top]: value,\n        [this.directions.right]: value,\n        [this.directions.bottom]: value,\n        [this.directions.left]: value\n      });\n    }\n    const values = value.split(WHITESPACE_REGEX);\n    if (values.length === 4) {\n      return new ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[1],\n        [this.directions.bottom]: values[2],\n        [this.directions.left]: values[3]\n      });\n    }\n    if (values.length === 3) {\n      return new ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[1],\n        [this.directions.bottom]: values[2],\n        [this.directions.left]: values[1]\n      });\n    }\n    if (values.length === 2) {\n      return new ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[1],\n        [this.directions.bottom]: values[0],\n        [this.directions.left]: values[1]\n      });\n    }\n    if (values.length === 1) {\n      return new ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[0],\n        [this.directions.bottom]: values[0],\n        [this.directions.left]: values[0]\n      });\n    }\n    return null;\n  }\n\n  normalizeNativeValue(value: string | number) {\n    return this.normalizeInlineCSSValue(value);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}