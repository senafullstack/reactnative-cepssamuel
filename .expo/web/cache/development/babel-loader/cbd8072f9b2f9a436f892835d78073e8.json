{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useImageConcreteDimensions;\n\nvar _react = require(\"react\");\n\nfunction extractHorizontalSpace(_ref) {\n  var marginHorizontal = _ref.marginHorizontal,\n      leftMargin = _ref.leftMargin,\n      rightMargin = _ref.rightMargin,\n      margin = _ref.margin;\n  var realLeftMargin = leftMargin || marginHorizontal || margin || 0;\n  var realRightMargin = rightMargin || marginHorizontal || margin || 0;\n  return realLeftMargin + realRightMargin;\n}\n\nfunction scaleUp(minDimensions, desiredDimensions) {\n  var aspectRatio = desiredDimensions.width / desiredDimensions.height;\n\n  if (desiredDimensions.width < minDimensions.width) {\n    return scaleUp(minDimensions, {\n      width: minDimensions.width,\n      height: minDimensions.width / aspectRatio\n    });\n  }\n\n  if (desiredDimensions.height < minDimensions.height) {\n    return scaleUp(minDimensions, {\n      height: minDimensions.height,\n      width: minDimensions.height * aspectRatio\n    });\n  }\n\n  return desiredDimensions;\n}\n\nfunction scaleDown(maxDimensions, desiredDimensions) {\n  var aspectRatio = desiredDimensions.width / desiredDimensions.height;\n\n  if (desiredDimensions.width > maxDimensions.width) {\n    return scaleDown(maxDimensions, {\n      width: maxDimensions.width,\n      height: maxDimensions.width / aspectRatio\n    });\n  }\n\n  if (desiredDimensions.height > maxDimensions.height) {\n    return scaleDown(maxDimensions, {\n      height: maxDimensions.height,\n      width: maxDimensions.height * aspectRatio\n    });\n  }\n\n  return desiredDimensions;\n}\n\nfunction scale(_ref2, originalBox) {\n  var minBox = _ref2.minBox,\n      maxBox = _ref2.maxBox;\n  return scaleDown(maxBox, scaleUp(minBox, originalBox));\n}\n\nfunction computeConcreteDimensions(params) {\n  var computeMaxWidth = params.computeMaxWidth,\n      contentWidth = params.contentWidth,\n      flattenStyles = params.flattenStyles,\n      naturalWidth = params.naturalWidth,\n      naturalHeight = params.naturalHeight,\n      specifiedWidth = params.specifiedWidth,\n      specifiedHeight = params.specifiedHeight;\n  var horizontalSpace = extractHorizontalSpace(flattenStyles);\n  var _flattenStyles$maxWid = flattenStyles.maxWidth,\n      maxWidth = _flattenStyles$maxWid === void 0 ? Infinity : _flattenStyles$maxWid,\n      _flattenStyles$maxHei = flattenStyles.maxHeight,\n      maxHeight = _flattenStyles$maxHei === void 0 ? Infinity : _flattenStyles$maxHei,\n      _flattenStyles$minWid = flattenStyles.minWidth,\n      minWidth = _flattenStyles$minWid === void 0 ? 0 : _flattenStyles$minWid,\n      _flattenStyles$minHei = flattenStyles.minHeight,\n      minHeight = _flattenStyles$minHei === void 0 ? 0 : _flattenStyles$minHei;\n  var imagesMaxWidth = typeof contentWidth === 'number' ? computeMaxWidth(contentWidth) : Infinity;\n  var minBox = {\n    width: minWidth,\n    height: minHeight\n  };\n  var maxBox = {\n    width: Math.min(imagesMaxWidth, maxWidth, typeof specifiedWidth === 'number' ? specifiedWidth : Infinity) - horizontalSpace,\n    height: Math.min(typeof specifiedHeight === 'number' ? specifiedHeight : Infinity, maxHeight)\n  };\n\n  if (typeof specifiedWidth === 'number' && typeof specifiedHeight === 'number') {\n    return scale({\n      minBox: minBox,\n      maxBox: maxBox\n    }, {\n      width: specifiedWidth,\n      height: specifiedHeight\n    });\n  }\n\n  if (naturalWidth != null && naturalHeight != null) {\n    return scale({\n      minBox: minBox,\n      maxBox: maxBox\n    }, {\n      width: naturalWidth,\n      height: naturalHeight\n    });\n  }\n\n  return null;\n}\n\nfunction useImageConcreteDimensions(_ref3) {\n  var flatStyle = _ref3.flatStyle,\n      naturalDimensions = _ref3.naturalDimensions,\n      specifiedDimensions = _ref3.specifiedDimensions,\n      computeMaxWidth = _ref3.computeMaxWidth,\n      contentWidth = _ref3.contentWidth;\n  return (0, _react.useMemo)(function () {\n    return computeConcreteDimensions({\n      flattenStyles: flatStyle,\n      computeMaxWidth: computeMaxWidth,\n      contentWidth: contentWidth,\n      naturalWidth: naturalDimensions === null || naturalDimensions === void 0 ? void 0 : naturalDimensions.width,\n      naturalHeight: naturalDimensions === null || naturalDimensions === void 0 ? void 0 : naturalDimensions.height,\n      specifiedWidth: specifiedDimensions.width,\n      specifiedHeight: specifiedDimensions.height\n    });\n  }, [computeMaxWidth, contentWidth, flatStyle, naturalDimensions, specifiedDimensions.height, specifiedDimensions.width]);\n}","map":{"version":3,"sources":["useImageConcreteDimensions.ts"],"names":["margin","realLeftMargin","leftMargin","realRightMargin","rightMargin","aspectRatio","desiredDimensions","minDimensions","scaleUp","width","height","maxDimensions","scaleDown","maxBox","specifiedHeight","horizontalSpace","extractHorizontalSpace","maxWidth","maxHeight","minWidth","minHeight","imagesMaxWidth","computeMaxWidth","minBox","Math","scale","naturalWidth","naturalHeight","contentWidth","computeConcreteDimensions","flattenStyles","naturalDimensions","specifiedWidth","specifiedDimensions"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\nimport { ImageStyle } from 'react-native';\nimport { ImageDimensions } from '../shared-types';\nimport {\n  IncompleteImageDimensions,\n  UseIMGElementStateProps\n} from './img-types';\n\nexport type ConcreteDimensionsProps = {\n  flatStyle: ImageStyle;\n  naturalDimensions: ImageDimensions | null;\n  specifiedDimensions: IncompleteImageDimensions;\n} & Pick<UseIMGElementStateProps, 'computeMaxWidth' | 'contentWidth'>;\n\nfunction extractHorizontalSpace({\n  marginHorizontal,\n  leftMargin,\n  rightMargin,\n  margin\n}: any) {\n  const realLeftMargin = leftMargin || marginHorizontal || margin || 0;\n  const realRightMargin = rightMargin || marginHorizontal || margin || 0;\n  return realLeftMargin + realRightMargin;\n}\n\nfunction scaleUp(\n  minDimensions: ImageDimensions,\n  desiredDimensions: ImageDimensions\n): ImageDimensions {\n  const aspectRatio = desiredDimensions.width / desiredDimensions.height;\n  if (desiredDimensions.width < minDimensions.width) {\n    return scaleUp(minDimensions, {\n      width: minDimensions.width,\n      height: minDimensions.width / aspectRatio\n    });\n  }\n  if (desiredDimensions.height < minDimensions.height) {\n    return scaleUp(minDimensions, {\n      height: minDimensions.height,\n      width: minDimensions.height * aspectRatio\n    });\n  }\n  return desiredDimensions;\n}\n\nfunction scaleDown(\n  maxDimensions: ImageDimensions,\n  desiredDimensions: ImageDimensions\n): ImageDimensions {\n  const aspectRatio = desiredDimensions.width / desiredDimensions.height;\n  if (desiredDimensions.width > maxDimensions.width) {\n    return scaleDown(maxDimensions, {\n      width: maxDimensions.width,\n      height: maxDimensions.width / aspectRatio\n    });\n  }\n  if (desiredDimensions.height > maxDimensions.height) {\n    return scaleDown(maxDimensions, {\n      height: maxDimensions.height,\n      width: maxDimensions.height * aspectRatio\n    });\n  }\n  return desiredDimensions;\n}\n\nfunction scale(\n  { minBox, maxBox }: { maxBox: ImageDimensions; minBox: ImageDimensions },\n  originalBox: ImageDimensions\n) {\n  return scaleDown(maxBox, scaleUp(minBox, originalBox));\n}\n\nfunction computeConcreteDimensions(params: any) {\n  const {\n    computeMaxWidth,\n    contentWidth,\n    flattenStyles,\n    naturalWidth,\n    naturalHeight,\n    specifiedWidth,\n    specifiedHeight\n  } = params;\n  const horizontalSpace = extractHorizontalSpace(flattenStyles);\n  const {\n    maxWidth = Infinity,\n    maxHeight = Infinity,\n    minWidth = 0,\n    minHeight = 0\n  } = flattenStyles;\n  const imagesMaxWidth =\n    typeof contentWidth === 'number' ? computeMaxWidth(contentWidth) : Infinity;\n  const minBox = {\n    width: minWidth,\n    height: minHeight\n  };\n  const maxBox = {\n    width:\n      Math.min(\n        imagesMaxWidth,\n        maxWidth,\n        typeof specifiedWidth === 'number' ? specifiedWidth : Infinity\n      ) - horizontalSpace,\n    height: Math.min(\n      typeof specifiedHeight === 'number' ? specifiedHeight : Infinity,\n      maxHeight\n    )\n  };\n  if (\n    typeof specifiedWidth === 'number' &&\n    typeof specifiedHeight === 'number'\n  ) {\n    return scale(\n      { minBox, maxBox },\n      {\n        width: specifiedWidth,\n        height: specifiedHeight\n      }\n    );\n  }\n  if (naturalWidth != null && naturalHeight != null) {\n    return scale(\n      { minBox, maxBox },\n      {\n        width: naturalWidth,\n        height: naturalHeight\n      }\n    );\n  }\n  return null;\n}\n\nexport default function useImageConcreteDimensions<\n  P extends ConcreteDimensionsProps\n>({\n  flatStyle,\n  naturalDimensions,\n  specifiedDimensions,\n  computeMaxWidth,\n  contentWidth\n}: P): P['naturalDimensions'] extends ImageDimensions\n  ? ImageDimensions\n  : ImageDimensions | null {\n  return useMemo(() => {\n    return computeConcreteDimensions({\n      flattenStyles: flatStyle,\n      computeMaxWidth,\n      contentWidth,\n      naturalWidth: naturalDimensions?.width,\n      naturalHeight: naturalDimensions?.height,\n      specifiedWidth: specifiedDimensions.width,\n      specifiedHeight: specifiedDimensions.height\n    }) as any;\n  }, [\n    computeMaxWidth,\n    contentWidth,\n    flatStyle,\n    naturalDimensions,\n    specifiedDimensions.height,\n    specifiedDimensions.width\n  ]);\n}\n"]},"metadata":{},"sourceType":"script"}