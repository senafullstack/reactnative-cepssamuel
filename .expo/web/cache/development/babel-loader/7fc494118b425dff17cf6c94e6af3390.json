{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pagesexternas\\\\Musica.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Audio } from \"expo-av\";\nvar audio = {\n  filename: \"My Awesome Audio\",\n  uri: \"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\n};\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPlaying = _useState2[0],\n      setIsPlaying = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playbackObject = _useState4[0],\n      setPlaybackObject = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      playbackStatus = _useState6[0],\n      setPlaybackStatus = _useState6[1];\n\n  useEffect(function () {\n    if (playbackObject === null) {\n      setPlaybackObject(new Audio.Sound());\n    }\n  }, []);\n\n  var handleAudioPlayPause = function handleAudioPlayPause() {\n    var status, _status, _status2;\n\n    return _regeneratorRuntime.async(function handleAudioPlayPause$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(playbackObject !== null && playbackStatus === null)) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(playbackObject.loadAsync({\n              uri: audio.uri\n            }, {\n              shouldPlay: true\n            }));\n\n          case 3:\n            status = _context.sent;\n            setIsPlaying(true);\n            return _context.abrupt(\"return\", setPlaybackStatus(status));\n\n          case 6:\n            if (!playbackStatus.isPlaying) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(playbackObject.pauseAsync());\n\n          case 9:\n            _status = _context.sent;\n            setIsPlaying(false);\n            return _context.abrupt(\"return\", setPlaybackStatus(_status));\n\n          case 12:\n            if (playbackStatus.isPlaying) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(playbackObject.playAsync());\n\n          case 15:\n            _status2 = _context.sent;\n            setIsPlaying(true);\n            return _context.abrupt(\"return\", setPlaybackStatus(_status2));\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 50,\n      backgroundColor: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      fontSize: 18,\n      marginBottom: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, audio.filename), React.createElement(Ionicons, {\n    style: {\n      alignSelf: \"center\",\n      backgroundColor: \"gray\",\n      padding: 10,\n      borderRadius: 50\n    },\n    name: isPlaying ? \"pause\" : \"play\",\n    size: 24,\n    color: \"white\",\n    onPress: handleAudioPlayPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pagesexternas/Musica.tsx"],"names":["React","useEffect","useState","Ionicons","Audio","audio","filename","uri","App","isPlaying","setIsPlaying","playbackObject","setPlaybackObject","playbackStatus","setPlaybackStatus","Sound","handleAudioPlayPause","loadAsync","shouldPlay","status","pauseAsync","playAsync","flex","padding","backgroundColor","fontWeight","fontSize","marginBottom","alignSelf","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { Audio } from \"expo-av\";\r\n\r\nconst audio = {\r\n  filename: \"My Awesome Audio\",\r\n  uri: \"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\",\r\n};\r\n\r\nexport default function App() {\r\n  const [isPlaying, setIsPlaying] = useState(true);\r\n  const [playbackObject, setPlaybackObject] = useState(null);\r\n  const [playbackStatus, setPlaybackStatus] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (playbackObject === null) {\r\n      setPlaybackObject(new Audio.Sound());\r\n    }\r\n  }, []);\r\n\r\n  const handleAudioPlayPause = async () => {\r\n    if (playbackObject !== null && playbackStatus === null) {\r\n      const status = await playbackObject.loadAsync(\r\n        { uri: audio.uri },\r\n        { shouldPlay: true }\r\n      );\r\n      setIsPlaying(true);\r\n      return setPlaybackStatus(status);\r\n    }\r\n\r\n    // It will pause our audio\r\n    if (playbackStatus.isPlaying) {\r\n      const status = await playbackObject.pauseAsync();\r\n      setIsPlaying(false);\r\n      return setPlaybackStatus(status);\r\n    }\r\n\r\n    // It will resume our audio\r\n    if (!playbackStatus.isPlaying) {\r\n      const status = await playbackObject.playAsync();\r\n      setIsPlaying(true);\r\n      return setPlaybackStatus(status);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 50, backgroundColor: \"#fff\" }}>\r\n      <Text style={{ fontWeight: \"bold\", fontSize: 18, marginBottom: 15 }}>\r\n        {audio.filename}\r\n      </Text>\r\n      <Ionicons\r\n        style={{\r\n          alignSelf: \"center\",\r\n          backgroundColor: \"gray\",\r\n          padding: 10,\r\n          borderRadius: 50,\r\n        }}\r\n        name={isPlaying ? \"pause\" : \"play\"}\r\n        size={24}\r\n        color=\"white\"\r\n        onPress={handleAudioPlayPause}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}