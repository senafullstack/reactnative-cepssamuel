{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pagesexternas\\\\Calendario.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Calendar } from \"react-native-calendars\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\n\nvar Example = function (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  var _super = _createSuper(Example);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          paddingTop: 50,\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 7\n        }\n      }, React.createElement(Calendar, {\n        current: \"2021-12-23\",\n        minDate: \"2012-05-10\",\n        maxDate: \"2030-05-30\",\n        onDayPress: function onDayPress(day) {\n          console.log(\"selected day\", day);\n        },\n        monthFormat: \"yyyy MM\",\n        onMonthChange: function onMonthChange(month) {\n          console.log(\"Mes escolhido\", month);\n        },\n        hideArrows: false,\n        hideExtraDays: false,\n        disableMonthChange: false,\n        firstDay: 1,\n        markedDates: {\n          \"2012-05-16\": {\n            selected: true,\n            marked: true,\n            selectedColor: \"blue\"\n          },\n          \"2021-12-25\": {\n            marked: true\n          },\n          \"2012-05-18\": {\n            marked: true,\n            dotColor: \"red\",\n            activeOpacity: 0\n          },\n          \"2012-05-19\": {\n            disabled: true,\n            disableTouchEvent: true\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pagesexternas/Calendario.tsx"],"names":["Calendar","React","Example","paddingTop","flex","day","console","log","month","selected","marked","selectedColor","dotColor","activeOpacity","disabled","disableTouchEvent","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,wBAAzB;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,O;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,EAAd;AAAkBC,UAAAA,IAAI,EAAE;AAAxB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAEE,QAAA,OAAO,EAAE,YAFX;AAIE,QAAA,OAAO,EAAE,YAJX;AAME,QAAA,OAAO,EAAE,YANX;AAQE,QAAA,UAAU,EAAE,oBAACC,GAAD,EAAS;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAA5B;AACD,SAVH;AAYE,QAAA,WAAW,EAAE,SAZf;AAcE,QAAA,aAAa,EAAE,uBAACG,KAAD,EAAW;AACxBF,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,KAA7B;AACD,SAhBH;AAkBE,QAAA,UAAU,EAAE,KAlBd;AAoBE,QAAA,aAAa,EAAE,KApBjB;AAuBE,QAAA,kBAAkB,EAAE,KAvBtB;AAyBE,QAAA,QAAQ,EAAE,CAzBZ;AA0BE,QAAA,WAAW,EAAE;AACX,wBAAc;AACZC,YAAAA,QAAQ,EAAE,IADE;AAEZC,YAAAA,MAAM,EAAE,IAFI;AAGZC,YAAAA,aAAa,EAAE;AAHH,WADH;AAMX,wBAAc;AAAED,YAAAA,MAAM,EAAE;AAAV,WANH;AAOX,wBAAc;AAAEA,YAAAA,MAAM,EAAE,IAAV;AAAgBE,YAAAA,QAAQ,EAAE,KAA1B;AAAiCC,YAAAA,aAAa,EAAE;AAAhD,WAPH;AAQX,wBAAc;AAAEC,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,iBAAiB,EAAE;AAArC;AARH,SA1Bf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAyCD;;;;EA3CkCd,KAAK,CAACe,S;;SAAtBd,O","sourcesContent":["import { Calendar } from \"react-native-calendars\"; // 1.5.3\r\nimport { View } from \"react-native\";\r\nimport React from \"react\";\r\n\r\nexport default class Example extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={{ paddingTop: 50, flex: 1 }}>\r\n        <Calendar\r\n          // Initially visible month. Default = Date()\r\n          current={\"2021-12-23\"}\r\n          // Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined\r\n          minDate={\"2012-05-10\"}\r\n          // Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined\r\n          maxDate={\"2030-05-30\"}\r\n          // Handler which gets executed on day press. Default = undefined\r\n          onDayPress={(day) => {\r\n            console.log(\"selected day\", day);\r\n          }}\r\n          // Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting\r\n          monthFormat={\"yyyy MM\"}\r\n          // Handler which gets executed when visible month changes in calendar. Default = undefined\r\n          onMonthChange={(month) => {\r\n            console.log(\"Mes escolhido\", month);\r\n          }}\r\n          // Hide month navigation arrows. Default = false\r\n          hideArrows={false}\r\n          // Do not show days of other months in month page. Default = false\r\n          hideExtraDays={false}\r\n          // If hideArrows=false and hideExtraDays=false do not swich month when tapping on greyed out\r\n          // day from another month that is visible in calendar page. Default = false\r\n          disableMonthChange={false}\r\n          // If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday.\r\n          firstDay={1}\r\n          markedDates={{\r\n            \"2012-05-16\": {\r\n              selected: true,\r\n              marked: true,\r\n              selectedColor: \"blue\",\r\n            },\r\n            \"2021-12-25\": { marked: true },\r\n            \"2012-05-18\": { marked: true, dotColor: \"red\", activeOpacity: 0 },\r\n            \"2012-05-19\": { disabled: true, disableTouchEvent: true },\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}