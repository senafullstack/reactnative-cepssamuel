{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LongCSSToReactNativeValidator = void 0;\n\nvar _LongCSSPropertyValidator = require(\"./LongCSSPropertyValidator\");\n\nvar _expandCSSToRN = _interopRequireDefault(require(\"./expandCSSToRN\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar LongCSSToReactNativeValidator = function (_LongCSSPropertyValid) {\n  _inherits(LongCSSToReactNativeValidator, _LongCSSPropertyValid);\n\n  var _super = _createSuper(LongCSSToReactNativeValidator);\n\n  function LongCSSToReactNativeValidator() {\n    _classCallCheck(this, LongCSSToReactNativeValidator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LongCSSToReactNativeValidator, [{\n    key: \"normalizeRawInlineCSSValue\",\n    value: function normalizeRawInlineCSSValue(value) {\n      var expanded = (0, _expandCSSToRN.default)(this.propertyName, value);\n\n      if (expanded) {\n        return expanded[this.propertyName];\n      }\n\n      return null;\n    }\n  }]);\n\n  return LongCSSToReactNativeValidator;\n}(_LongCSSPropertyValidator.LongCSSPropertyValidator);\n\nexports.LongCSSToReactNativeValidator = LongCSSToReactNativeValidator;","map":{"version":3,"sources":["LongCSSToReactNativeValidator.ts"],"names":["LongCSSPropertyValidator","normalizeRawInlineCSSValue","expanded"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA,IAAA,yBAAA,GAAA,OAAA,8BAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,mBAAA,CAAA;;;;;;;;IAEO,6B;;;;;;;;;;;;;WAGLC,oCAA0B,KAA1BA,EAA0C;AACxC,UAAMC,QAAQ,GAAG,CAAA,GAAA,cAAA,CAAA,OAAA,EAAc,KAAd,YAAA,EAAjB,KAAiB,CAAjB;;AACA,UAAA,QAAA,EAAc;AACZ,eAAOA,QAAQ,CAAC,KAAhB,YAAe,CAAf;AACD;;AACD,aAAA,IAAA;AACD;;;;EAPOF,yBAAAA,CAFH,wB","sourcesContent":["import { CSSPropertyModel } from './types';\nimport { LongCSSPropertyValidator } from './LongCSSPropertyValidator';\nimport expandCSSToRN from './expandCSSToRN';\n\nexport class LongCSSToReactNativeValidator<\n  C extends CSSPropertyModel = any\n> extends LongCSSPropertyValidator<C> {\n  normalizeRawInlineCSSValue(value: string) {\n    const expanded = expandCSSToRN(this.propertyName, value);\n    if (expanded) {\n      return expanded[this.propertyName];\n    }\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}