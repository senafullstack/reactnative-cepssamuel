{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _domutils = require(\"domutils\");\n\nvar _HTMLContentModel = _interopRequireDefault(require(\"./HTMLContentModel\"));\n\nvar _HTMLElementModel = _interopRequireDefault(require(\"./HTMLElementModel\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar UA_ANCHOR_COL = '#245dc1';\nvar UA_GRAY = '#CCC';\nvar UA_MARGIN_HZ = 30;\nvar bigMarginTopBottomStyle = {\n  marginTop: '1em',\n  marginBottom: '1em'\n};\nvar shortMarginTopBottomStyle = {\n  marginTop: '.5em',\n  marginBottom: '.5em'\n};\nvar lineThroughStyle = {\n  textDecorationLine: 'line-through'\n};\nvar italicStyle = {\n  fontStyle: 'italic'\n};\nvar monoStyle = {\n  fontFamily: 'monospace'\n};\nvar boldStyle = {\n  fontWeight: 'bold'\n};\n\nvar spacedBlockStyle = _objectSpread(_objectSpread({}, bigMarginTopBottomStyle), {}, {\n  marginLeft: UA_MARGIN_HZ,\n  marginRight: UA_MARGIN_HZ\n});\n\nvar anchorStyle = {\n  color: UA_ANCHOR_COL,\n  textDecorationLine: 'underline',\n  textDecorationColor: UA_ANCHOR_COL\n};\nvar leftBorderQuoteStyle = {\n  borderLeftWidth: 2,\n  borderLeftColor: UA_GRAY\n};\nvar dottedUnderlineStyle = {\n  textDecorationLine: 'underline',\n  textDecorationStyle: 'dotted'\n};\nvar solidUnderlineStyle = {\n  textDecorationLine: 'underline',\n  textDecorationStyle: 'solid'\n};\n\nvar listStyles = _objectSpread(_objectSpread({}, bigMarginTopBottomStyle), {}, {\n  paddingLeft: 30\n});\n\nvar preStyles = _objectSpread(_objectSpread({\n  whiteSpace: 'pre'\n}, monoStyle), bigMarginTopBottomStyle);\n\nfunction headerStyle(fontSize, marginSize) {\n  return _objectSpread({\n    fontSize: fontSize,\n    marginTop: marginSize,\n    marginBottom: marginSize\n  }, boldStyle);\n}\n\nvar getReactNativePropsForHeading = function getReactNativePropsForHeading(_ref) {\n  var domNode = _ref.domNode;\n  var textLabel = (0, _domutils.textContent)(domNode);\n  return {\n    native: {\n      accessible: true,\n      accessibilityLabel: textLabel,\n      accessibilityRole: 'header'\n    }\n  };\n};\n\nvar getReactNativePropsWithHref = function getReactNativePropsWithHref(_ref2) {\n  var attributes = _ref2.attributes;\n\n  if (typeof attributes.href === 'string' && attributes.href.length > 0) {\n    return {\n      native: {\n        accessible: true,\n        accessibilityRole: 'link'\n      }\n    };\n  }\n};\n\nvar sectioningModelMap = {\n  address: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'address',\n    mixedUAStyles: italicStyle\n  }),\n  article: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'article'\n  }),\n  aside: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'aside'\n  }),\n  body: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'body'\n  }),\n  footer: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'footer'\n  }),\n  h1: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h1',\n    mixedUAStyles: headerStyle('2em', '.67em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  h2: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h2',\n    mixedUAStyles: headerStyle('1.5em', '.83em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  h3: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h3',\n    mixedUAStyles: headerStyle('1.17em', '1em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  h4: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h4',\n    mixedUAStyles: headerStyle('1em', '1.33em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  h5: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h5',\n    mixedUAStyles: headerStyle('.83em', '1.67em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  h6: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h6',\n    mixedUAStyles: headerStyle('.67em', '2.33em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  header: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'header'\n  }),\n  hgroup: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'hgroup'\n  }),\n  nav: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'nav'\n  }),\n  section: _HTMLElementModel.default.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'section'\n  })\n};\nvar unsupportedModelMap = {\n  area: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'area',\n    category: 'untranslatable',\n    isVoid: true,\n    getReactNativeProps: getReactNativePropsWithHref\n  }),\n  map: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'map',\n    category: 'untranslatable'\n  })\n};\nvar attribsModelMap = {\n  accesskey: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'accesskey',\n    category: 'untranslatable'\n  }),\n  caption: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'caption',\n    category: 'untranslatable'\n  }),\n  col: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'col',\n    category: 'untranslatable',\n    isVoid: true\n  }),\n  colgroup: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'colgroup',\n    category: 'untranslatable'\n  }),\n  datalist: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'datalist',\n    category: 'untranslatable'\n  }),\n  source: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'source',\n    category: 'untranslatable',\n    isVoid: true\n  }),\n  track: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'track',\n    category: 'untranslatable',\n    isVoid: true\n  }),\n  optgroup: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'optgroup',\n    category: 'untranslatable'\n  }),\n  option: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'option',\n    category: 'untranslatable'\n  }),\n  param: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'param',\n    category: 'untranslatable',\n    isVoid: true\n  })\n};\nvar interactiveModelMap = {\n  button: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'button',\n    category: 'interactive',\n    reactNativeProps: {\n      native: {\n        accessibilityRole: 'button'\n      }\n    }\n  }),\n  fieldset: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'fieldset',\n    category: 'interactive'\n  }),\n  form: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'form',\n    category: 'interactive'\n  }),\n  input: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'input',\n    category: 'interactive',\n    isVoid: true\n  }),\n  label: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'label',\n    category: 'interactive'\n  }),\n  legend: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'legend',\n    category: 'interactive'\n  }),\n  meter: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'meter',\n    category: 'interactive'\n  }),\n  progress: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'progress',\n    category: 'interactive'\n  }),\n  select: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'select',\n    category: 'interactive',\n    reactNativeProps: {\n      native: {\n        accessible: true,\n        accessibilityRole: 'combobox'\n      }\n    }\n  }),\n  details: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'details',\n    category: 'interactive'\n  }),\n  dialog: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'dialog',\n    category: 'interactive'\n  }),\n  output: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'output',\n    category: 'interactive'\n  }),\n  summary: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'summary',\n    category: 'interactive'\n  }),\n  textarea: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'textarea',\n    category: 'interactive'\n  })\n};\nvar metadataModelMap = {\n  base: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'base',\n    category: 'untranslatable',\n    isVoid: true\n  }),\n  head: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'head',\n    category: 'untranslatable',\n    isOpaque: true\n  }),\n  link: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'link',\n    category: 'untranslatable',\n    isVoid: true\n  }),\n  meta: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'meta',\n    category: 'untranslatable',\n    isVoid: true\n  }),\n  title: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'title',\n    category: 'untranslatable'\n  })\n};\n\nvar untranslatableModelMap = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, attribsModelMap), interactiveModelMap), unsupportedModelMap), metadataModelMap);\n\nvar groupingModelMap = {\n  blockquote: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'blockquote',\n    category: 'grouping',\n    getMixedUAStyles: function getMixedUAStyles(_ref3) {\n      var attributes = _ref3.attributes;\n\n      if (attributes.type === 'cite') {\n        return leftBorderQuoteStyle;\n      }\n    },\n    mixedUAStyles: spacedBlockStyle\n  }),\n  dd: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'dd',\n    category: 'grouping',\n    mixedUAStyles: {\n      marginLeft: UA_MARGIN_HZ\n    }\n  }),\n  div: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'div',\n    category: 'grouping'\n  }),\n  dl: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'dl',\n    category: 'grouping',\n    mixedUAStyles: bigMarginTopBottomStyle\n  }),\n  dt: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'dt',\n    category: 'grouping',\n    mixedUAStyles: boldStyle\n  }),\n  figcaption: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'figcaption',\n    category: 'grouping',\n    mixedUAStyles: _objectSpread(_objectSpread({}, italicStyle), {}, {\n      textAlign: 'center'\n    })\n  }),\n  figure: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'figure',\n    category: 'grouping',\n    mixedUAStyles: spacedBlockStyle\n  }),\n  hr: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'hr',\n    category: 'grouping',\n    mixedUAStyles: _objectSpread({\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      height: 1,\n      width: '100%',\n      backgroundColor: UA_GRAY\n    }, shortMarginTopBottomStyle)\n  }),\n  li: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'li',\n    category: 'grouping'\n  }),\n  main: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'main',\n    category: 'grouping'\n  }),\n  menu: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'menu',\n    category: 'grouping'\n  }),\n  ol: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'ol',\n    category: 'grouping',\n    mixedUAStyles: listStyles,\n    setMarkersForTNode: function setMarkersForTNode(targetMarkers, parentMarkers) {\n      targetMarkers.olNestLevel = parentMarkers.olNestLevel + 1;\n    }\n  }),\n  p: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'p',\n    category: 'grouping',\n    mixedUAStyles: bigMarginTopBottomStyle\n  }),\n  pre: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'pre',\n    category: 'grouping',\n    mixedUAStyles: preStyles\n  }),\n  xmp: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'xmp',\n    category: 'grouping',\n    mixedUAStyles: preStyles\n  }),\n  listing: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'listing',\n    category: 'grouping',\n    mixedUAStyles: preStyles\n  }),\n  plaintext: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'plaintext',\n    category: 'grouping',\n    mixedUAStyles: preStyles\n  }),\n  ul: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'ul',\n    category: 'grouping',\n    mixedUAStyles: listStyles,\n    setMarkersForTNode: function setMarkersForTNode(targetMarkers, parentMarkers) {\n      targetMarkers.ulNestLevel = parentMarkers.ulNestLevel + 1;\n    }\n  }),\n  dir: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'dir',\n    category: 'grouping',\n    mixedUAStyles: listStyles\n  })\n};\nvar tabularModelMap = {\n  table: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'table',\n    category: 'tabular'\n  }),\n  tbody: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'tbody',\n    category: 'tabular'\n  }),\n  td: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'td',\n    category: 'tabular',\n    mixedUAStyles: {\n      padding: 2,\n      flex: 1\n    }\n  }),\n  tfoot: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'tfoot',\n    category: 'tabular'\n  }),\n  th: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'th',\n    category: 'tabular',\n    mixedUAStyles: {\n      padding: 2,\n      flex: 1,\n      fontWeight: 'bold'\n    }\n  }),\n  thead: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'thead',\n    category: 'tabular'\n  }),\n  tr: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'tr',\n    category: 'tabular',\n    mixedUAStyles: {\n      flexDirection: 'row',\n      flexWrap: 'nowrap'\n    }\n  })\n};\nvar renderedEmbeddedModelMap = {\n  img: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'img',\n    category: 'embedded',\n    isVoid: true,\n    getReactNativeProps: function getReactNativeProps(_ref4, props) {\n      var attributes = _ref4.attributes;\n      var label = attributes['aria-label'] || attributes.alt;\n\n      if (label && (!(props !== null && props !== void 0 && props.view) || props.view.accessibilityRole !== 'none')) {\n        return {\n          native: {\n            accessibilityLabel: label,\n            accessibilityRole: 'image'\n          }\n        };\n      }\n\n      return {\n        native: {\n          accessibilityRole: 'none'\n        }\n      };\n    }\n  }).extend({\n    contentModel: _HTMLContentModel.default.block\n  }),\n  picture: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'picture',\n    category: 'embedded',\n    isOpaque: false,\n    isVoid: false\n  }).extend({\n    contentModel: _HTMLContentModel.default.block\n  })\n};\nvar emptyEmbeddedModelMap = {\n  audio: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'audio',\n    category: 'embedded',\n    isVoid: false\n  }),\n  canvas: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'canvas',\n    category: 'embedded',\n    isVoid: false\n  }),\n  embed: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'embed',\n    category: 'embedded',\n    isVoid: true\n  }),\n  iframe: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'iframe',\n    category: 'embedded',\n    isVoid: true\n  }),\n  math: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'math',\n    category: 'embedded',\n    isVoid: false,\n    isOpaque: true\n  }),\n  object: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'object',\n    category: 'embedded',\n    isVoid: false\n  }),\n  svg: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'svg',\n    category: 'embedded',\n    isVoid: false,\n    isOpaque: true,\n    getReactNativeProps: function getReactNativeProps(_ref5) {\n      var attributes = _ref5.attributes;\n\n      if (attributes['aria-label']) {\n        return {\n          native: {\n            accessibilityLabel: attributes['aria-label'],\n            accessibilityRole: 'image'\n          }\n        };\n      }\n\n      return {\n        native: {\n          accessibilityRole: 'none'\n        }\n      };\n    }\n  }),\n  video: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'video',\n    category: 'embedded',\n    isVoid: false\n  })\n};\nvar editsModelMap = {\n  ins: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'ins',\n    category: 'edits',\n    mixedUAStyles: solidUnderlineStyle,\n    setMarkersForTNode: function setMarkersForTNode(targetMarkers) {\n      targetMarkers.edits = 'ins';\n    }\n  }),\n  del: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'del',\n    category: 'edits',\n    mixedUAStyles: lineThroughStyle,\n    setMarkersForTNode: function setMarkersForTNode(targetMarkers) {\n      targetMarkers.edits = 'del';\n    }\n  })\n};\nvar textLevelModelMap = {\n  em: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'em',\n    category: 'textual',\n    mixedUAStyles: italicStyle\n  }),\n  strong: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'strong',\n    category: 'textual',\n    mixedUAStyles: boldStyle\n  }),\n  small: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'small',\n    category: 'textual',\n    mixedUAStyles: {\n      fontSize: 'smaller'\n    }\n  }),\n  big: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'big',\n    category: 'textual',\n    mixedUAStyles: {\n      fontSize: 'larger'\n    }\n  }),\n  s: _HTMLElementModel.default.fromNativeModel({\n    tagName: 's',\n    category: 'textual',\n    mixedUAStyles: lineThroughStyle\n  }),\n  strike: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'strike',\n    category: 'textual',\n    mixedUAStyles: lineThroughStyle\n  }),\n  cite: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'cite',\n    category: 'textual',\n    mixedUAStyles: italicStyle\n  }),\n  q: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'q',\n    category: 'textual'\n  }),\n  dfn: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'dfn',\n    category: 'textual',\n    mixedUAStyles: italicStyle\n  }),\n  abbr: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'abbr',\n    category: 'textual',\n    mixedUAStyles: dottedUnderlineStyle\n  }),\n  acronym: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'acronym',\n    category: 'textual',\n    mixedUAStyles: dottedUnderlineStyle\n  }),\n  ruby: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'ruby',\n    category: 'textual'\n  }),\n  rt: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'rt',\n    category: 'textual'\n  }),\n  rp: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'rp',\n    category: 'textual'\n  }),\n  data: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'data',\n    category: 'textual'\n  }),\n  time: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'time',\n    category: 'textual'\n  }),\n  code: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'code',\n    category: 'textual',\n    mixedUAStyles: monoStyle\n  }),\n  tt: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'tt',\n    category: 'textual',\n    mixedUAStyles: monoStyle\n  }),\n  var: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'var',\n    category: 'textual',\n    mixedUAStyles: italicStyle\n  }),\n  samp: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'samp',\n    category: 'textual',\n    mixedUAStyles: monoStyle\n  }),\n  kbd: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'kbd',\n    category: 'textual',\n    mixedUAStyles: monoStyle\n  }),\n  sub: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'sub',\n    category: 'textual',\n    mixedUAStyles: {\n      textAlignVertical: 'bottom',\n      fontSize: 'smaller'\n    }\n  }),\n  sup: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'sup',\n    category: 'textual',\n    mixedUAStyles: {\n      textAlignVertical: 'top',\n      fontSize: 'smaller'\n    }\n  }),\n  i: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'i',\n    category: 'textual',\n    mixedUAStyles: italicStyle\n  }),\n  b: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'b',\n    category: 'textual',\n    mixedUAStyles: boldStyle\n  }),\n  u: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'u',\n    category: 'textual',\n    mixedUAStyles: solidUnderlineStyle\n  }),\n  mark: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'mark',\n    category: 'textual',\n    mixedUAStyles: {\n      backgroundColor: 'yellow',\n      color: 'black'\n    }\n  }),\n  bdi: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'bdi',\n    category: 'textual'\n  }),\n  bdo: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'bdo',\n    category: 'textual'\n  }),\n  span: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'span',\n    category: 'textual'\n  }),\n  br: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'br',\n    category: 'textual',\n    isVoid: true\n  }),\n  wbr: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'wbr',\n    category: 'textual',\n    isVoid: true\n  })\n};\n\nvar defaultHTMLElementModels = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  a: _HTMLElementModel.default.fromNativeModel({\n    tagName: 'a',\n    category: 'anchor',\n    getMixedUAStyles: function getMixedUAStyles(_ref6) {\n      var attributes = _ref6.attributes;\n\n      if (typeof attributes.href === 'string') {\n        return anchorStyle;\n      }\n    },\n    getReactNativeProps: getReactNativePropsWithHref,\n    setMarkersForTNode: function setMarkersForTNode(targetMarkers) {\n      targetMarkers.anchor = true;\n    }\n  })\n}, textLevelModelMap), editsModelMap), renderedEmbeddedModelMap), emptyEmbeddedModelMap), tabularModelMap), groupingModelMap), sectioningModelMap), interactiveModelMap), untranslatableModelMap);\n\nvar _default = defaultHTMLElementModels;\nexports.default = _default;","map":{"version":3,"sources":["defaultHTMLElementModels.ts"],"names":["UA_ANCHOR_COL","UA_GRAY","UA_MARGIN_HZ","bigMarginTopBottomStyle","marginTop","marginBottom","shortMarginTopBottomStyle","lineThroughStyle","textDecorationLine","italicStyle","fontStyle","monoStyle","fontFamily","boldStyle","fontWeight","spacedBlockStyle","marginLeft","marginRight","anchorStyle","color","textDecorationColor","leftBorderQuoteStyle","borderLeftWidth","borderLeftColor","dottedUnderlineStyle","textDecorationStyle","solidUnderlineStyle","listStyles","paddingLeft","preStyles","whiteSpace","fontSize","getReactNativePropsForHeading","domNode","textLabel","native","accessible","accessibilityLabel","accessibilityRole","getReactNativePropsWithHref","attributes","sectioningModelMap","address","category","tagName","mixedUAStyles","article","aside","body","footer","h1","headerStyle","getReactNativeProps","h2","h3","h4","h5","h6","header","hgroup","nav","section","unsupportedModelMap","area","isVoid","map","attribsModelMap","accesskey","caption","col","colgroup","datalist","source","track","optgroup","option","param","interactiveModelMap","button","reactNativeProps","fieldset","form","input","label","legend","meter","progress","select","details","dialog","output","summary","textarea","metadataModelMap","base","head","isOpaque","link","meta","title","untranslatableModelMap","groupingModelMap","blockquote","getMixedUAStyles","dd","div","dl","dt","figcaption","textAlign","figure","hr","height","width","backgroundColor","li","main","menu","ol","setMarkersForTNode","targetMarkers","parentMarkers","p","pre","xmp","listing","plaintext","ul","dir","tabularModelMap","table","tbody","td","padding","flex","tfoot","th","thead","tr","flexDirection","flexWrap","renderedEmbeddedModelMap","img","props","contentModel","HTMLContentModel","block","picture","emptyEmbeddedModelMap","audio","canvas","embed","iframe","math","object","svg","video","editsModelMap","ins","del","textLevelModelMap","em","strong","small","big","s","strike","cite","q","dfn","abbr","acronym","ruby","rt","rp","data","time","code","tt","var","samp","kbd","sub","textAlignVertical","sup","i","b","u","mark","bdi","bdo","span","br","wbr","defaultHTMLElementModels","a"],"mappings":"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","sourcesContent":["import { MixedStyleDeclaration } from '@native-html/css-processor';\nimport { textContent } from 'domutils';\nimport HTMLContentModel from './HTMLContentModel';\nimport HTMLElementModel from './HTMLElementModel';\nimport {\n  AttribTagNames,\n  EditsTagNames,\n  EmbeddedTagNames,\n  GroupingTagNames,\n  InteractiveTagNames,\n  MetadataTagNames,\n  SectioningTagNames,\n  TabularTagNames,\n  TextLevelTagNames,\n  UnsupportedTagNames,\n  UntranslatableTagNames,\n  HTMLModelRecord,\n  ElementModelBase\n} from './model-types';\n\nconst UA_ANCHOR_COL = '#245dc1';\nconst UA_GRAY = '#CCC';\nconst UA_MARGIN_HZ = 30;\n\nconst bigMarginTopBottomStyle: MixedStyleDeclaration = {\n  marginTop: '1em',\n  marginBottom: '1em'\n};\n\nconst shortMarginTopBottomStyle: MixedStyleDeclaration = {\n  marginTop: '.5em',\n  marginBottom: '.5em'\n};\n\nconst lineThroughStyle: MixedStyleDeclaration = {\n  textDecorationLine: 'line-through'\n};\n\nconst italicStyle: MixedStyleDeclaration = {\n  fontStyle: 'italic'\n};\n\nconst monoStyle: MixedStyleDeclaration = {\n  fontFamily: 'monospace'\n};\n\nconst boldStyle: MixedStyleDeclaration = {\n  fontWeight: 'bold'\n};\n\nconst spacedBlockStyle: MixedStyleDeclaration = {\n  ...bigMarginTopBottomStyle,\n  marginLeft: UA_MARGIN_HZ,\n  marginRight: UA_MARGIN_HZ\n};\n\nconst anchorStyle: MixedStyleDeclaration = {\n  color: UA_ANCHOR_COL,\n  textDecorationLine: 'underline',\n  textDecorationColor: UA_ANCHOR_COL\n};\n\nconst leftBorderQuoteStyle: MixedStyleDeclaration = {\n  borderLeftWidth: 2,\n  borderLeftColor: UA_GRAY\n};\n\nconst dottedUnderlineStyle: MixedStyleDeclaration = {\n  textDecorationLine: 'underline',\n  textDecorationStyle: 'dotted'\n};\n\nconst solidUnderlineStyle: MixedStyleDeclaration = {\n  textDecorationLine: 'underline',\n  textDecorationStyle: 'solid'\n};\n\n// TODO, support directional styles\nconst listStyles: MixedStyleDeclaration = {\n  ...bigMarginTopBottomStyle,\n  paddingLeft: 30\n};\n\nconst preStyles: MixedStyleDeclaration = {\n  whiteSpace: 'pre',\n  ...monoStyle,\n  ...bigMarginTopBottomStyle\n};\n\nfunction headerStyle(\n  fontSize: string,\n  marginSize: string\n): MixedStyleDeclaration {\n  return {\n    fontSize,\n    marginTop: marginSize,\n    marginBottom: marginSize,\n    ...boldStyle\n  };\n}\n\nconst getReactNativePropsForHeading: ElementModelBase<any>['getReactNativeProps'] =\n  ({ domNode }) => {\n    const textLabel = textContent(domNode!);\n    return {\n      native: {\n        accessible: true,\n        accessibilityLabel: textLabel,\n        accessibilityRole: 'header'\n      }\n    };\n  };\n\nconst getReactNativePropsWithHref: ElementModelBase<any>['getReactNativeProps'] =\n  function getReactNativePropsWithHref({ attributes }) {\n    if (typeof attributes.href === 'string' && attributes.href.length > 0) {\n      return {\n        native: {\n          accessible: true,\n          accessibilityRole: 'link'\n        }\n      };\n    }\n  };\n\nconst sectioningModelMap: HTMLModelRecord<\n  SectioningTagNames,\n  HTMLContentModel.block\n> = {\n  address: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'address',\n    mixedUAStyles: italicStyle\n  }),\n  article: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'article'\n  }),\n  aside: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'aside'\n  }),\n  body: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'body'\n  }),\n  footer: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'footer'\n  }),\n  h1: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h1',\n    mixedUAStyles: headerStyle('2em', '.67em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  h2: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h2',\n    mixedUAStyles: headerStyle('1.5em', '.83em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  h3: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h3',\n    mixedUAStyles: headerStyle('1.17em', '1em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  h4: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h4',\n    mixedUAStyles: headerStyle('1em', '1.33em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  h5: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h5',\n    mixedUAStyles: headerStyle('.83em', '1.67em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  h6: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'h6',\n    mixedUAStyles: headerStyle('.67em', '2.33em'),\n    getReactNativeProps: getReactNativePropsForHeading\n  }),\n  header: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'header'\n  }),\n  hgroup: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'hgroup'\n  }),\n  nav: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'nav'\n  }),\n  section: HTMLElementModel.fromNativeModel({\n    category: 'sectioning',\n    tagName: 'section'\n  })\n};\n\nconst unsupportedModelMap: HTMLModelRecord<\n  UnsupportedTagNames,\n  HTMLContentModel.none\n> = {\n  area: HTMLElementModel.fromNativeModel({\n    tagName: 'area',\n    category: 'untranslatable',\n    isVoid: true,\n    getReactNativeProps: getReactNativePropsWithHref\n  }),\n  map: HTMLElementModel.fromNativeModel({\n    tagName: 'map',\n    category: 'untranslatable'\n  })\n};\n\nconst attribsModelMap: HTMLModelRecord<AttribTagNames, HTMLContentModel.none> =\n  {\n    accesskey: HTMLElementModel.fromNativeModel({\n      tagName: 'accesskey',\n      category: 'untranslatable'\n    }),\n    caption: HTMLElementModel.fromNativeModel({\n      tagName: 'caption',\n      category: 'untranslatable'\n    }),\n    col: HTMLElementModel.fromNativeModel({\n      tagName: 'col',\n      category: 'untranslatable',\n      isVoid: true\n    }),\n    colgroup: HTMLElementModel.fromNativeModel({\n      tagName: 'colgroup',\n      category: 'untranslatable'\n    }),\n    datalist: HTMLElementModel.fromNativeModel({\n      tagName: 'datalist',\n      category: 'untranslatable'\n    }),\n    source: HTMLElementModel.fromNativeModel({\n      tagName: 'source',\n      category: 'untranslatable',\n      isVoid: true\n    }),\n    track: HTMLElementModel.fromNativeModel({\n      tagName: 'track',\n      category: 'untranslatable',\n      isVoid: true\n    }),\n    optgroup: HTMLElementModel.fromNativeModel({\n      tagName: 'optgroup',\n      category: 'untranslatable'\n    }),\n    option: HTMLElementModel.fromNativeModel({\n      tagName: 'option',\n      category: 'untranslatable'\n    }),\n    param: HTMLElementModel.fromNativeModel({\n      tagName: 'param',\n      category: 'untranslatable',\n      isVoid: true\n    })\n  };\n\nconst interactiveModelMap: HTMLModelRecord<\n  InteractiveTagNames,\n  HTMLContentModel.none\n> = {\n  button: HTMLElementModel.fromNativeModel({\n    tagName: 'button',\n    category: 'interactive',\n    reactNativeProps: {\n      native: {\n        accessibilityRole: 'button'\n      }\n    }\n  }),\n  fieldset: HTMLElementModel.fromNativeModel({\n    tagName: 'fieldset',\n    category: 'interactive'\n  }),\n  form: HTMLElementModel.fromNativeModel({\n    tagName: 'form',\n    category: 'interactive'\n  }),\n  input: HTMLElementModel.fromNativeModel({\n    tagName: 'input',\n    category: 'interactive',\n    isVoid: true\n  }),\n  label: HTMLElementModel.fromNativeModel({\n    tagName: 'label',\n    category: 'interactive'\n  }),\n  legend: HTMLElementModel.fromNativeModel({\n    tagName: 'legend',\n    category: 'interactive'\n  }),\n  meter: HTMLElementModel.fromNativeModel({\n    tagName: 'meter',\n    category: 'interactive'\n  }),\n  progress: HTMLElementModel.fromNativeModel({\n    tagName: 'progress',\n    category: 'interactive'\n  }),\n  select: HTMLElementModel.fromNativeModel({\n    tagName: 'select',\n    category: 'interactive',\n    reactNativeProps: {\n      native: {\n        accessible: true,\n        accessibilityRole: 'combobox'\n      }\n    }\n  }),\n  details: HTMLElementModel.fromNativeModel({\n    tagName: 'details',\n    category: 'interactive'\n  }),\n  dialog: HTMLElementModel.fromNativeModel({\n    tagName: 'dialog',\n    category: 'interactive'\n  }),\n  output: HTMLElementModel.fromNativeModel({\n    tagName: 'output',\n    category: 'interactive'\n  }),\n  summary: HTMLElementModel.fromNativeModel({\n    tagName: 'summary',\n    category: 'interactive'\n  }),\n  textarea: HTMLElementModel.fromNativeModel({\n    tagName: 'textarea',\n    category: 'interactive'\n  })\n};\n\nconst metadataModelMap: HTMLModelRecord<\n  MetadataTagNames,\n  HTMLContentModel.none\n> = {\n  base: HTMLElementModel.fromNativeModel({\n    tagName: 'base',\n    category: 'untranslatable',\n    isVoid: true\n  }),\n  head: HTMLElementModel.fromNativeModel({\n    tagName: 'head',\n    category: 'untranslatable',\n    isOpaque: true\n  }),\n  link: HTMLElementModel.fromNativeModel({\n    tagName: 'link',\n    category: 'untranslatable',\n    isVoid: true\n  }),\n  meta: HTMLElementModel.fromNativeModel({\n    tagName: 'meta',\n    category: 'untranslatable',\n    isVoid: true\n  }),\n  title: HTMLElementModel.fromNativeModel({\n    tagName: 'title',\n    category: 'untranslatable'\n  })\n};\n\nconst untranslatableModelMap: HTMLModelRecord<\n  UntranslatableTagNames,\n  HTMLContentModel.none\n> = {\n  ...attribsModelMap,\n  ...interactiveModelMap,\n  ...unsupportedModelMap,\n  ...metadataModelMap\n};\n\nconst groupingModelMap: HTMLModelRecord<\n  GroupingTagNames,\n  HTMLContentModel.block\n> = {\n  blockquote: HTMLElementModel.fromNativeModel({\n    tagName: 'blockquote',\n    category: 'grouping',\n    getMixedUAStyles: ({ attributes }) => {\n      if (attributes.type === 'cite') {\n        return leftBorderQuoteStyle;\n      }\n    },\n    mixedUAStyles: spacedBlockStyle\n  }),\n  dd: HTMLElementModel.fromNativeModel({\n    tagName: 'dd',\n    category: 'grouping',\n    mixedUAStyles: {\n      marginLeft: UA_MARGIN_HZ\n    }\n  }),\n  div: HTMLElementModel.fromNativeModel({\n    tagName: 'div',\n    category: 'grouping'\n  }),\n  dl: HTMLElementModel.fromNativeModel({\n    tagName: 'dl',\n    category: 'grouping',\n    mixedUAStyles: bigMarginTopBottomStyle\n  }),\n  dt: HTMLElementModel.fromNativeModel({\n    tagName: 'dt',\n    category: 'grouping',\n    mixedUAStyles: boldStyle\n  }),\n  figcaption: HTMLElementModel.fromNativeModel({\n    tagName: 'figcaption',\n    category: 'grouping',\n    mixedUAStyles: {\n      ...italicStyle,\n      textAlign: 'center'\n    }\n  }),\n  figure: HTMLElementModel.fromNativeModel({\n    tagName: 'figure',\n    category: 'grouping',\n    mixedUAStyles: spacedBlockStyle\n  }),\n  hr: HTMLElementModel.fromNativeModel({\n    tagName: 'hr',\n    category: 'grouping',\n    mixedUAStyles: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      height: 1,\n      width: '100%',\n      backgroundColor: UA_GRAY,\n      ...shortMarginTopBottomStyle\n    }\n  }),\n  li: HTMLElementModel.fromNativeModel({\n    tagName: 'li',\n    category: 'grouping'\n  }),\n  main: HTMLElementModel.fromNativeModel({\n    tagName: 'main',\n    category: 'grouping'\n  }),\n  menu: HTMLElementModel.fromNativeModel({\n    tagName: 'menu',\n    category: 'grouping'\n  }),\n  ol: HTMLElementModel.fromNativeModel({\n    tagName: 'ol',\n    category: 'grouping',\n    mixedUAStyles: listStyles,\n    setMarkersForTNode(targetMarkers, parentMarkers) {\n      targetMarkers.olNestLevel = parentMarkers.olNestLevel + 1;\n    }\n  }),\n  p: HTMLElementModel.fromNativeModel({\n    tagName: 'p',\n    category: 'grouping',\n    mixedUAStyles: bigMarginTopBottomStyle\n  }),\n  pre: HTMLElementModel.fromNativeModel({\n    tagName: 'pre',\n    category: 'grouping',\n    mixedUAStyles: preStyles\n  }),\n  xmp: HTMLElementModel.fromNativeModel({\n    tagName: 'xmp',\n    category: 'grouping',\n    mixedUAStyles: preStyles\n  }),\n  listing: HTMLElementModel.fromNativeModel({\n    tagName: 'listing',\n    category: 'grouping',\n    mixedUAStyles: preStyles\n  }),\n  plaintext: HTMLElementModel.fromNativeModel({\n    tagName: 'plaintext',\n    category: 'grouping',\n    mixedUAStyles: preStyles\n  }),\n  ul: HTMLElementModel.fromNativeModel({\n    tagName: 'ul',\n    category: 'grouping',\n    mixedUAStyles: listStyles,\n    setMarkersForTNode(targetMarkers, parentMarkers) {\n      targetMarkers.ulNestLevel = parentMarkers.ulNestLevel + 1;\n    }\n  }),\n  dir: HTMLElementModel.fromNativeModel({\n    tagName: 'dir',\n    category: 'grouping',\n    mixedUAStyles: listStyles\n  })\n};\n\nconst tabularModelMap: HTMLModelRecord<\n  TabularTagNames,\n  HTMLContentModel.block\n> = {\n  table: HTMLElementModel.fromNativeModel({\n    tagName: 'table',\n    category: 'tabular'\n  }),\n  tbody: HTMLElementModel.fromNativeModel({\n    tagName: 'tbody',\n    category: 'tabular'\n  }),\n  td: HTMLElementModel.fromNativeModel({\n    tagName: 'td',\n    category: 'tabular',\n    mixedUAStyles: {\n      padding: 2,\n      flex: 1\n    }\n  }),\n  tfoot: HTMLElementModel.fromNativeModel({\n    tagName: 'tfoot',\n    category: 'tabular'\n  }),\n  th: HTMLElementModel.fromNativeModel({\n    tagName: 'th',\n    category: 'tabular',\n    mixedUAStyles: {\n      padding: 2,\n      flex: 1,\n      fontWeight: 'bold'\n    }\n  }),\n  thead: HTMLElementModel.fromNativeModel({\n    tagName: 'thead',\n    category: 'tabular'\n  }),\n  tr: HTMLElementModel.fromNativeModel({\n    tagName: 'tr',\n    category: 'tabular',\n    mixedUAStyles: {\n      flexDirection: 'row',\n      flexWrap: 'nowrap'\n    }\n  })\n};\n\n// These emnbedded should be rendered by default.\nconst renderedEmbeddedModelMap: HTMLModelRecord<\n  Extract<EmbeddedTagNames, 'picture' | 'img'>,\n  HTMLContentModel.block\n> = {\n  img: HTMLElementModel.fromNativeModel({\n    tagName: 'img',\n    category: 'embedded',\n    isVoid: true,\n    getReactNativeProps({ attributes }, props) {\n      // see https://w3c.github.io/html-aria/#el-img\n      const label = attributes['aria-label'] || attributes.alt;\n      if (label && (!props?.view || props.view.accessibilityRole !== 'none')) {\n        return {\n          native: {\n            accessibilityLabel: label,\n            accessibilityRole: 'image'\n          }\n        };\n      }\n      return {\n        native: {\n          accessibilityRole: 'none'\n        }\n      };\n    }\n  }).extend({\n    contentModel: HTMLContentModel.block\n  }),\n  picture: HTMLElementModel.fromNativeModel({\n    tagName: 'picture',\n    category: 'embedded',\n    isOpaque: false,\n    isVoid: false // allows source and img\n  }).extend({\n    contentModel: HTMLContentModel.block\n  })\n};\n\n// Embedded elements content model is \"none\" by default.\nconst emptyEmbeddedModelMap: HTMLModelRecord<\n  Exclude<EmbeddedTagNames, 'img' | 'picture'>,\n  HTMLContentModel.none\n> = {\n  audio: HTMLElementModel.fromNativeModel({\n    tagName: 'audio',\n    category: 'embedded',\n    isVoid: false // allows tracks\n  }),\n  canvas: HTMLElementModel.fromNativeModel({\n    tagName: 'canvas',\n    category: 'embedded',\n    isVoid: false // allows specific content\n  }),\n  embed: HTMLElementModel.fromNativeModel({\n    tagName: 'embed',\n    category: 'embedded',\n    isVoid: true\n  }),\n  iframe: HTMLElementModel.fromNativeModel({\n    tagName: 'iframe',\n    category: 'embedded',\n    isVoid: true\n  }),\n  math: HTMLElementModel.fromNativeModel({\n    tagName: 'math',\n    category: 'embedded',\n    isVoid: false, // allows mathml elems\n    isOpaque: true\n  }),\n  object: HTMLElementModel.fromNativeModel({\n    tagName: 'object',\n    category: 'embedded',\n    isVoid: false // allows params\n  }),\n  svg: HTMLElementModel.fromNativeModel({\n    tagName: 'svg',\n    category: 'embedded',\n    isVoid: false, // allows svg elems\n    isOpaque: true,\n    getReactNativeProps({ attributes }) {\n      if (attributes['aria-label']) {\n        return {\n          native: {\n            accessibilityLabel: attributes['aria-label'],\n            accessibilityRole: 'image'\n          }\n        };\n      }\n      return {\n        native: {\n          accessibilityRole: 'none'\n        }\n      };\n    }\n  }),\n  video: HTMLElementModel.fromNativeModel({\n    tagName: 'video',\n    category: 'embedded',\n    isVoid: false // allows source, tracks + transparent\n  })\n};\n\nconst editsModelMap: HTMLModelRecord<EditsTagNames, HTMLContentModel.mixed> = {\n  ins: HTMLElementModel.fromNativeModel({\n    tagName: 'ins',\n    category: 'edits',\n    mixedUAStyles: solidUnderlineStyle,\n    setMarkersForTNode(targetMarkers) {\n      targetMarkers.edits = 'ins';\n    }\n  }),\n  del: HTMLElementModel.fromNativeModel({\n    tagName: 'del',\n    category: 'edits',\n    mixedUAStyles: lineThroughStyle,\n    setMarkersForTNode(targetMarkers) {\n      targetMarkers.edits = 'del';\n    }\n  })\n};\n\nconst textLevelModelMap: HTMLModelRecord<\n  TextLevelTagNames,\n  HTMLContentModel.textual\n> = {\n  em: HTMLElementModel.fromNativeModel({\n    tagName: 'em',\n    category: 'textual',\n    mixedUAStyles: italicStyle\n  }),\n  strong: HTMLElementModel.fromNativeModel({\n    tagName: 'strong',\n    category: 'textual',\n    mixedUAStyles: boldStyle\n  }),\n  small: HTMLElementModel.fromNativeModel({\n    tagName: 'small',\n    category: 'textual',\n    mixedUAStyles: {\n      fontSize: 'smaller'\n    }\n  }),\n  big: HTMLElementModel.fromNativeModel({\n    tagName: 'big',\n    category: 'textual',\n    mixedUAStyles: {\n      fontSize: 'larger'\n    }\n  }),\n  s: HTMLElementModel.fromNativeModel({\n    tagName: 's',\n    category: 'textual',\n    mixedUAStyles: lineThroughStyle\n  }),\n  strike: HTMLElementModel.fromNativeModel({\n    tagName: 'strike',\n    category: 'textual',\n    mixedUAStyles: lineThroughStyle\n  }),\n  cite: HTMLElementModel.fromNativeModel({\n    tagName: 'cite',\n    category: 'textual',\n    mixedUAStyles: italicStyle\n  }),\n  q: HTMLElementModel.fromNativeModel({\n    tagName: 'q',\n    category: 'textual'\n    // default style, content: \"open,close-quote\"\n  }),\n  dfn: HTMLElementModel.fromNativeModel({\n    tagName: 'dfn',\n    category: 'textual',\n    mixedUAStyles: italicStyle\n  }),\n  abbr: HTMLElementModel.fromNativeModel({\n    tagName: 'abbr',\n    category: 'textual',\n    mixedUAStyles: dottedUnderlineStyle\n  }),\n  acronym: HTMLElementModel.fromNativeModel({\n    tagName: 'acronym',\n    category: 'textual',\n    mixedUAStyles: dottedUnderlineStyle\n  }),\n  ruby: HTMLElementModel.fromNativeModel({\n    tagName: 'ruby',\n    category: 'textual'\n  }),\n  rt: HTMLElementModel.fromNativeModel({\n    tagName: 'rt',\n    category: 'textual'\n  }),\n  rp: HTMLElementModel.fromNativeModel({\n    tagName: 'rp',\n    category: 'textual'\n  }),\n  data: HTMLElementModel.fromNativeModel({\n    tagName: 'data',\n    category: 'textual'\n  }),\n  time: HTMLElementModel.fromNativeModel({\n    tagName: 'time',\n    category: 'textual'\n  }),\n  code: HTMLElementModel.fromNativeModel({\n    tagName: 'code',\n    category: 'textual',\n    mixedUAStyles: monoStyle\n  }),\n  tt: HTMLElementModel.fromNativeModel({\n    tagName: 'tt',\n    category: 'textual',\n    mixedUAStyles: monoStyle\n  }),\n  var: HTMLElementModel.fromNativeModel({\n    tagName: 'var',\n    category: 'textual',\n    mixedUAStyles: italicStyle\n  }),\n  samp: HTMLElementModel.fromNativeModel({\n    tagName: 'samp',\n    category: 'textual',\n    mixedUAStyles: monoStyle\n  }),\n  kbd: HTMLElementModel.fromNativeModel({\n    tagName: 'kbd',\n    category: 'textual',\n    mixedUAStyles: monoStyle\n  }),\n  sub: HTMLElementModel.fromNativeModel({\n    tagName: 'sub',\n    category: 'textual',\n    mixedUAStyles: {\n      textAlignVertical: 'bottom',\n      fontSize: 'smaller'\n    }\n  }),\n  sup: HTMLElementModel.fromNativeModel({\n    tagName: 'sup',\n    category: 'textual',\n    mixedUAStyles: {\n      textAlignVertical: 'top',\n      fontSize: 'smaller'\n    }\n  }),\n  i: HTMLElementModel.fromNativeModel({\n    tagName: 'i',\n    category: 'textual',\n    mixedUAStyles: italicStyle\n  }),\n  b: HTMLElementModel.fromNativeModel({\n    tagName: 'b',\n    category: 'textual',\n    mixedUAStyles: boldStyle\n  }),\n  u: HTMLElementModel.fromNativeModel({\n    tagName: 'u',\n    category: 'textual',\n    mixedUAStyles: solidUnderlineStyle\n  }),\n  mark: HTMLElementModel.fromNativeModel({\n    tagName: 'mark',\n    category: 'textual',\n    mixedUAStyles: {\n      backgroundColor: 'yellow',\n      color: 'black'\n    }\n  }),\n  bdi: HTMLElementModel.fromNativeModel({\n    tagName: 'bdi',\n    category: 'textual'\n    // unicode-bidi: isolate;\n  }),\n  bdo: HTMLElementModel.fromNativeModel({\n    tagName: 'bdo',\n    category: 'textual'\n    //  unicode-bidi: isolate-override;\n  }),\n  span: HTMLElementModel.fromNativeModel({\n    tagName: 'span',\n    category: 'textual'\n  }),\n  br: HTMLElementModel.fromNativeModel({\n    tagName: 'br',\n    category: 'textual',\n    isVoid: true\n  }),\n  wbr: HTMLElementModel.fromNativeModel({\n    tagName: 'wbr',\n    category: 'textual',\n    isVoid: true\n  })\n};\n\nconst defaultHTMLElementModels = {\n  a: HTMLElementModel.fromNativeModel({\n    tagName: 'a',\n    category: 'anchor',\n    getMixedUAStyles: ({ attributes }) => {\n      if (typeof attributes.href === 'string') {\n        return anchorStyle;\n      }\n    },\n    getReactNativeProps: getReactNativePropsWithHref,\n    setMarkersForTNode(targetMarkers) {\n      targetMarkers.anchor = true;\n    }\n  }),\n  ...textLevelModelMap,\n  ...editsModelMap,\n  ...renderedEmbeddedModelMap,\n  ...emptyEmbeddedModelMap,\n  ...tabularModelMap,\n  ...groupingModelMap,\n  ...sectioningModelMap,\n  ...interactiveModelMap,\n  ...untranslatableModelMap\n};\n\nexport type DefaultHTMLElementModelsStatic = typeof defaultHTMLElementModels;\n\nexport default defaultHTMLElementModels;\n"]},"metadata":{},"sourceType":"script"}