{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeCollapsibleAroundSegmentBreak = removeCollapsibleAroundSegmentBreak;\nexports.removeConsecutiveSegmentBreaks = removeConsecutiveSegmentBreaks;\nexports.normalizeZeroWidthWhitespaces = normalizeZeroWidthWhitespaces;\nexports.removeLineBreaksAroundEastAsianDiscardSet = removeLineBreaksAroundEastAsianDiscardSet;\nexports.replaceSegmentBreaks = replaceSegmentBreaks;\nexports.normalizeWhitespaces = normalizeWhitespaces;\nvar COLLAPSIBLE_AROUND_SEGMENT_BREAK_REGEX = /[ \\t]*[\\r\\n\\f]+[ \\t]*/g;\nvar CONSECUTIVE_SEGMENT_BREAKS_REGEX = /[\\r\\n\\f]+/g;\nvar ZERO_WIDTH_SPACES_AROUND_SEGMENT_BREAKS_REGEX = /(\\u200b\\n\\u200b?|\\u200b?\\n\\u200b)/g;\nvar SPACE_DISCARDING_CHARSET_REGEX = /([\\u2E80-\\u2EFF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uF900-\\uFAFF\\uFE10-\\uFE1F\\uFE30-\\uFE4F\\uFE50-\\uFE6F\\uFF00-\\uFFEF])\\n([\\u2E80-\\u2EFF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uF900-\\uFAFF\\uFE10-\\uFE1F\\uFE30-\\uFE4F\\uFE50-\\uFE6F\\uFF00-\\uFFEF])/g;\nvar SEGMENT_BREAK_REGEX = /\\n/g;\nvar SUBSEQUENT_WHITESPACE_REGEX = /[ \\t]+/g;\n\nfunction removeCollapsibleAroundSegmentBreak(data) {\n  return data.replace(COLLAPSIBLE_AROUND_SEGMENT_BREAK_REGEX, '\\n');\n}\n\nfunction removeConsecutiveSegmentBreaks(data) {\n  return data.replace(CONSECUTIVE_SEGMENT_BREAKS_REGEX, '\\n');\n}\n\nfunction normalizeZeroWidthWhitespaces(data) {\n  return data.replace(ZERO_WIDTH_SPACES_AROUND_SEGMENT_BREAKS_REGEX, \"\\u200B\");\n}\n\nfunction removeLineBreaksAroundEastAsianDiscardSet(data) {\n  return data.replace(SPACE_DISCARDING_CHARSET_REGEX, '$1$2');\n}\n\nfunction replaceSegmentBreaks(data) {\n  return data.replace(SEGMENT_BREAK_REGEX, ' ');\n}\n\nfunction normalizeWhitespaces(data) {\n  return data.replace(SUBSEQUENT_WHITESPACE_REGEX, ' ');\n}","map":{"version":3,"sources":["text-transforms.ts"],"names":["COLLAPSIBLE_AROUND_SEGMENT_BREAK_REGEX","CONSECUTIVE_SEGMENT_BREAKS_REGEX","ZERO_WIDTH_SPACES_AROUND_SEGMENT_BREAKS_REGEX","SPACE_DISCARDING_CHARSET_REGEX","SEGMENT_BREAK_REGEX","SUBSEQUENT_WHITESPACE_REGEX","data"],"mappings":";;;;;;;;;;;AAGA,IAAMA,sCAAsC,GAA5C,wBAAA;AACA,IAAMC,gCAAgC,GAAtC,YAAA;AACA,IAAMC,6CAA6C,GAAnD,oCAAA;AAEA,IAAMC,8BAA8B,GAApC,qhBAAA;AAEA,IAAMC,mBAAmB,GAAzB,KAAA;AACA,IAAMC,2BAA2B,GAAjC,SAAA;;AAIO,SAAA,mCAAA,CAAA,IAAA,EAAmE;AACxE,SAAOC,IAAI,CAAJA,OAAAA,CAAAA,sCAAAA,EAAP,IAAOA,CAAP;AAGF;;AAEO,SAAA,8BAAA,CAAA,IAAA,EAA8D;AACnE,SAAOA,IAAI,CAAJA,OAAAA,CAAAA,gCAAAA,EAAP,IAAOA,CAAP;AAGF;;AAIO,SAAA,6BAAA,CAAA,IAAA,EAA6D;AAClE,SAAOA,IAAI,CAAJA,OAAAA,CAAAA,6CAAAA,EAAP,QAAOA,CAAP;AAGF;;AAQO,SAAA,yCAAA,CAAA,IAAA,EAEG;AACR,SAAOA,IAAI,CAAJA,OAAAA,CAAAA,8BAAAA,EAAP,MAAOA,CAAP;AAGF;;AAGO,SAAA,oBAAA,CAAA,IAAA,EAAoD;AACzD,SAAOA,IAAI,CAAJA,OAAAA,CAAAA,mBAAAA,EAAP,GAAOA,CAAP;AAGF;;AAGO,SAAA,oBAAA,CAAA,IAAA,EAAoD;AACzD,SAAOA,IAAI,CAAJA,OAAAA,CAAAA,2BAAAA,EAAP,GAAOA,CAAP;AACD","sourcesContent":["// TODO, when React Native supports unicode regexes,\n// we should use `p{Zs}` instead of [ \\t] to comply\n// with the CSS3 Text Module standard. https://www.w3.org/TR/css-text-3/#spaces\nconst COLLAPSIBLE_AROUND_SEGMENT_BREAK_REGEX = /[ \\t]*[\\r\\n\\f]+[ \\t]*/g;\nconst CONSECUTIVE_SEGMENT_BREAKS_REGEX = /[\\r\\n\\f]+/g;\nconst ZERO_WIDTH_SPACES_AROUND_SEGMENT_BREAKS_REGEX =\n  /(\\u200b\\n\\u200b?|\\u200b?\\n\\u200b)/g;\nconst SPACE_DISCARDING_CHARSET_REGEX =\n  /([\\u2E80-\\u2EFF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uF900-\\uFAFF\\uFE10-\\uFE1F\\uFE30-\\uFE4F\\uFE50-\\uFE6F\\uFF00-\\uFFEF])\\n([\\u2E80-\\u2EFF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uF900-\\uFAFF\\uFE10-\\uFE1F\\uFE30-\\uFE4F\\uFE50-\\uFE6F\\uFF00-\\uFFEF])/g;\nconst SEGMENT_BREAK_REGEX = /\\n/g;\nconst SUBSEQUENT_WHITESPACE_REGEX = /[ \\t]+/g;\n\n// Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#white-space-phase-1\nexport function removeCollapsibleAroundSegmentBreak(data: string): string {\n  return data.replace(COLLAPSIBLE_AROUND_SEGMENT_BREAK_REGEX, '\\n');\n}\n\n// Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#line-break-transform\nexport function removeConsecutiveSegmentBreaks(data: string): string {\n  return data.replace(CONSECUTIVE_SEGMENT_BREAKS_REGEX, '\\n');\n}\n\n// Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20200429/#line-break-transform\n// In the latest version (https://www.w3.org/TR/2020/WD-css-text-3-20201119/),\n// the behavior is considered at UA discretion.\nexport function normalizeZeroWidthWhitespaces(data: string): string {\n  return data.replace(ZERO_WIDTH_SPACES_AROUND_SEGMENT_BREAKS_REGEX, '\\u200b');\n}\n\n// Partial implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20200429/#line-break-transform\n//\n// Because RN Javascript runtime doesn't support String.fromCharCode, we don't support space discarding\n// for character ranges above U+FFFF\n//\n// In the latest version (https://www.w3.org/TR/2020/WD-css-text-3-20201119/),\n// the behavior is considered at UA discretion.\nexport function removeLineBreaksAroundEastAsianDiscardSet(\n  data: string\n): string {\n  return data.replace(SPACE_DISCARDING_CHARSET_REGEX, '$1$2');\n}\n\n// Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#white-space-phase-2\n// (A.1)\nexport function replaceSegmentBreaks(data: string): string {\n  return data.replace(SEGMENT_BREAK_REGEX, ' ');\n}\n\n// Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#white-space-phase-2\n// (A.4)\nexport function normalizeWhitespaces(data: string): string {\n  return data.replace(SUBSEQUENT_WHITESPACE_REGEX, ' ');\n}\n"]},"metadata":{},"sourceType":"script"}