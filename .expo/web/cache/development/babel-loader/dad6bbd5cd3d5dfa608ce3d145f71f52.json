{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TStylesMerger = exports.emptyProcessedPropsReg = void 0;\n\nvar _cssProcessor = _interopRequireWildcard(require(\"@native-html/css-processor\"));\n\nvar _TStyles = require(\"./TStyles\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar emptyProcessedPropsReg = new _cssProcessor.CSSProcessedProps();\nexports.emptyProcessedPropsReg = emptyProcessedPropsReg;\n\nfunction mapMixedStyleRecordToCSSProcessedPropsReg(processor, styles) {\n  var regStyles = {};\n\n  for (var key in styles) {\n    regStyles[key] = processor.compileStyleDeclaration(styles[key]);\n  }\n\n  return regStyles;\n}\n\nvar TStylesMerger = function () {\n  function TStylesMerger(config, modelRegistry, cssProcessorConfig) {\n    _classCallCheck(this, TStylesMerger);\n\n    _defineProperty(this, \"processor\", void 0);\n\n    _defineProperty(this, \"tagsStyles\", void 0);\n\n    _defineProperty(this, \"classesStyles\", void 0);\n\n    _defineProperty(this, \"idsStyles\", void 0);\n\n    _defineProperty(this, \"enableCSSInlineProcessing\", void 0);\n\n    _defineProperty(this, \"enableUserAgentStyles\", void 0);\n\n    _defineProperty(this, \"modelRegistry\", void 0);\n\n    this.processor = new _cssProcessor.default(cssProcessorConfig);\n    this.modelRegistry = modelRegistry;\n    this.classesStyles = mapMixedStyleRecordToCSSProcessedPropsReg(this.processor, config.classesStyles);\n    this.tagsStyles = mapMixedStyleRecordToCSSProcessedPropsReg(this.processor, config.tagsStyles);\n    this.idsStyles = mapMixedStyleRecordToCSSProcessedPropsReg(this.processor, config.idsStyles);\n    this.enableCSSInlineProcessing = config.enableCSSInlineProcessing;\n    this.enableUserAgentStyles = config.enableUserAgentStyles;\n  }\n\n  _createClass(TStylesMerger, [{\n    key: \"compileInlineCSS\",\n    value: function compileInlineCSS(inlineCSS) {\n      return this.processor.compileInlineCSS(inlineCSS);\n    }\n  }, {\n    key: \"compileStyleDeclaration\",\n    value: function compileStyleDeclaration(styleDeclaration) {\n      return this.processor.compileStyleDeclaration(styleDeclaration);\n    }\n  }, {\n    key: \"buildStyles\",\n    value: function buildStyles(inlineStyle, parentStyles, descriptor) {\n      var _this = this;\n\n      var _this$tagsStyles, _this$idsStyles, _ref, _ref2, _model$getMixedUAStyl, _model$getUADerivedSt, _model$mixedUAStyles;\n\n      var ownInlinePropsReg = this.enableCSSInlineProcessing && inlineStyle ? this.compileInlineCSS(inlineStyle) : null;\n      var model = descriptor.tagName ? this.modelRegistry.getElementModelFromTagName(descriptor.tagName) : null;\n      var userTagOwnProps = (_this$tagsStyles = this.tagsStyles[descriptor.tagName]) !== null && _this$tagsStyles !== void 0 ? _this$tagsStyles : null;\n      var userIdOwnProps = (_this$idsStyles = this.idsStyles[descriptor.id]) !== null && _this$idsStyles !== void 0 ? _this$idsStyles : null;\n      var classes = descriptor.classes;\n      var userClassesOwnPropsList = classes.map(function (c) {\n        return _this.classesStyles[c] || null;\n      });\n      var dynamicPropsFromAttributes = this.enableUserAgentStyles ? (_ref = (_ref2 = (model === null || model === void 0 ? void 0 : (_model$getMixedUAStyl = model.getMixedUAStyles) === null || _model$getMixedUAStyl === void 0 ? void 0 : _model$getMixedUAStyl.call(model, descriptor, descriptor.domNode)) || null) !== null && _ref2 !== void 0 ? _ref2 : model === null || model === void 0 ? void 0 : (_model$getUADerivedSt = model.getUADerivedStyleFromAttributes) === null || _model$getUADerivedSt === void 0 ? void 0 : _model$getUADerivedSt.call(model, descriptor.attributes, descriptor.markers)) !== null && _ref !== void 0 ? _ref : null : null;\n      var userAgentTagProps = this.enableUserAgentStyles ? (_model$mixedUAStyles = model === null || model === void 0 ? void 0 : model.mixedUAStyles) !== null && _model$mixedUAStyles !== void 0 ? _model$mixedUAStyles : null : null;\n      var mergedOwnProps = emptyProcessedPropsReg.merge.apply(emptyProcessedPropsReg, [userAgentTagProps && this.processor.compileStyleDeclaration(userAgentTagProps), dynamicPropsFromAttributes && this.processor.compileStyleDeclaration(dynamicPropsFromAttributes), userTagOwnProps].concat(_toConsumableArray(userClassesOwnPropsList), [userIdOwnProps, ownInlinePropsReg]));\n      return new _TStyles.TStyles(mergedOwnProps, parentStyles);\n    }\n  }]);\n\n  return TStylesMerger;\n}();\n\nexports.TStylesMerger = TStylesMerger;","map":{"version":3,"sources":["TStylesMerger.ts"],"names":["emptyProcessedPropsReg","CSSProcessedProps","regStyles","processor","styles","constructor","CSSProcessor","mapMixedStyleRecordToCSSProcessedPropsReg","config","compileInlineCSS","compileStyleDeclaration","buildStyles","ownInlinePropsReg","model","descriptor","userTagOwnProps","userIdOwnProps","classes","userClassesOwnPropsList","c","dynamicPropsFromAttributes","userAgentTagProps","mergedOwnProps","TStyles"],"mappings":"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","sourcesContent":["import CSSProcessor, {\n  CSSProcessedProps,\n  CSSProcessorConfig,\n  MixedStyleDeclaration\n} from '@native-html/css-processor';\nimport HTMLModelRegistry from '../model/HTMLModelRegistry';\nimport { TNodeDescriptor } from '../tree/tree-types';\nimport { TStyles } from './TStyles';\nimport { StylesConfig } from './types';\n\nexport const emptyProcessedPropsReg: CSSProcessedProps =\n  new CSSProcessedProps();\n\nfunction mapMixedStyleRecordToCSSProcessedPropsReg(\n  processor: CSSProcessor,\n  styles?: Record<string, MixedStyleDeclaration>\n): Record<string, CSSProcessedProps> {\n  let regStyles: Record<string, CSSProcessedProps> = {};\n  for (const key in styles) {\n    regStyles[key] = processor.compileStyleDeclaration(styles[key]);\n  }\n  return regStyles;\n}\n\n// Specificity hierarchy, in descending order:\n// 1. Inline styles\n// 2. ID (idsStyles)\n// 3. Classes (classesStyles)\n// 4. Element name (tagsStyles)\n// 5. Attribute styles (styles derived from attributes)\n// 6. Default element styles\n// 7. Inherited styles (baseFontStyles)\nexport class TStylesMerger {\n  private processor: CSSProcessor;\n  private tagsStyles: Record<string, CSSProcessedProps>;\n  private classesStyles: Record<string, CSSProcessedProps>;\n  private idsStyles: Record<string, CSSProcessedProps>;\n  private enableCSSInlineProcessing: boolean;\n  private enableUserAgentStyles: boolean;\n  private modelRegistry: HTMLModelRegistry<string>;\n  constructor(\n    config: Required<StylesConfig>,\n    modelRegistry: HTMLModelRegistry<string>,\n    cssProcessorConfig?: CSSProcessorConfig\n  ) {\n    this.processor = new CSSProcessor(cssProcessorConfig);\n    this.modelRegistry = modelRegistry;\n    this.classesStyles = mapMixedStyleRecordToCSSProcessedPropsReg(\n      this.processor,\n      config.classesStyles\n    );\n    this.tagsStyles = mapMixedStyleRecordToCSSProcessedPropsReg(\n      this.processor,\n      config.tagsStyles\n    );\n    this.idsStyles = mapMixedStyleRecordToCSSProcessedPropsReg(\n      this.processor,\n      config.idsStyles\n    );\n    this.enableCSSInlineProcessing = config.enableCSSInlineProcessing;\n    this.enableUserAgentStyles = config.enableUserAgentStyles;\n  }\n\n  compileInlineCSS(inlineCSS: string) {\n    return this.processor.compileInlineCSS(inlineCSS);\n  }\n\n  compileStyleDeclaration(styleDeclaration: MixedStyleDeclaration) {\n    return this.processor.compileStyleDeclaration(styleDeclaration);\n  }\n\n  buildStyles(\n    inlineStyle: string,\n    parentStyles: TStyles | null,\n    descriptor: TNodeDescriptor\n  ): TStyles {\n    const ownInlinePropsReg =\n      this.enableCSSInlineProcessing && inlineStyle\n        ? this.compileInlineCSS(inlineStyle)\n        : null;\n    const model = descriptor.tagName\n      ? this.modelRegistry.getElementModelFromTagName(descriptor.tagName)\n      : null;\n    const userTagOwnProps =\n      this.tagsStyles[descriptor.tagName as string] ?? null;\n    const userIdOwnProps = this.idsStyles[descriptor.id as string] ?? null;\n    const classes = descriptor.classes;\n    const userClassesOwnPropsList = classes.map(\n      (c) => this.classesStyles[c] || null\n    );\n    const dynamicPropsFromAttributes = this.enableUserAgentStyles\n      ? (model?.getMixedUAStyles?.(descriptor, descriptor.domNode!) || null) ??\n        model?.getUADerivedStyleFromAttributes?.(\n          descriptor.attributes,\n          descriptor.markers\n        ) ??\n        null\n      : null;\n    const userAgentTagProps = this.enableUserAgentStyles\n      ? model?.mixedUAStyles ?? null\n      : null;\n    // Latest properties will override former properties.\n    const mergedOwnProps = emptyProcessedPropsReg.merge(\n      userAgentTagProps &&\n        this.processor.compileStyleDeclaration(userAgentTagProps),\n      dynamicPropsFromAttributes &&\n        this.processor.compileStyleDeclaration(dynamicPropsFromAttributes),\n      userTagOwnProps,\n      ...userClassesOwnPropsList,\n      userIdOwnProps,\n      ownInlinePropsReg\n    );\n    return new TStyles(mergedOwnProps, parentStyles);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}