{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\CEPS\\\\Appcolegio\\\\Pagesexternas\\\\PageMusicas.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Globais from \"../Configs/Globais\";\nimport { Card } from \"react-native-elements\";\nimport { Button } from \"react-native-elements/dist/buttons/Button\";\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\nexport default function PageMusicas(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(Globais.playlist),\n      _useState2 = _slicedToArray(_useState, 2),\n      listamusicas = _useState2[0],\n      setlistamusicas = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      testelist = _useState4[0],\n      setTestelist = _useState4[1];\n\n  function playSound(url, index) {\n    var novo = [];\n    setTestelist(novo);\n\n    for (var i = 0; i < Globais.playlist.length; i++) {\n      Globais.playlist[i].current = 0;\n    }\n\n    Globais.playlist[index].current = 1;\n    var lista = Globais.playlist;\n    setlistamusicas(lista);\n    Globais.playSound(url);\n  }\n\n  function stopSound(url, index) {\n    var i, novo2;\n    return _regeneratorRuntime.async(function stopSound$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            for (i = 0; i < Globais.playlist.length; i++) {\n              Globais.playlist[i].current = 0;\n            }\n\n            novo2 = [];\n            setTestelist(novo2);\n            setlistamusicas(Globais.playlist);\n            console.log(listamusicas);\n            Globais.stopSound(url);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Card.Title, {\n    style: {\n      color: \"#43C1C4\",\n      fontFamily: \"Porkys\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Nossa Playlist\"), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), listamusicas.map(function (item, index) {\n    return React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 0.8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 0.2\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      name: \"music\",\n      type: \"font-awesome\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    })), React.createElement(View, {\n      style: {\n        flex: 0.8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, item.nome)))), React.createElement(View, {\n      style: {\n        flex: 0.2\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, item.current == 1 ? React.createElement(Button, {\n      onPress: function onPress() {\n        return stopSound(item.url_musica, index);\n      },\n      title: \"\",\n      icon: {\n        name: \"stop\",\n        type: \"font-awesome\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }) : React.createElement(Button, {\n      onPress: function onPress() {\n        return playSound(item.url_musica, index);\n      },\n      title: \"\",\n      icon: {\n        name: \"play\",\n        type: \"font-awesome\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    })));\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate(\"PageInicioApp\");\n    },\n    title: \"Voltar\",\n    icon: {\n      name: \"undo\",\n      type: \"font-awesome\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), testelist.map(function (item, index) {\n    return React.createElement(Text, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, item.nome);\n  })));\n}","map":{"version":3,"sources":["C:/xampp/htdocs/CEPS/Appcolegio/Pagesexternas/PageMusicas.tsx"],"names":["React","useState","Globais","Card","Button","Icon","PageMusicas","navigation","playlist","listamusicas","setlistamusicas","testelist","setTestelist","playSound","url","index","novo","i","length","current","lista","stopSound","novo2","console","log","color","fontFamily","map","item","flexDirection","flex","nome","url_musica","name","type","navigate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport Globais from \"../Configs/Globais\";\r\nimport { Card } from \"react-native-elements\";\r\nimport { Audio } from \"expo-av\";\r\nimport { Button } from \"react-native-elements/dist/buttons/Button\";\r\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\r\nexport default function PageMusicas({ navigation }) {\r\n  const [listamusicas, setlistamusicas] = useState(Globais.playlist);\r\n  const [testelist, setTestelist] = useState([]);\r\n\r\n  function playSound(url, index) {\r\n    let novo = [];\r\n    setTestelist(novo);\r\n    for (let i = 0; i < Globais.playlist.length; i++) {\r\n      Globais.playlist[i].current = 0;\r\n    }\r\n    Globais.playlist[index].current = 1;\r\n    let lista = Globais.playlist;\r\n    setlistamusicas(lista);\r\n    Globais.playSound(url);\r\n  }\r\n  async function stopSound(url, index) {\r\n    for (let i = 0; i < Globais.playlist.length; i++) {\r\n      Globais.playlist[i].current = 0;\r\n    }\r\n    let novo2 = [];\r\n    setTestelist(novo2);\r\n    setlistamusicas(Globais.playlist);\r\n    console.log(listamusicas);\r\n\r\n    Globais.stopSound(url);\r\n  }\r\n  return (\r\n    <View>\r\n      <Card>\r\n        <Card.Title style={{ color: \"#43C1C4\", fontFamily: \"Porkys\" }}>\r\n          Nossa Playlist\r\n        </Card.Title>\r\n        <Card.Divider />\r\n\r\n        {listamusicas.map((item, index) => (\r\n          <View style={{ flexDirection: \"row\" }} key={index}>\r\n            <View style={{ flex: 0.8 }}>\r\n              <View style={{ flexDirection: \"row\" }}>\r\n                <View style={{ flex: 0.2 }}>\r\n                  <Icon name=\"music\" type=\"font-awesome\" />\r\n                </View>\r\n                <View style={{ flex: 0.8 }}>\r\n                  <Text>{item.nome}</Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View style={{ flex: 0.2 }}>\r\n              {item.current == 1 ? (\r\n                <Button\r\n                  onPress={() => stopSound(item.url_musica, index)}\r\n                  title=\"\"\r\n                  icon={{ name: \"stop\", type: \"font-awesome\" }}\r\n                />\r\n              ) : (\r\n                <Button\r\n                  onPress={() => playSound(item.url_musica, index)}\r\n                  title=\"\"\r\n                  icon={{ name: \"play\", type: \"font-awesome\" }}\r\n                />\r\n              )}\r\n            </View>\r\n          </View>\r\n        ))}\r\n        <Button\r\n          onPress={() => navigation.navigate(\"PageInicioApp\")}\r\n          title=\"Voltar\"\r\n          icon={{ name: \"undo\", type: \"font-awesome\" }}\r\n        />\r\n\r\n        {testelist.map((item, index) => (\r\n          <Text key={index}>{item.nome}</Text>\r\n        ))}\r\n      </Card>\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}