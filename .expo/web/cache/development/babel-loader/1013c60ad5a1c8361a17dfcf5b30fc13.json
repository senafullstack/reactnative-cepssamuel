{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ceps\\\\Appcolegio\\\\Pages\\\\PageAgendaDiaria.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-native-elements\";\nimport RenderHTML from \"react-native-render-html\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport MenuHeader from \"../layouts/MenuHeader\";\nimport { obterToken } from \"../Configs/Globais\";\nimport Globais from \"../Configs/Globais\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      titulo = _ref.titulo;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dados = _useState2[0],\n      setDados = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dadoslogin = _useState4[0],\n      setDadoslogin = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      carregando = _useState6[0],\n      setCarregando = _useState6[1];\n\n  function Download(url) {\n    return _regeneratorRuntime.async(function Download$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(WebBrowser.openBrowserAsync(url));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function carregaragenda(token, id_turma) {\n    var url;\n    return _regeneratorRuntime.async(function carregaragenda$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            url = Globais.url + \"v3/agenda/\" + id_turma;\n            setCarregando(true);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: \"get\",\n              headers: new Headers({\n                Authorization: \"Bearer \" + token\n              })\n            }).then(function (resp) {\n              return resp.json();\n            }).then(function (json) {\n              var resultado = json.data.data;\n              setDados(resultado);\n            }).catch(function (e) {\n              alert(\"erro\" + e);\n            }).finally(function () {\n              setCarregando(false);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    obterToken(\"dadoslogin\").then(function (resposta) {\n      carregaragenda(resposta.access_token, resposta.id_turma);\n    });\n  }, []);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(MenuHeader, {\n    navigation: navigation,\n    titulo: \"Agenda\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Card, {\n    containerStyle: {\n      width: \"90%\",\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, React.createElement(Card.Title, {\n    style: {\n      color: \"#43C1C4\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Agenda \"), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), carregando ? React.createElement(View, {\n    style: {\n      width: Globais.percentuallargura(85),\n      height: Globais.percentualaltura(85),\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    animating: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })) : dados.map(function (item, index) {\n    return React.createElement(View, {\n      style: {\n        width: \"100%\",\n        flexDirection: \"row\"\n      },\n      key: item.id_agenda_diaria,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        margin: 2,\n        justifyContent: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: styles.titulo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, item.dataformatada), React.createElement(Text, {\n      style: styles.titulo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, item.disciplina), React.createElement(RenderHTML, {\n      contentWidth: Globais.percentuallargura(85),\n      source: {\n        html: item.texto != \"\" ? \"<span>\" + item.texto + \"</span>\" : \"<b>aguarde</b>\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })), React.createElement(Card.Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }));\n  })))));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: StatusBar.currentHeight\n  },\n  scrollView: {\n    marginHorizontal: 0\n  },\n  text: {\n    fontSize: 42\n  },\n  titulo: {\n    color: \"#43C1C4\",\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/ceps/Appcolegio/Pages/PageAgendaDiaria.tsx"],"names":["React","useEffect","useState","Card","RenderHTML","WebBrowser","MenuHeader","obterToken","Globais","navigation","titulo","dados","setDados","dadoslogin","setDadoslogin","carregando","setCarregando","Download","url","openBrowserAsync","carregaragenda","token","id_turma","fetch","method","headers","Headers","Authorization","then","resp","json","resultado","data","catch","e","alert","finally","resposta","access_token","styles","scrollView","flexDirection","justifyContent","alignItems","width","borderRadius","color","percentuallargura","height","percentualaltura","map","item","index","id_agenda_diaria","margin","dataformatada","disciplina","html","texto","StyleSheet","create","container","flex","paddingTop","StatusBar","currentHeight","marginHorizontal","text","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Input, Card, Button } from \"react-native-elements\";\r\nimport RenderHTML from \"react-native-render-html\";\r\nimport {\r\n  View,\r\n  Modal,\r\n  StatusBar,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  Image,\r\n  Text,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Pressable,\r\n  Alert,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport * as WebBrowser from \"expo-web-browser\";\r\nimport MenuHeader from \"../layouts/MenuHeader\";\r\n\r\nimport { obterToken } from \"../Configs/Globais\";\r\nimport Globais from \"../Configs/Globais\";\r\nimport Icone from \"../Configs/Icone\";\r\n\r\nexport default ({ navigation, titulo }) => {\r\n  const [dados, setDados] = useState([]);\r\n  const [dadoslogin, setDadoslogin] = useState(\"\");\r\n  const [carregando, setCarregando] = useState(false);\r\n  async function Download(url) {\r\n    await WebBrowser.openBrowserAsync(url);\r\n  }\r\n  async function carregaragenda(token, id_turma) {\r\n    var url = Globais.url + \"v3/agenda/\" + id_turma;\r\n    setCarregando(true);\r\n    //console.log(url);\r\n    await fetch(url, {\r\n      method: \"get\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n      }),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        const resultado = json.data.data;\r\n        setDados(resultado);\r\n      })\r\n      .catch((e) => {\r\n        alert(\"erro\" + e);\r\n      })\r\n      .finally(() => {\r\n        setCarregando(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    obterToken(\"dadoslogin\").then((resposta) => {\r\n      carregaragenda(resposta.access_token, resposta.id_turma);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <MenuHeader navigation={navigation} titulo=\"Agenda\" />\r\n\r\n      <ScrollView style={styles.scrollView}>\r\n        <View\r\n          style={{\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Card containerStyle={{ width: \"90%\", borderRadius: 10 }}>\r\n            <Card.Title style={{ color: \"#43C1C4\" }}>Agenda </Card.Title>\r\n            <Card.Divider />\r\n\r\n            {carregando ? (\r\n              <View\r\n                style={{\r\n                  width: Globais.percentuallargura(85),\r\n                  height: Globais.percentualaltura(85),\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" animating={true} />\r\n              </View>\r\n            ) : (\r\n              dados.map((item, index) => (\r\n                <View\r\n                  style={{ width: \"100%\", flexDirection: \"row\" }}\r\n                  key={item.id_agenda_diaria}\r\n                >\r\n                  <View style={{ margin: 2, justifyContent: \"center\" }}>\r\n                    <Text style={styles.titulo}>{item.dataformatada}</Text>\r\n                    <Text style={styles.titulo}>{item.disciplina}</Text>\r\n                    <RenderHTML\r\n                      contentWidth={Globais.percentuallargura(85)}\r\n                      source={{\r\n                        html:\r\n                          item.texto != \"\"\r\n                            ? \"<span>\" + item.texto + \"</span>\"\r\n                            : \"<b>aguarde</b>\",\r\n                      }}\r\n                    />\r\n                  </View>\r\n                  <Card.Divider />\r\n                </View>\r\n              ))\r\n            )}\r\n          </Card>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n  },\r\n  scrollView: {\r\n    marginHorizontal: 0,\r\n  },\r\n  text: {\r\n    fontSize: 42,\r\n  },\r\n  titulo: {\r\n    color: \"#43C1C4\",\r\n    fontSize: 15,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}