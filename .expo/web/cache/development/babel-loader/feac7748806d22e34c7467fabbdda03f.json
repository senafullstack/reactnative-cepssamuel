{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pagesexternas\\\\Musica.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { Audio } from \"expo\";\n\nvar AudioPlayer = function (_Component) {\n  _inherits(AudioPlayer, _Component);\n\n  var _super = _createSuper(AudioPlayer);\n\n  function AudioPlayer(props) {\n    var _this;\n\n    _classCallCheck(this, AudioPlayer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isPlaying: false\n    };\n    _this.loadAudio = _this.loadAudio.bind(_assertThisInitialized(_this));\n    _this.toggleAudioPlayback = _this.toggleAudioPlayback.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AudioPlayer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadAudio();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.soundObject.stopAsync();\n    }\n  }, {\n    key: \"loadAudio\",\n    value: function loadAudio() {\n      return _regeneratorRuntime.async(function loadAudio$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.soundObject = new Audio.Sound();\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(this.soundObject.loadAsync({\n                uri: this.props.source\n              }));\n\n            case 4:\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(\"ERROR Loading Audio\", _context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[1, 6]], Promise);\n    }\n  }, {\n    key: \"toggleAudioPlayback\",\n    value: function toggleAudioPlayback() {\n      var _this2 = this;\n\n      this.setState({\n        isPlaying: !this.state.isPlaying\n      }, function () {\n        return _this2.state.isPlaying ? _this2.soundObject.playAsync() : _this2.soundObject.stopAsync();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableNativeFeedback, {\n        onPress: this.toggleAudioPlayback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return AudioPlayer;\n}(Component);\n\nexport default AudioPlayer;","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pagesexternas/Musica.tsx"],"names":["React","Component","Audio","AudioPlayer","props","state","isPlaying","loadAudio","bind","toggleAudioPlayback","soundObject","stopAsync","Sound","loadAsync","uri","source","console","log","setState","playAsync","style","children"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,KAAT,QAAsB,MAAtB;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AAEA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB;AACA,UAAKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBD,IAAzB,+BAA3B;AALiB;AAMlB;;;;WAED,6BAAoB;AAClB,WAAKD,SAAL;AACD;;;WAED,gCAAuB;AACrB,WAAKG,WAAL,CAAiBC,SAAjB;AACD;;;WAED;AAAA;AAAA;AAAA;AAAA;AACE,mBAAKD,WAAL,GAAmB,IAAIR,KAAK,CAACU,KAAV,EAAnB;AADF;AAAA;AAAA,+CAGU,KAAKF,WAAL,CAAiBG,SAAjB,CAA2B;AAC/BC,gBAAAA,GAAG,EAAE,KAAKV,KAAL,CAAWW;AADe,eAA3B,CAHV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOIC,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAWA,+BAAsB;AAAA;;AACpB,WAAKC,QAAL,CACE;AACEZ,QAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADzB,OADF,EAIE;AAAA,eACE,MAAI,CAACD,KAAL,CAAWC,SAAX,GACI,MAAI,CAACI,WAAL,CAAiBS,SAAjB,EADJ,GAEI,MAAI,CAACT,WAAL,CAAiBC,SAAjB,EAHN;AAAA,OAJF;AASD;;;WAED,kBAAS;AACP,aACE,oBAAC,uBAAD;AAAyB,QAAA,OAAO,EAAE,KAAKF,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWgB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,KAAKhB,KAAL,CAAWiB,QAA3C,CADF,CADF;AAKD;;;;EA9CuBpB,S;;AAiD1B,eAAeE,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, TouchableNativeFeedback } from \"react-native\";\r\nimport { Audio } from \"expo\";\r\n\r\nclass AudioPlayer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isPlaying: false };\r\n\r\n    this.loadAudio = this.loadAudio.bind(this);\r\n    this.toggleAudioPlayback = this.toggleAudioPlayback.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadAudio();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.soundObject.stopAsync();\r\n  }\r\n\r\n  async loadAudio() {\r\n    this.soundObject = new Audio.Sound();\r\n    try {\r\n      await this.soundObject.loadAsync({\r\n        uri: this.props.source /* url for your audio file */,\r\n      });\r\n    } catch (e) {\r\n      console.log(\"ERROR Loading Audio\", e);\r\n    }\r\n  }\r\n\r\n  toggleAudioPlayback() {\r\n    this.setState(\r\n      {\r\n        isPlaying: !this.state.isPlaying,\r\n      },\r\n      () =>\r\n        this.state.isPlaying\r\n          ? this.soundObject.playAsync()\r\n          : this.soundObject.stopAsync()\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TouchableNativeFeedback onPress={this.toggleAudioPlayback}>\r\n        <View style={this.props.style}>{this.props.children}</View>\r\n      </TouchableNativeFeedback>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AudioPlayer;\r\n"]},"metadata":{},"sourceType":"module"}