{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\Pages\\\\Calendario.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Agenda, LocaleConfig } from \"react-native-calendars\";\nLocaleConfig.locales.fr = {\n  monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n  monthNamesShort: [\"Jan.\", \"Fev.\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul.\", \"Ago\", \"Set.\", \"Out.\", \"Nov.\", \"Dez.\"],\n  dayNames: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n  dayNamesShort: [\"Dom.\", \"Seg.\", \"Ter.\", \"Qua.\", \"Qui.\", \"Sex.\", \"Sáb.\"]\n};\n\nfunction carregaragenda(token) {\n  var url;\n  return _regeneratorRuntime.async(function carregaragenda$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = Globais.url + \"v1/eventos\";\n          setCarregando(true);\n          console.log(url);\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"get\",\n            headers: new Headers({\n              Authorization: \"Bearer \" + token\n            })\n          }).then(function (resp) {\n            return resp.json();\n          }).then(function (json) {\n            var resultado = json.data.data;\n            setDados(resultado);\n          }).catch(function (e) {\n            alert(\"erro\" + e);\n          }).finally(function () {\n            setCarregando(false);\n          }));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nLocaleConfig.defaultLocale = \"fr\";\n\nvar AgendaScreen = function (_Component) {\n  _inherits(AgendaScreen, _Component);\n\n  var _super = _createSuper(AgendaScreen);\n\n  function AgendaScreen() {\n    var _this;\n\n    _classCallCheck(this, AgendaScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      items: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AgendaScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Agenda, {\n        testID: \"agenda\",\n        items: this.state.items,\n        loadItemsForMonth: this.loadItems.bind(this),\n        selected: \"2021-12-23\",\n        renderItem: this.renderItem.bind(this),\n        renderEmptyDate: this.renderEmptyDate.bind(this),\n        rowHasChanged: this.rowHasChanged.bind(this),\n        showClosingKnob: true,\n        rowHasChanged: function rowHasChanged(row) {\n          console.log(row);\n        },\n        renderEmptyDate: function renderEmptyDate(row) {\n          console.log(row);\n        },\n        onCalendarToggled: function onCalendarToggled(calendarOpened) {\n          console.log(calendarOpened);\n        },\n        onDayPress: function onDayPress(day) {\n          console.log(day);\n        },\n        onDayChange: function onDayChange(day) {\n          console.log(\"day changed\");\n        },\n        theme: {\n          calendarBackground: \"#5BA3D9\",\n          agendaDayTextColor: \"#F38DAD\",\n          agendaDayNumColor: \"#43C1C4\",\n          agendaTodayColor: \"#5BA3D9\",\n          agendaKnobColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"loadItems\",\n    value: function loadItems() {\n      this.setState({\n        items: {\n          \"2021-12-28\": [{\n            id_noticia: 2,\n            titulo: \"Pílula do câncer: STF declara inconstitucional lei que autorizava medicação\",\n            texto: \"O Supremo Tribunal Federal (STF) declarou, por maioria, inconstitucional a Lei que autorizava o uso da chamada “pílula do câncer”. O julgamento se deu por meio de sessão virtual, encerrada na noite da última segunda-feira (23/10)\\r\\n                    \\r\\n                \",\n            foto: \"Marco-Aurelio-1-1.jpg-2021-12-12-12-01.jpg\"\n          }],\n          \"2021-12-30\": [{\n            id_noticia: 3,\n            titulo: \"​É tempo de alegria\",\n            texto: \"asdfadfadf\",\n            foto: \"postagem_11_horas.jpg-2021-12-18-13-30.jpg\"\n          }],\n          \"2021-12-31\": [{\n            id_noticia: 4,\n            titulo: 'Alunos do Ensino Médio participam de um \"Papo Sério\"',\n            texto: \"asdfasdfadf\",\n            foto: \"postagem_sabado.jpg-2021-12-18-13-58.jpg\"\n          }]\n        }\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        testID: \"item\",\n        style: [styles.item, {\n          height: item.height\n        }],\n        onPress: function onPress() {\n          console.log(item.datanoticia);\n          Alert.alert(item.datanoticia);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, item.titulo));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        style: styles.emptyDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }, {\n    key: \"timeToString\",\n    value: function timeToString(time) {\n      var date = new Date(time);\n      return date.toISOString().split(\"T\")[0];\n    }\n  }]);\n\n  return AgendaScreen;\n}(Component);\n\nexport { AgendaScreen as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"white\",\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pages/Calendario.tsx"],"names":["React","Component","Agenda","LocaleConfig","locales","fr","monthNames","monthNamesShort","dayNames","dayNamesShort","carregaragenda","token","url","Globais","setCarregando","console","log","fetch","method","headers","Headers","Authorization","then","resp","json","resultado","data","setDados","catch","e","alert","finally","defaultLocale","AgendaScreen","state","items","loadItems","bind","renderItem","renderEmptyDate","rowHasChanged","row","calendarOpened","day","calendarBackground","agendaDayTextColor","agendaDayNumColor","agendaTodayColor","agendaKnobColor","setState","id_noticia","titulo","texto","foto","item","styles","height","datanoticia","Alert","emptyDate","r1","r2","name","time","date","Date","toISOString","split","StyleSheet","create","backgroundColor","flex","borderRadius","padding","marginRight","marginTop","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport { Alert, StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\n\r\nimport { Agenda, LocaleConfig } from \"react-native-calendars\";\r\nLocaleConfig.locales.fr = {\r\n  monthNames: [\r\n    \"Janeiro\",\r\n    \"Fevereiro\",\r\n    \"Março\",\r\n    \"Abril\",\r\n    \"Maio\",\r\n    \"Junho\",\r\n    \"Julho\",\r\n    \"Agosto\",\r\n    \"Setembro\",\r\n    \"Outubro\",\r\n    \"Novembro\",\r\n    \"Dezembro\",\r\n  ],\r\n  monthNamesShort: [\r\n    \"Jan.\",\r\n    \"Fev.\",\r\n    \"Mar\",\r\n    \"Abr\",\r\n    \"Mai\",\r\n    \"Jun\",\r\n    \"Jul.\",\r\n    \"Ago\",\r\n    \"Set.\",\r\n    \"Out.\",\r\n    \"Nov.\",\r\n    \"Dez.\",\r\n  ],\r\n  dayNames: [\r\n    \"Domingo\",\r\n    \"Segunda\",\r\n    \"Terça\",\r\n    \"Quarta\",\r\n    \"Quinta\",\r\n    \"Sexta\",\r\n    \"Sábado\",\r\n  ],\r\n  dayNamesShort: [\"Dom.\", \"Seg.\", \"Ter.\", \"Qua.\", \"Qui.\", \"Sex.\", \"Sáb.\"],\r\n};\r\nasync function carregaragenda(token) {\r\n  var url = Globais.url + \"v1/eventos\";\r\n  setCarregando(true);\r\n  console.log(url);\r\n  await fetch(url, {\r\n    method: \"get\",\r\n    headers: new Headers({\r\n      Authorization: \"Bearer \" + token,\r\n    }),\r\n  })\r\n    .then((resp) => resp.json())\r\n    .then((json) => {\r\n      const resultado = json.data.data;\r\n      setDados(resultado);\r\n    })\r\n    .catch((e) => {\r\n      alert(\"erro\" + e);\r\n    })\r\n    .finally(() => {\r\n      setCarregando(false);\r\n    });\r\n}\r\nLocaleConfig.defaultLocale = \"fr\";\r\nexport default class AgendaScreen extends Component {\r\n  state = {\r\n    items: \"\",\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <Agenda\r\n        testID={\"agenda\"}\r\n        items={this.state.items}\r\n        loadItemsForMonth={this.loadItems.bind(this)}\r\n        selected={\"2021-12-23\"}\r\n        renderItem={this.renderItem.bind(this)}\r\n        renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n        rowHasChanged={this.rowHasChanged.bind(this)}\r\n        showClosingKnob={true}\r\n        // TESTES\r\n        rowHasChanged={(row) => {\r\n          console.log(row);\r\n        }}\r\n        renderEmptyDate={(row) => {\r\n          console.log(row);\r\n        }}\r\n        onCalendarToggled={(calendarOpened) => {\r\n          console.log(calendarOpened);\r\n        }}\r\n        onDayPress={(day) => {\r\n          console.log(day);\r\n        }}\r\n        onDayChange={(day) => {\r\n          console.log(\"day changed\");\r\n        }}\r\n        theme={{\r\n          calendarBackground: \"#5BA3D9\",\r\n          agendaDayTextColor: \"#F38DAD\",\r\n          agendaDayNumColor: \"#43C1C4\",\r\n          agendaTodayColor: \"#5BA3D9\",\r\n          agendaKnobColor: \"white\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  loadItems() {\r\n    this.setState({\r\n      items: {\r\n        \"2021-12-28\": [\r\n          {\r\n            id_noticia: 2,\r\n            titulo:\r\n              \"Pílula do câncer: STF declara inconstitucional lei que autorizava medicação\",\r\n            texto:\r\n              \"O Supremo Tribunal Federal (STF) declarou, por maioria, inconstitucional a Lei que autorizava o uso da chamada “pílula do câncer”. O julgamento se deu por meio de sessão virtual, encerrada na noite da última segunda-feira (23/10)\\r\\n                    \\r\\n                \",\r\n            foto: \"Marco-Aurelio-1-1.jpg-2021-12-12-12-01.jpg\",\r\n          },\r\n        ],\r\n        \"2021-12-30\": [\r\n          {\r\n            id_noticia: 3,\r\n            titulo: \"​É tempo de alegria\",\r\n            texto: \"asdfadfadf\",\r\n            foto: \"postagem_11_horas.jpg-2021-12-18-13-30.jpg\",\r\n          },\r\n        ],\r\n        \"2021-12-31\": [\r\n          {\r\n            id_noticia: 4,\r\n            titulo: 'Alunos do Ensino Médio participam de um \"Papo Sério\"',\r\n            texto: \"asdfasdfadf\",\r\n            foto: \"postagem_sabado.jpg-2021-12-18-13-58.jpg\",\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  }\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <TouchableOpacity\r\n        testID={\"item\"}\r\n        style={[styles.item, { height: item.height }]}\r\n        onPress={() => {\r\n          console.log(item.datanoticia);\r\n          Alert.alert(item.datanoticia);\r\n        }}\r\n      >\r\n        <Text>{item.titulo}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  rowHasChanged(r1, r2) {\r\n    return r1.name !== r2.name;\r\n  }\r\n\r\n  timeToString(time) {\r\n    const date = new Date(time);\r\n    return date.toISOString().split(\"T\")[0];\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}