{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nossocantinho\\\\Appcolegio\\\\layouts\\\\MenuDrawer.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar } from \"react-native-elements\";\nimport Globais from \"../Configs/Globais\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n\n  var getData = function getData() {\n    var jsonValue;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"dadoslogin\"));\n\n          case 3:\n            jsonValue = _context.sent;\n            return _context.abrupt(\"return\", jsonValue != null ? JSON.parse(jsonValue) : null);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  console.log(getData);\n\n  function limpaacesso() {\n    Globais.limparvariaveis();\n    navigation.navigate(\"PageInicioApp\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: \"column\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"100%\",\n      alignContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Avatar, {\n    size: \"xlarge\",\n    title: \"LW\",\n    source: {\n      uri: Globais.urladmin + getData.foto\n    },\n    onPress: function onPress() {\n      return console.log(\"asdf!\");\n    },\n    activeOpacity: 0.7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, Globais.nomeusuario), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, Globais.emailusuario), Globais.logado ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return limpaacesso();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Sair\")) : React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"PageInicioApp\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Login\"))));\n});","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/layouts/MenuDrawer.tsx"],"names":["React","Avatar","Globais","AsyncStorage","navigation","getData","getItem","jsonValue","JSON","parse","console","log","limpaacesso","limparvariaveis","navigate","flexDirection","width","alignContent","alignItems","uri","urladmin","foto","nomeusuario","emailusuario","logado"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;;;;AAEA,SAASC,MAAT,QAA+C,uBAA/C;AACA,OAAOC,OAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,gBAAe,gBAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACjC,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEYF,YAAY,CAACG,OAAb,CAAqB,YAArB,CAFZ;;AAAA;AAENC,YAAAA,SAFM;AAAA,6CAGLA,SAAS,IAAI,IAAb,GAAoBC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAApB,GAA4C,IAHvC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAQAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;;AAEA,WAASO,WAAT,GAAuB;AACrBV,IAAAA,OAAO,CAACW,eAAR;AACAT,IAAAA,UAAU,CAACU,QAAX,CAAoB,eAApB;AACD;;AACD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,YAAY,EAAE,QAA/B;AAAyCC,MAAAA,UAAU,EAAE;AAArD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,IAFR;AAGE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEjB,OAAO,CAACkB,QAAR,GAAmBf,OAAO,CAACgB;AAD1B,KAHV;AAME,IAAA,OAAO,EAAE;AAAA,aAAMX,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;AAAA,KANX;AAOE,IAAA,aAAa,EAAE,GAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOT,OAAO,CAACoB,WAAf,CAZF,EAaE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOpB,OAAO,CAACqB,YAAf,CAbF,EAcGrB,OAAO,CAACsB,MAAR,GACC,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMZ,WAAW,EAAjB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADD,GAKC,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMR,UAAU,CAACU,QAAX,CAAoB,eAApB,CAAN;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CAnBJ,CADF,CADF;AA8BD,CA7CD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport { Avatar, Badge, Icon, withBadge } from \"react-native-elements\";\r\nimport Globais from \"../Configs/Globais\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nexport default ({ navigation }) => {\r\n  const getData = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem(\"dadoslogin\");\r\n      return jsonValue != null ? JSON.parse(jsonValue) : null;\r\n    } catch (e) {\r\n      // error reading value\r\n    }\r\n  };\r\n  console.log(getData);\r\n\r\n  function limpaacesso() {\r\n    Globais.limparvariaveis();\r\n    navigation.navigate(\"PageInicioApp\");\r\n  }\r\n  return (\r\n    <View style={{ flexDirection: \"column\" }}>\r\n      <View\r\n        style={{ width: \"100%\", alignContent: \"center\", alignItems: \"center\" }}\r\n      >\r\n        <Avatar\r\n          size=\"xlarge\"\r\n          title=\"LW\"\r\n          source={{\r\n            uri: Globais.urladmin + getData.foto,\r\n          }}\r\n          onPress={() => console.log(\"asdf!\")}\r\n          activeOpacity={0.7}\r\n        />\r\n        <Text>{Globais.nomeusuario}</Text>\r\n        <Text>{Globais.emailusuario}</Text>\r\n        {Globais.logado ? (\r\n          <TouchableOpacity onPress={() => limpaacesso()}>\r\n            <Text>Sair</Text>\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"PageInicioApp\")}\r\n          >\r\n            <Text>Login</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}