{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\reactnative\\\\AppRh\\\\Pages\\\\PageLogin.tsx\";\n\nimport React, { useState } from \"react\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input, Card, Button } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Globais from \"../Configs/Globais\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      titulo = _ref.titulo;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      teste = _useState2[0],\n      setteste = _useState2[1];\n\n  var requestPost = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      senha: senha\n    })\n  };\n\n  function logincandidato() {\n    fetch(Globais.url + \"candidato/login\", requestPost).then(function (resp) {\n      return resp.json();\n    }).then(function (json) {\n      console.log(json.login);\n      var dadosretorno = json.login;\n      Globais.nomeusuario = dadosretorno.nome;\n      Globais.emailusuario = dadosretorno.email;\n      Globais.token = dadosretorno.token;\n      Globais.fotousuario = dadosretorno.foto;\n      localStorage.setItem(\"nomeusuario\", dadosretorno.nome);\n      localStorage.setItem(\"emailusuario\", dadosretorno.email);\n      localStorage.setItem(\"fotousuario\", dadosretorno.foto);\n      localStorage.setItem(\"logado\", \"true\");\n      localStorage.setItem(\"token\", dadosretorno.token);\n      setDados(json.login);\n      navigation.navigate(\"TabHome\");\n    }).catch(function (e) {\n      alert(\"erro\" + e);\n    }).finally(function () {\n      alert(\"fim\");\n    });\n  }\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Card.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, Globais.nomeusuario, \" \", email), React.createElement(Card.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    onChangeText: function onChangeText(texto) {\n      setemail(texto);\n    },\n    value: email,\n    placeholder: \"Email\",\n    leftIcon: {\n      type: \"font-awesome\",\n      name: \"user\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    secureTextEntry: true,\n    placeholder: \"Senha\",\n    value: senha,\n    onChangeText: function onChangeText(texto) {\n      setsenha(texto);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return logincandidato();\n    },\n    icon: React.createElement(Icon, {\n      name: \"arrow-right\",\n      size: 15,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }),\n    title: \"Entrar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["C:/xampp/htdocs/reactnative/AppRh/Pages/PageLogin.tsx"],"names":["React","useState","Icon","Input","Card","Button","Globais","navigation","titulo","teste","setteste","requestPost","method","headers","body","JSON","stringify","email","senha","logincandidato","fetch","url","then","resp","json","console","log","login","dadosretorno","nomeusuario","nome","emailusuario","token","fotousuario","foto","localStorage","setItem","setDados","navigate","catch","e","alert","finally","texto","setemail","type","name","setsenha"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { Input, Card, Button } from \"react-native-elements\";\r\nimport { View, Text } from \"react-native\";\r\nimport Globais from \"../Configs/Globais\";\r\n\r\nexport default ({ navigation, titulo }) => {\r\n  const [teste, setteste] = useState(\"\");\r\n\r\n  var requestPost = {\r\n    method: \"POST\",\r\n\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      email: email,\r\n      senha: senha,\r\n    }),\r\n  };\r\n\r\n  function logincandidato() {\r\n    fetch(Globais.url + \"candidato/login\", requestPost)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        console.log(json.login);\r\n        let dadosretorno = json.login;\r\n        Globais.nomeusuario = dadosretorno.nome;\r\n        Globais.emailusuario = dadosretorno.email;\r\n        Globais.token = dadosretorno.token;\r\n        Globais.fotousuario = dadosretorno.foto;\r\n        localStorage.setItem(\"nomeusuario\", dadosretorno.nome);\r\n        localStorage.setItem(\"emailusuario\", dadosretorno.email);\r\n        localStorage.setItem(\"fotousuario\", dadosretorno.foto);\r\n        localStorage.setItem(\"logado\", \"true\");\r\n        localStorage.setItem(\"token\", dadosretorno.token);\r\n\r\n        setDados(json.login);\r\n        navigation.navigate(\"TabHome\");\r\n      })\r\n      .catch((e) => {\r\n        alert(\"erro\" + e);\r\n      })\r\n      .finally(() => {\r\n        alert(\"fim\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Card>\r\n        <Card.Title>\r\n          {Globais.nomeusuario} {email}\r\n        </Card.Title>\r\n        <Card.Divider />\r\n        <Input\r\n          onChangeText={(texto) => {\r\n            setemail(texto);\r\n          }}\r\n          value={email}\r\n          placeholder=\"Email\"\r\n          leftIcon={{ type: \"font-awesome\", name: \"user\" }}\r\n        />\r\n\r\n        <Input\r\n          secureTextEntry={true}\r\n          placeholder=\"Senha\"\r\n          value={senha}\r\n          onChangeText={(texto) => {\r\n            setsenha(texto);\r\n          }}\r\n          leftIcon={<Icon name=\"lock\" size={24} color=\"black\" />}\r\n        />\r\n        <Button\r\n          onPress={() => logincandidato()}\r\n          icon={<Icon name=\"arrow-right\" size={15} color=\"white\" />}\r\n          title=\"Entrar\"\r\n        />\r\n      </Card>\r\n    </View>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}