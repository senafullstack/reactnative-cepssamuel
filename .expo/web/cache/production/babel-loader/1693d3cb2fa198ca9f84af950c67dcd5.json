{"ast":null,"code":"\"use strict\";function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.hoist=hoist;var _TBlockCtor=_interopRequireDefault(require(\"../tree/TBlockCtor\"));var _TPhrasingCtor=require(\"../tree/TPhrasingCtor\");var _TTextCtor=require(\"../tree/TTextCtor\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function groupText(tnode){var newChildren=[];var wrapperInit={elementModel:null,context:tnode.init.context,parentStyles:tnode.styles,parent:null};var wrapper=new _TPhrasingCtor.TPhrasingCtor(wrapperInit);var wrapperChildren=[];for(var _iterator=_createForOfIteratorHelperLoose(tnode.children),_step;!(_step=_iterator()).done;){var child=_step.value;if(child instanceof _TTextCtor.TTextCtor||child instanceof _TPhrasingCtor.TPhrasingCtor){wrapperChildren.push(child);}else{if(wrapperChildren.length){newChildren.push(wrapper);wrapper.bindChildren(wrapperChildren);wrapper=new _TPhrasingCtor.TPhrasingCtor(wrapperInit);wrapperChildren=[];}newChildren.push(child);}}if(wrapperChildren.length){wrapper.bindChildren(wrapperChildren);newChildren.push(wrapper);}tnode.bindChildren(newChildren);return tnode;}function hoistNode(tnode){if(tnode instanceof _TTextCtor.TTextCtor){return tnode;}tnode.bindChildren(tnode.children.map(hoistNode));if(tnode instanceof _TPhrasingCtor.TPhrasingCtor){for(var _iterator2=_createForOfIteratorHelperLoose(tnode.children),_step2;!(_step2=_iterator2()).done;){var cnode=_step2.value;if(cnode instanceof _TBlockCtor.default){var newNode=new _TBlockCtor.default(tnode.cloneInitParams());newNode.bindChildren(tnode.children);var output=groupText(newNode);return output;}}}else if(tnode instanceof _TBlockCtor.default){if(tnode.children.length>0){var _output=groupText(tnode);return _output;}}return tnode;}function hoist(tree){return hoistNode(tree);}","map":{"version":3,"sources":["hoist.ts"],"names":["newChildren","wrapperInit","elementModel","context","tnode","parentStyles","parent","wrapper","TPhrasingCtor","wrapperChildren","child","TTextCtor","cnode","TBlockCtor","newNode","output","groupText","hoistNode"],"mappings":"qoCAAA,GAAA,CAAA,WAAA,CAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA,CAEA,GAAA,CAAA,cAAA,CAAA,OAAA,yBAAA,CACA,GAAA,CAAA,UAAA,CAAA,OAAA,qBAAA,C,mFAMA,QAAA,CAAA,SAAA,CAAA,KAAA,CAAiD,CAC/C,GAAIA,CAAAA,WAAwB,CAA5B,EAAA,CACA,GAAMC,CAAAA,WAAW,CAAG,CAClBC,YAAY,CADM,IAAA,CAElBC,OAAO,CAAEC,KAAK,CAALA,IAAAA,CAFS,OAAA,CAMlBC,YAAY,CAAED,KAAK,CAND,MAAA,CAOlBE,MAAM,CAAE,IAPU,CAApB,CASA,GAAIC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,cAAAA,CAAJ,aAAA,CAAd,WAAc,CAAd,CACA,GAAIC,CAAAA,eAA4B,CAAhC,EAAA,CACA,kDAAoBL,KAAK,CAAzB,QAAA,mCAAoC,IAApC,CAAA,KAAoC,aAClC,GAAIM,KAAK,WAAYC,CAAAA,UAAAA,CAAjBD,SAAAA,EAA8BA,KAAK,WAAYF,CAAAA,cAAAA,CAAnD,aAAA,CAAkE,CAChEC,eAAe,CAAfA,IAAAA,CAAAA,KAAAA,EADF,CAAA,IAEO,CACL,GAAIA,eAAe,CAAnB,MAAA,CAA4B,CAC1BT,WAAW,CAAXA,IAAAA,CAAAA,OAAAA,EACAO,OAAO,CAAPA,YAAAA,CAAAA,eAAAA,EACAA,OAAO,CAAG,GAAIC,CAAAA,cAAAA,CAAJ,aAAA,CAAVD,WAAU,CAAVA,CACAE,eAAe,CAAfA,EAAAA,CACD,CACDT,WAAW,CAAXA,IAAAA,CAAAA,KAAAA,EACD,CACF,CACD,GAAIS,eAAe,CAAnB,MAAA,CAA4B,CAC1BF,OAAO,CAAPA,YAAAA,CAAAA,eAAAA,EACAP,WAAW,CAAXA,IAAAA,CAAAA,OAAAA,EACD,CACDI,KAAK,CAALA,YAAAA,CAAAA,WAAAA,EACA,MAAA,CAAA,KAAA,CACD,CAED,QAAA,CAAA,SAAA,CAAA,KAAA,CAAgD,CAC9C,GAAIA,KAAK,WAAYO,CAAAA,UAAAA,CAArB,SAAA,CAAgC,CAC9B,MAAA,CAAA,KAAA,CACD,CACDP,KAAK,CAALA,YAAAA,CAAmBA,KAAK,CAALA,QAAAA,CAAAA,GAAAA,CAAnBA,SAAmBA,CAAnBA,EACA,GAAIA,KAAK,WAAYI,CAAAA,cAAAA,CAArB,aAAA,CAAoC,CAClC,mDAAoBJ,KAAK,CAAzB,QAAA,sCAAoC,IAApC,CAAA,KAAoC,cAClC,GAAIQ,KAAK,WAAYC,CAAAA,WAAAA,CAArB,OAAA,CAAiC,CAC/B,GAAMC,CAAAA,OAAO,CAAG,GAAID,CAAAA,WAAAA,CAAJ,OAAA,CAAeT,KAAK,CAApC,eAA+BA,EAAf,CAAhB,CACAU,OAAO,CAAPA,YAAAA,CAAqBV,KAAK,CAA1BU,QAAAA,EACA,GAAMC,CAAAA,MAAM,CAAGC,SAAS,CAAxB,OAAwB,CAAxB,CACA,MAAA,CAAA,MAAA,CACD,CACF,CARH,CAAA,IASO,IAAIZ,KAAK,WAAYS,CAAAA,WAAAA,CAArB,OAAA,CAAiC,CACtC,GAAIT,KAAK,CAALA,QAAAA,CAAAA,MAAAA,CAAJ,CAAA,CAA+B,CAC7B,GAAMW,CAAAA,OAAM,CAAGC,SAAS,CAAxB,KAAwB,CAAxB,CACA,MAAA,CAAA,OAAA,CACD,CACF,CACD,MAAA,CAAA,KAAA,CACD,CAEM,QAAA,CAAA,KAAA,CAAA,IAAA,CAA2C,CAChD,MAAOC,CAAAA,SAAS,CAAhB,IAAgB,CAAhB,CACD","sourcesContent":["import TBlockCtor, { TBlockImpl } from '../tree/TBlockCtor';\nimport { TNodeImpl } from '../tree/tree-types';\nimport { TPhrasingCtor } from '../tree/TPhrasingCtor';\nimport { TTextCtor } from '../tree/TTextCtor';\n\n/**\n * Wrap text nodes around TPhrasing nodes.\n * @param tnode The parent node of all elements to group.\n */\nfunction groupText(tnode: TBlockImpl): TNodeImpl {\n  let newChildren: TNodeImpl[] = [];\n  const wrapperInit = {\n    elementModel: null,\n    context: tnode.init.context,\n    // We need to merge styles here to make sure\n    // some React Native styles working only for the uppermost Text element\n    // such as \"textAlign\" are preserved.\n    parentStyles: tnode.styles,\n    parent: null\n  };\n  let wrapper = new TPhrasingCtor(wrapperInit);\n  let wrapperChildren: TNodeImpl[] = [];\n  for (const child of tnode.children) {\n    if (child instanceof TTextCtor || child instanceof TPhrasingCtor) {\n      wrapperChildren.push(child);\n    } else {\n      if (wrapperChildren.length) {\n        newChildren.push(wrapper);\n        wrapper.bindChildren(wrapperChildren);\n        wrapper = new TPhrasingCtor(wrapperInit);\n        wrapperChildren = [];\n      }\n      newChildren.push(child);\n    }\n  }\n  if (wrapperChildren.length) {\n    wrapper.bindChildren(wrapperChildren);\n    newChildren.push(wrapper);\n  }\n  tnode.bindChildren(newChildren);\n  return tnode;\n}\n\nfunction hoistNode(tnode: TNodeImpl): TNodeImpl {\n  if (tnode instanceof TTextCtor) {\n    return tnode;\n  }\n  tnode.bindChildren(tnode.children.map(hoistNode));\n  if (tnode instanceof TPhrasingCtor) {\n    for (const cnode of tnode.children) {\n      if (cnode instanceof TBlockCtor) {\n        const newNode = new TBlockCtor(tnode.cloneInitParams());\n        newNode.bindChildren(tnode.children);\n        const output = groupText(newNode);\n        return output;\n      }\n    }\n  } else if (tnode instanceof TBlockCtor) {\n    if (tnode.children.length > 0) {\n      const output = groupText(tnode);\n      return output;\n    }\n  }\n  return tnode;\n}\n\nexport function hoist(tree: TNodeImpl): TNodeImpl {\n  return hoistNode(tree);\n}\n"]},"metadata":{},"sourceType":"script"}