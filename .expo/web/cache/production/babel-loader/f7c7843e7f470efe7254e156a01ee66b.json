{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.defaultRenderError=defaultRenderError;exports.defaultRenderLoading=defaultRenderLoading;exports.default=void 0;var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var styles=_reactNative.StyleSheet.create({alignCenter:{flex:1,alignItems:'center',justifyContent:'center'},errorText:{fontStyle:'italic',fontSize:16}});function defaultRenderError(source){return _react.default.createElement(_reactNative.View,{testID:\"loader-error\",style:styles.alignCenter},_react.default.createElement(_reactNative.Text,{style:styles.errorText},\"Failed to load HTML from \",source.uri));}function defaultRenderLoading(){return _react.default.createElement(_reactNative.View,{testID:\"loader-loading\",style:styles.alignCenter},_react.default.createElement(_reactNative.ActivityIndicator,null));}var sourceLoaderContext=_react.default.createContext({remoteErrorView:defaultRenderError,remoteLoadingView:defaultRenderLoading});var _default=sourceLoaderContext;exports.default=_default;","map":{"version":3,"sources":["sourceLoaderContext.tsx"],"names":["styles","alignCenter","flex","alignItems","justifyContent","errorText","fontStyle","fontSize","source","sourceLoaderContext","remoteErrorView","remoteLoadingView","defaultRenderLoading"],"mappings":"6LAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,2IAIA,GAAMA,CAAAA,MAAM,CAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB,CAC/BC,WAAW,CAAE,CACXC,IAAI,CADO,CAAA,CAEXC,UAAU,CAFC,QAAA,CAGXC,cAAc,CAAE,QAHL,CADkB,CAM/BC,SAAS,CAAE,CACTC,SAAS,CADA,QAAA,CAETC,QAAQ,CAAE,EAFD,CANoB,CAAlB,CAAf,CAYO,QAAA,CAAA,kBAAA,CAAA,MAAA,CAAmD,CACxD,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,MAAM,CAAZ,cAAA,CAA4B,KAAK,CAAEP,MAAM,CAACC,WAA1C,CAAA,CACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,KAAK,CAAED,MAAM,CAACK,SAApB,CAAA,CAAA,2BAAA,CAC4BG,MAAM,CAHtC,GAEI,CADF,CADF,CAOD,CAEM,QAAA,CAAA,oBAAA,EAAgC,CACrC,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,MAAM,CAAZ,gBAAA,CAA8B,KAAK,CAAER,MAAM,CAACC,WAA5C,CAAA,CACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,iBAAA,CAFJ,IAEI,CADF,CADF,CAKD,CAED,GAAMQ,CAAAA,mBAAmB,CAAG,MAAA,CAAA,OAAA,CAAA,aAAA,CAE1B,CACAC,eAAe,CADf,kBAAA,CAEAC,iBAAiB,CAAEC,oBAFnB,CAF0B,CAA5B,C,aAOeH,mB","sourcesContent":["import React from 'react';\nimport { ActivityIndicator, StyleSheet, Text, View } from 'react-native';\nimport { RenderHTMLConfig, HTMLSourceUri } from '../shared-types';\n\nconst styles = StyleSheet.create({\n  alignCenter: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  errorText: {\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n});\n\nexport function defaultRenderError(source: HTMLSourceUri) {\n  return (\n    <View testID=\"loader-error\" style={styles.alignCenter}>\n      <Text style={styles.errorText}>\n        Failed to load HTML from {source.uri}\n      </Text>\n    </View>\n  );\n}\n\nexport function defaultRenderLoading() {\n  return (\n    <View testID=\"loader-loading\" style={styles.alignCenter}>\n      <ActivityIndicator />\n    </View>\n  );\n}\n\nconst sourceLoaderContext = React.createContext<\n  Pick<Required<RenderHTMLConfig>, 'remoteErrorView' | 'remoteLoadingView'>\n>({\n  remoteErrorView: defaultRenderError,\n  remoteLoadingView: defaultRenderLoading\n});\n\nexport default sourceLoaderContext;\n"]},"metadata":{},"sourceType":"script"}