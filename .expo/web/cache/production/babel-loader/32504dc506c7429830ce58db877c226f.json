{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=domNodeToHTMLString;var _stringifyEntities=_interopRequireDefault(require(\"stringify-entities\"));var _transientRenderEngine=require(\"@native-html/transient-render-engine\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function renderOpeningTag(tag,attributes){var strAttributes=[];Object.keys(attributes).forEach(function(key){strAttributes.push(key+\"=\\\"\"+(0,_stringifyEntities.default)(\"\"+attributes[key])+\"\\\"\");});return\"<\"+tag+(strAttributes.length?' ':'')+strAttributes.join(' ')+\">\";}function domNodeToHTMLString(root,reporter){var depth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var html='';if((0,_transientRenderEngine.isDomElement)(root)){var strChildren=root.children.reduce(function(prev,curr){var convertedNode=domNodeToHTMLString(curr,reporter,depth+1);return\"\"+prev+convertedNode;},'');html=\"\"+renderOpeningTag(root.tagName,root.attribs)+strChildren+\"</\"+root.tagName+\">\";}else if((0,_transientRenderEngine.isDomText)(root)){var text=(0,_stringifyEntities.default)(root.data);html=text;}typeof reporter==='function'&&reporter(root,depth,html);return html;}","map":{"version":3,"sources":["domNodeToHTMLString.ts"],"names":["strAttributes","Object","key","attributes","tag","depth","html","strChildren","convertedNode","domNodeToHTMLString","prev","renderOpeningTag","root","text","reporter"],"mappings":"0GAAA,GAAA,CAAA,kBAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA,CACA,GAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,sCAAA,CAAA,C,mFAMA,QAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,UAAA,CAA2E,CACzE,GAAMA,CAAAA,aAAuB,CAA7B,EAAA,CACAC,MAAM,CAANA,IAAAA,CAAAA,UAAAA,EAAAA,OAAAA,CAAiCC,SAAAA,GAAD,CAAS,CACvCF,aAAa,CAAbA,IAAAA,CAAsBE,GAAtBF,OAA8B,CAAA,EAAA,kBAAA,CAAA,OAAA,KAAoBG,UAAU,CAA5DH,GAA4D,CAA9B,CAA9BA,OADFC,CAAAA,EAGA,UAAWG,GAAX,EAAiBJ,aAAa,CAAbA,MAAAA,CAAAA,GAAAA,CAA6B,EAA9C,EAAmDA,aAAa,CAAbA,IAAAA,CAAnD,GAAmDA,CAAnD,KACD,CAUc,QAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,QAAA,CAIb,IADAK,CAAAA,KACA,2DAJa,CAIb,CACA,GAAIC,CAAAA,IAAI,CAAR,EAAA,CACA,GAAI,CAAA,EAAA,sBAAA,CAAA,YAAA,EAAJ,IAAI,CAAJ,CAAwB,CACtB,GAAMC,CAAAA,WAAW,CAAG,IAAI,CAAJ,QAAA,CAAA,MAAA,CAAqB,SAAA,IAAA,CAAA,IAAA,CAAgB,CACvD,GAAMC,CAAAA,aAAa,CAAGC,mBAAmB,CAAA,IAAA,CAAA,QAAA,CAAiBJ,KAAK,CAA/D,CAAyC,CAAzC,CACA,SAAUK,IAAV,CAAA,aAAA,CAFkB,CAAA,CAApB,EAAoB,CAApB,CAIAJ,IAAI,IAAMK,gBAAgB,CAACC,IAAI,CAAL,OAAA,CAAeA,IAAI,CAAnB,OAAA,CAAtB,CAAqDL,WAArD,MACFK,IAAI,CADNN,OAAI,IAAJA,CALF,CAAA,IAQO,IAAI,CAAA,EAAA,sBAAA,CAAA,SAAA,EAAJ,IAAI,CAAJ,CAAqB,CAC1B,GAAMO,CAAAA,IAAI,CAAG,CAAA,EAAA,kBAAA,CAAA,OAAA,EAAiBD,IAAI,CAAlC,IAAa,CAAb,CACAN,IAAI,CAAJA,IAAAA,CACD,CACD,MAAA,CAAA,QAAA,GAAA,UAAA,EAAkCQ,QAAQ,CAAA,IAAA,CAAA,KAAA,CAA1C,IAA0C,CAA1C,CACA,MAAA,CAAA,IAAA,CACD","sourcesContent":["import strigifyEntities from 'stringify-entities';\nimport {\n  Node,\n  isDomText,\n  isDomElement\n} from '@native-html/transient-render-engine';\n\nfunction renderOpeningTag(tag: string, attributes: Record<string, string>) {\n  const strAttributes: string[] = [];\n  Object.keys(attributes).forEach((key) => {\n    strAttributes.push(`${key}=\"${strigifyEntities(`${attributes[key]}`)}\"`);\n  });\n  return `<${tag}${strAttributes.length ? ' ' : ''}${strAttributes.join(' ')}>`;\n}\n\n/**\n * Convert a DOM node to its HTML representation.\n *\n * @param root - The root to stringify.\n * @param reporter - An optional function which will receive every\n * parsed node as 1st argument, the depth as 2d argument and the converted html\n * as 3d argument.\n */\nexport default function domNodeToHTMLString(\n  root: Node | null,\n  reporter?: DomNodeToHtmlReporter,\n  depth = 0\n) {\n  let html = '';\n  if (isDomElement(root)) {\n    const strChildren = root.children.reduce((prev, curr) => {\n      const convertedNode = domNodeToHTMLString(curr, reporter, depth + 1);\n      return `${prev}${convertedNode}`;\n    }, '');\n    html = `${renderOpeningTag(root.tagName, root.attribs)}${strChildren}</${\n      root.tagName\n    }>`;\n  } else if (isDomText(root)) {\n    const text = strigifyEntities(root.data);\n    html = text;\n  }\n  typeof reporter === 'function' && reporter(root, depth, html);\n  return html;\n}\n\n/**\n * @public\n */\nexport interface DomNodeToHtmlReporter {\n  /**\n   * @param node - The node being parsed.\n   * @param depth - How many parents this node have.\n   * @param html - The HTML representation of this node and its children.\n   */\n  (node: Node | null, depth: number, html: string): void;\n}\n"]},"metadata":{},"sourceType":"script"}