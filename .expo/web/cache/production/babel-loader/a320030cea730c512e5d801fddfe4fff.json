{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.useListStyleSpecs=useListStyleSpecs;exports.default=ListStyleSpecsProvider;var _ramda=require(\"ramda\");var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _defaultListStyleSpecs=_interopRequireDefault(require(\"../elements/defaultListStyleSpecs\"));var _SharedPropsProvider=require(\"./SharedPropsProvider\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var listStyleSpecsContext=(0,_react.createContext)(_defaultListStyleSpecs.default);function useListStyleSpecs(){return(0,_react.useContext)(listStyleSpecsContext);}function createSymbolicMarkerRenderer(_ref){var Component=_ref.Component,counterStyleRenderer=_ref.counterStyleRenderer;var prefix=counterStyleRenderer.renderPrefix();var suffix=counterStyleRenderer.renderSuffix();return function(_ref2){var style=_ref2.style,markerTextStyle=_ref2.markerTextStyle,counterIndex=_ref2.counterIndex,rtlMarkerReversed=_ref2.rtlMarkerReversed;return _react.default.createElement(_reactNative.View,{style:[style,{flexDirection:rtlMarkerReversed?'row-reverse':'row',justifyContent:'flex-end'}]},!!prefix&&_react.default.createElement(_reactNative.Text,{style:markerTextStyle},prefix),_react.default.createElement(Component,_objectSpread(_objectSpread({},markerTextStyle),{},{index:counterIndex})),!!suffix&&_react.default.createElement(_reactNative.Text,{style:markerTextStyle},suffix));};}var makeMarkerRenderers=(0,_ramda.mapObjIndexed)(function(value){if(value.type==='unitary'){return _objectSpread(_objectSpread({},value),{},{renderMarker:createSymbolicMarkerRenderer(value)});}return value;});function ListStyleSpecsProvider(_ref3){var children=_ref3.children;var _ref4=(0,_SharedPropsProvider.useSharedProps)(),customListStyleSpecs=_ref4.customListStyleSpecs;var mergedListStyleSpecs=(0,_react.useMemo)(function(){return makeMarkerRenderers(customListStyleSpecs!=null?_objectSpread(_objectSpread({},_defaultListStyleSpecs.default),customListStyleSpecs):_defaultListStyleSpecs.default);},[customListStyleSpecs]);return _react.default.createElement(listStyleSpecsContext.Provider,{value:mergedListStyleSpecs},children);}","map":{"version":3,"sources":["ListStyleSpecsProvider.tsx"],"names":["listStyleSpecsContext","defaultListStyleSpecs","counterStyleRenderer","prefix","suffix","rtlMarkerReversed","flexDirection","justifyContent","markerTextStyle","index","counterIndex","makeMarkerRenderers","value","renderMarker","createSymbolicMarkerRenderer","children","customListStyleSpecs","mergedListStyleSpecs"],"mappings":"4/BAEA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAOA,GAAA,CAAA,sBAAA,CAAA,sBAAA,CAAA,OAAA,qCAAA,CAAA,CAEA,GAAA,CAAA,oBAAA,CAAA,OAAA,yBAAA,C,6kCAEA,GAAMA,CAAAA,qBAAqB,CAAG,CAAA,EAAA,MAAA,CAAA,aAAA,EAK5BC,sBAAAA,CALF,OAA8B,CAA9B,CAOO,QAAA,CAAA,iBAAA,EAA6B,CAClC,MAAO,CAAA,EAAA,MAAA,CAAA,UAAA,EAAP,qBAAO,CAAP,CACD,CAED,QAAA,CAAA,4BAAA,MAGyB,IAHa,CAAA,SAGb,MAHa,SAGb,CADvBC,oBACuB,MADvBA,oBACuB,CACvB,GAAMC,CAAAA,MAAM,CAAGD,oBAAoB,CAAnC,YAAeA,EAAf,CACA,GAAME,CAAAA,MAAM,CAAGF,oBAAoB,CAAnC,YAAeA,EAAf,CACA,MAAO,gBAKe,IALd,CAAA,KAKc,OALd,KAKc,CALd,eAKc,OALd,eAKc,CALd,YAKc,OALd,YAKc,CADpBG,iBACoB,OADpBA,iBACoB,CACpB,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CACE,KAAK,CAAE,CAAA,KAAA,CAEL,CACEC,aAAa,CAAED,iBAAiB,CAAA,aAAA,CADlC,KAAA,CAEEE,cAAc,CAAE,UAFlB,CAFK,CADT,CAAA,CAQG,CAAC,CAAD,MAAA,EAAY,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,KAAK,CAAEC,eAAb,CAAA,CARf,MAQe,CARf,CASG,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,SAAA,gCAA+B,eAA/B,MAECC,KAAK,CAAEC,YAFR,GATH,CAaG,CAAC,CAAD,MAAA,EAAY,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,KAAK,CAAEF,eAAb,CAAA,CAdjB,MAciB,CAbf,CADF,CANF,CAAA,CAwBD,CAED,GAAMG,CAAAA,mBAAmB,CAAG,CAAA,EAAA,MAAA,CAAA,aAAA,EAAeC,SAAAA,KAAD,CAA0B,CAClE,GAAIA,KAAK,CAALA,IAAAA,GAAJ,SAAA,CAA8B,CAC5B,sCAAO,KAAP,MAEEC,YAAY,CAAEC,4BAA4B,CAAA,KAAA,CAF5C,GAID,CACD,MAAA,CAAA,KAAA,CAPF,CAA4B,CAA5B,CAUe,QAAA,CAAA,sBAAA,OAEW,IADxBC,CAAAA,QACwB,OADxBA,QACwB,CACxB,UAAiC,CAAA,EAAA,oBAAA,CAAjC,cAAiC,GAAjC,CAAQC,oBAAR,OAAQA,oBAAR,CACA,GAAMC,CAAAA,oBAAoB,CAAG,CAAA,EAAA,MAAA,CAAA,OAAA,EAAQ,UAAM,CACzC,MAAON,CAAAA,mBAAmB,CACxB,oBAAoB,EAApB,IAAA,gCACSV,sBAAAA,CAAL,OADJ,EACmCe,oBADnC,EAEIf,sBAAAA,CAHN,OAA0B,CAA1B,CAD2B,CAAA,CAM1B,CANH,oBAMG,CAN0B,CAA7B,CAOA,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,qBAAD,CAAA,QAAA,CAAA,CAAgC,KAAK,CAAEgB,oBAAvC,CAAA,CADF,QACE,CADF,CAKD","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport { MarkerBoxProps } from '@jsamr/react-native-li';\nimport { mapObjIndexed } from 'ramda';\nimport React, {\n  createContext,\n  PropsWithChildren,\n  useContext,\n  useMemo\n} from 'react';\nimport { Text, View } from 'react-native';\nimport defaultListStyleSpecs from '../elements/defaultListStyleSpecs';\nimport { ListStyleSpec, UnitaryListStyleSpec } from '../shared-types';\nimport { useSharedProps } from './SharedPropsProvider';\n\nconst listStyleSpecsContext = createContext<\n  Record<\n    string,\n    ListStyleSpec & { renderMarker?: (props: MarkerBoxProps) => any }\n  >\n>(defaultListStyleSpecs);\n\nexport function useListStyleSpecs() {\n  return useContext(listStyleSpecsContext);\n}\n\nfunction createSymbolicMarkerRenderer({\n  Component,\n  counterStyleRenderer\n}: UnitaryListStyleSpec) {\n  const prefix = counterStyleRenderer.renderPrefix();\n  const suffix = counterStyleRenderer.renderSuffix();\n  return ({\n    style,\n    markerTextStyle,\n    counterIndex,\n    rtlMarkerReversed\n  }: MarkerBoxProps) => {\n    return (\n      <View\n        style={[\n          style,\n          {\n            flexDirection: rtlMarkerReversed ? 'row-reverse' : 'row',\n            justifyContent: 'flex-end'\n          }\n        ]}>\n        {!!prefix && <Text style={markerTextStyle}>{prefix}</Text>}\n        {React.createElement(Component, {\n          ...(markerTextStyle as any),\n          index: counterIndex\n        })}\n        {!!suffix && <Text style={markerTextStyle}>{suffix}</Text>}\n      </View>\n    );\n  };\n}\n\nconst makeMarkerRenderers = mapObjIndexed((value: ListStyleSpec) => {\n  if (value.type === 'unitary') {\n    return {\n      ...value,\n      renderMarker: createSymbolicMarkerRenderer(value)\n    };\n  }\n  return value;\n});\n\nexport default function ListStyleSpecsProvider({\n  children\n}: PropsWithChildren<{}>) {\n  const { customListStyleSpecs } = useSharedProps();\n  const mergedListStyleSpecs = useMemo(() => {\n    return makeMarkerRenderers(\n      customListStyleSpecs != null\n        ? { ...defaultListStyleSpecs, ...customListStyleSpecs }\n        : defaultListStyleSpecs\n    );\n  }, [customListStyleSpecs]);\n  return (\n    <listStyleSpecsContext.Provider value={mergedListStyleSpecs}>\n      {children}\n    </listStyleSpecsContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}