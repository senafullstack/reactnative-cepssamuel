{"ast":null,"code":"\"use strict\";var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _defineProperty2=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty2(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.TStyles=void 0;var _cssProcessor=require(\"@native-html/css-processor\");var _isNil=_interopRequireDefault(require(\"ramda/src/isNil\"));var _not=_interopRequireDefault(require(\"ramda/src/not\"));var _compose=_interopRequireDefault(require(\"ramda/src/compose\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var notNil=(0,_compose.default)(_not.default,_isNil.default);function inheritProperties(){for(var _len=arguments.length,properties=new Array(_len),_key=0;_key<_len;_key++){properties[_key]=arguments[_key];}var realProperties=properties.filter(notNil);if(realProperties.length===1){return realProperties[0];}if(Object.keys(realProperties[0]).length===0){return realProperties[1];}return realProperties.reduce(function(prev,curr){return _objectSpread(_objectSpread({},prev),curr);},Object.prototype);}var TStyles=function(){function TStyles(ownProcessedProps,parentStyles){_classCallCheck(this,TStyles);_defineProperty(this,\"nativeTextFlow\",void 0);_defineProperty(this,\"nativeBlockFlow\",void 0);_defineProperty(this,\"nativeTextRet\",void 0);_defineProperty(this,\"nativeBlockRet\",void 0);_defineProperty(this,\"webTextFlow\",void 0);_defineProperty(this,\"webBlockRet\",void 0);this.nativeTextFlow=inheritProperties(parentStyles===null||parentStyles===void 0?void 0:parentStyles.nativeTextFlow,ownProcessedProps.native.text.flow);this.nativeBlockFlow=inheritProperties(parentStyles===null||parentStyles===void 0?void 0:parentStyles.nativeBlockFlow,ownProcessedProps.native.block.flow);this.webTextFlow=inheritProperties(parentStyles===null||parentStyles===void 0?void 0:parentStyles.webTextFlow,ownProcessedProps.web.text.flow);this.nativeTextRet=inheritProperties(parentStyles===null||parentStyles===void 0?void 0:parentStyles.nativeTextRet,ownProcessedProps.native.text.retain);this.nativeBlockRet=ownProcessedProps.native.block.retain;this.webBlockRet=ownProcessedProps.web.block.retain;}_createClass(TStyles,null,[{key:\"empty\",value:function empty(){return new TStyles(new _cssProcessor.CSSProcessedProps());}}]);return TStyles;}();exports.TStyles=TStyles;","map":{"version":3,"sources":["TStyles.ts"],"names":["notNil","not","nil","realProperties","properties","Object","curr","constructor","inheritProperties","parentStyles","ownProcessedProps","empty","CSSProcessedProps"],"mappings":"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","sourcesContent":["import { CSSProperties, CSSProcessedProps } from '@native-html/css-processor';\nimport nil from 'ramda/src/isNil';\nimport not from 'ramda/src/not';\nimport compose from 'ramda/src/compose';\n\nconst notNil = compose(not, nil);\n/**\n * A merge properties from left to right.\n *\n * @param child\n * @param parent\n */\nfunction inheritProperties(\n  ...properties: Array<CSSProperties | null | undefined>\n): CSSProperties {\n  const realProperties = properties.filter(notNil) as CSSProperties[];\n  if (realProperties.length === 1) {\n    return realProperties[0];\n  }\n  if (Object.keys(realProperties[0]).length === 0) {\n    return realProperties[1];\n  }\n  return realProperties.reduce(\n    (prev, curr) => ({ ...prev, ...curr }),\n    Object.prototype as CSSProperties\n  ) as CSSProperties;\n}\n\n/**\n * A record of styles organized in logical chunks:\n *\n * - wether they are supported in React Native (native) and others (web).\n * - wether they target native Views (block) or Text (text).\n * - wether they are inherited by this node's children (flow) or not (retain).\n *\n * @public\n */\nexport interface TStylesShape {\n  readonly nativeTextFlow: CSSProcessedProps['native']['text']['flow'];\n  readonly nativeBlockFlow: CSSProcessedProps['native']['block']['flow'];\n  readonly nativeTextRet: CSSProcessedProps['native']['text']['retain'];\n  readonly nativeBlockRet: CSSProcessedProps['native']['block']['retain'];\n  readonly webTextFlow: CSSProcessedProps['web']['text']['flow'];\n  readonly webBlockRet: CSSProcessedProps['web']['block']['retain'];\n}\n\nexport class TStyles implements TStylesShape {\n  public readonly nativeTextFlow: CSSProcessedProps['native']['text']['flow'];\n  public readonly nativeBlockFlow: CSSProcessedProps['native']['block']['flow'];\n  public readonly nativeTextRet: CSSProcessedProps['native']['text']['retain'];\n  public readonly nativeBlockRet: CSSProcessedProps['native']['block']['retain'];\n  public readonly webTextFlow: CSSProcessedProps['web']['text']['flow'];\n  public readonly webBlockRet: CSSProcessedProps['web']['block']['retain'];\n\n  constructor(\n    ownProcessedProps: CSSProcessedProps,\n    parentStyles?: TStyles | null\n  ) {\n    this.nativeTextFlow = inheritProperties(\n      parentStyles?.nativeTextFlow,\n      ownProcessedProps.native.text.flow\n    );\n    this.nativeBlockFlow = inheritProperties(\n      parentStyles?.nativeBlockFlow,\n      ownProcessedProps.native.block.flow\n    );\n    this.webTextFlow = inheritProperties(\n      parentStyles?.webTextFlow,\n      ownProcessedProps.web.text.flow\n    );\n    // In theory, we shouldn't merge those properties. However, these\n    // properties being textDecoration*, we actually want children nodes to\n    // inherit from them. A cleaner solution would be to to let each TNode\n    // handle its merging logic, because only TPhrasing and TText nodes would\n    // need to merge these.\n    this.nativeTextRet = inheritProperties(\n      parentStyles?.nativeTextRet,\n      ownProcessedProps.native.text.retain\n    );\n    this.nativeBlockRet = ownProcessedProps.native.block.retain;\n    this.webBlockRet = ownProcessedProps.web.block.retain;\n  }\n\n  static empty(): TStyles {\n    return new TStyles(new CSSProcessedProps());\n  }\n}\n"]},"metadata":{},"sourceType":"script"}