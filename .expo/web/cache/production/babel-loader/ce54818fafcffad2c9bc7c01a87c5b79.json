{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";var markerClipConfig={numberOfLines:1,ellipsizeMode:'clip'};export default function MarkerBox(_ref){var style=_ref.style,counterRenderer=_ref.counterRenderer,counterIndex=_ref.counterIndex,markerTextStyle=_ref.markerTextStyle,markerTextWidth=_ref.markerTextWidth,enableMarkerClipping=_ref.enableMarkerClipping;var markerStyle=typeof markerTextWidth==='number'?[markerTextStyle,{width:markerTextWidth}]:markerTextStyle;return React.createElement(View,{style:style},React.createElement(Text,_extends({},enableMarkerClipping?markerClipConfig:null,{testID:\"marker-box\",style:markerStyle}),counterRenderer.renderMarker(counterIndex)));}","map":{"version":3,"sources":["MarkerBox.tsx"],"names":["markerClipConfig","numberOfLines","ellipsizeMode","enableMarkerClipping","markerStyle","width","markerTextWidth","style","counterRenderer"],"mappings":"uRAAA,MAAA,CAAA,KAAA,KAAA,OAAA,C,0GAIA,GAAMA,CAAAA,gBAAoC,CAAG,CAC3CC,aAAa,CAD8B,CAAA,CAE3CC,aAAa,CAAE,MAF4B,CAA7C,CAYA,cAAe,SAAA,CAAA,SAAA,MAOI,IAPe,CAAA,KAOf,MAPe,KAOf,CAPe,eAOf,MAPe,eAOf,CAPe,YAOf,MAPe,YAOf,CAPe,eAOf,MAPe,eAOf,CAPe,eAOf,MAPe,eAOf,CADjBC,oBACiB,MADjBA,oBACiB,CACjB,GAAMC,CAAAA,WAAW,CACf,MAAA,CAAA,eAAA,GAAA,QAAA,CACI,CAAA,eAAA,CAAkB,CAAEC,KAAK,CAAEC,eAAT,CAAlB,CADJ,CADF,eAAA,CAIA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAEC,KAAb,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CACOJ,oBAAoB,CAAA,gBAAA,CAD3B,IAAA,CAAA,CAEE,MAAM,CAFR,YAAA,CAGE,KAAK,CAAEC,WAHT,CAAA,CAAA,CAIGI,eAAe,CAAfA,YAAAA,CANP,YAMOA,CAJH,CADF,CADF,CAUD","sourcesContent":["import React from 'react';\nimport { Text, TextProps, View } from 'react-native';\nimport { MarkerBoxProps } from './shared-types';\n\nconst markerClipConfig: Partial<TextProps> = {\n  numberOfLines: 1,\n  ellipsizeMode: 'clip'\n};\n\n/**\n * Default component to render the list marker.\n *\n * See {@link https://www.w3.org/TR/css-lists-3/#marker-pseudo | CSS Lists and Counters Module Level 3, Markers}\n *\n * @public\n */\nexport default function MarkerBox({\n  style,\n  counterRenderer,\n  counterIndex,\n  markerTextStyle,\n  markerTextWidth,\n  enableMarkerClipping\n}: MarkerBoxProps) {\n  const markerStyle =\n    typeof markerTextWidth === 'number'\n      ? [markerTextStyle, { width: markerTextWidth }]\n      : markerTextStyle;\n  return (\n    <View style={style}>\n      <Text\n        {...(enableMarkerClipping ? markerClipConfig : null)}\n        testID=\"marker-box\"\n        style={markerStyle}>\n        {counterRenderer.renderMarker(counterIndex)}\n      </Text>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}