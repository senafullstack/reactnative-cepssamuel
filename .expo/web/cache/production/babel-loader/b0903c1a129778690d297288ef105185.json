{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"contentContainerStyle\",\"style\",\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useSafeAreaInsets}from'react-native-safe-area-context';import DrawerPositionContext from\"../utils/DrawerPositionContext\";function DrawerContentScrollView(_ref,ref){var contentContainerStyle=_ref.contentContainerStyle,style=_ref.style,children=_ref.children,rest=_objectWithoutProperties(_ref,_excluded);var drawerPosition=React.useContext(DrawerPositionContext);var insets=useSafeAreaInsets();var isRight=I18nManager.isRTL?drawerPosition==='left':drawerPosition==='right';return React.createElement(ScrollView,_extends({},rest,{ref:ref,contentContainerStyle:[{paddingTop:insets.top+4,paddingStart:!isRight?insets.left:0,paddingEnd:isRight?insets.right:0},contentContainerStyle],style:[styles.container,style]}),children);}export default React.forwardRef(DrawerContentScrollView);var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["DrawerContentScrollView.tsx"],"names":["rest","drawerPosition","React","insets","useSafeAreaInsets","isRight","I18nManager","paddingTop","paddingStart","paddingEnd","styles","container","flex"],"mappings":"uaAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,qMAOA,OAAA,iBAAA,KAAA,gCAAA,CAEA,MAAA,CAAA,qBAAA,sCAMA,QAAA,CAAA,uBAAA,MAAA,GAAA,CAGE,IAFA,CAAA,qBAEA,MAFA,qBAEA,CAFA,KAEA,MAFA,KAEA,CAFA,QAEA,MAFA,QAEA,CAF6CA,IAE7C,0CACA,GAAMC,CAAAA,cAAc,CAAGC,KAAK,CAALA,UAAAA,CAAvB,qBAAuBA,CAAvB,CACA,GAAMC,CAAAA,MAAM,CAAGC,iBAAf,EAAA,CAEA,GAAMC,CAAAA,OAAO,CAAGC,WAAW,CAAXA,KAAAA,CACZL,cAAc,GADFK,MAAAA,CAEZL,cAAc,GAFlB,OAAA,CAIA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,GAAG,CAFL,GAAA,CAGE,qBAAqB,CAAE,CACrB,CACEM,UAAU,CAAEJ,MAAM,CAANA,GAAAA,CADd,CAAA,CAEEK,YAAY,CAAE,CAAA,OAAA,CAAWL,MAAM,CAAjB,IAAA,CAFhB,CAAA,CAGEM,UAAU,CAAEJ,OAAO,CAAGF,MAAM,CAAT,KAAA,CAAkB,CAHvC,CADqB,CAHzB,qBAGyB,CAHzB,CAWE,KAAK,CAAE,CAACO,MAAM,CAAP,SAAA,CAAA,KAAA,CAXT,CAAA,CAAA,CADF,QACE,CADF,CAiBD,CAED,cAAeR,CAAAA,KAAK,CAALA,UAAAA,CAAf,uBAAeA,CAAf,CAEA,GAAMQ,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,IAAI,CAAE,CADG,CADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  ScrollView,\n  ScrollViewProps,\n  StyleSheet,\n} from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\n\ntype Props = ScrollViewProps & {\n  children: React.ReactNode;\n};\n\nfunction DrawerContentScrollView(\n  { contentContainerStyle, style, children, ...rest }: Props,\n  ref?: React.Ref<ScrollView>\n) {\n  const drawerPosition = React.useContext(DrawerPositionContext);\n  const insets = useSafeAreaInsets();\n\n  const isRight = I18nManager.isRTL\n    ? drawerPosition === 'left'\n    : drawerPosition === 'right';\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      contentContainerStyle={[\n        {\n          paddingTop: insets.top + 4,\n          paddingStart: !isRight ? insets.left : 0,\n          paddingEnd: isRight ? insets.right : 0,\n        },\n        contentContainerStyle,\n      ]}\n      style={[styles.container, style]}\n    >\n      {children}\n    </ScrollView>\n  );\n}\n\nexport default React.forwardRef(DrawerContentScrollView);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}