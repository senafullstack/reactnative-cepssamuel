{"ast":null,"code":"import{DIGIT,ALPHA,ALPHANUM}from\"./constants\";function addPlaceholder(output,index,placeholder){for(var newIndex=index;newIndex<output.length;newIndex++){if(output[newIndex]===DIGIT||output[newIndex]===ALPHA||output[newIndex]===ALPHANUM){output[newIndex]=placeholder;}}return output;}export default addPlaceholder;","map":{"version":3,"sources":["addPlaceholder.ts"],"names":["newIndex","output"],"mappings":"AAAA,OAAA,KAAA,CAAA,KAAA,CAAA,QAAA,mBASA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,KAAA,CAAA,WAAA,CAIY,CACV,IAAK,GAAIA,CAAAA,QAAQ,CAAjB,KAAA,CAA2BA,QAAQ,CAAGC,MAAM,CAA5C,MAAA,CAAqDD,QAArD,EAAA,CAAiE,CAC/D,GACEC,MAAM,CAANA,QAAM,CAANA,GAAAA,KAAAA,EACAA,MAAM,CAANA,QAAM,CAANA,GADAA,KAAAA,EAEAA,MAAM,CAANA,QAAM,CAANA,GAHF,QAAA,CAIE,CAEAA,MAAM,CAANA,QAAM,CAANA,CAAAA,WAAAA,CACD,CACF,CACD,MAAA,CAAA,MAAA,CACD,CAED,cAAA,CAAA,cAAA","sourcesContent":["import { DIGIT, ALPHA, ALPHANUM } from './constants'\n\n/**\n * function addPlaceholder\n * @param {string[]} output\n * @param {number} index\n * @param {string} placeholder\n * @returns {string[]}\n */\nfunction addPlaceholder(\n  output: string[],\n  index: number,\n  placeholder: string\n): string[] {\n  for (let newIndex = index; newIndex < output.length; newIndex++) {\n    if (\n      output[newIndex] === DIGIT ||\n      output[newIndex] === ALPHA ||\n      output[newIndex] === ALPHANUM\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      output[newIndex] = placeholder\n    }\n  }\n  return output\n}\n\nexport default addPlaceholder\n"]},"metadata":{},"sourceType":"module"}