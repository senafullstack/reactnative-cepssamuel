{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useTTree;var _react=require(\"react\");var _ttreeEventsContext=_interopRequireDefault(require(\"../context/ttreeEventsContext\"));var _SharedPropsProvider=require(\"../context/SharedPropsProvider\");var _TRenderEngineProvider=require(\"../TRenderEngineProvider\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function useTTreeChangeEffect(ttree){var _ref=(0,_react.useContext)(_ttreeEventsContext.default),onTTreeChange=_ref.onTTreeChange;var _ref2=(0,_SharedPropsProvider.useSharedProps)(),debug=_ref2.debug;var updateNumber=(0,_react.useRef)(0);(0,_react.useEffect)(function(){onTTreeChange===null||onTTreeChange===void 0?void 0:onTTreeChange.call(null,ttree);if(debug&&typeof __DEV__==='boolean'&&__DEV__){console.info(\"Transient Render Tree update \"+ ++updateNumber.current+\":\\n\"+ttree.snapshot({withNodeIndex:false,withStyles:false}));}},[ttree,onTTreeChange,debug]);}function useTTree(props){var document=props.document;var trenderEngine=(0,_TRenderEngineProvider.useAmbientTRenderEngine)();var ttree=(0,_react.useMemo)(function(){return typeof document==='string'?trenderEngine.buildTTree(document):trenderEngine.buildTTreeFromDoc(document);},[document,trenderEngine]);useTTreeChangeEffect(ttree);return ttree;}","map":{"version":3,"sources":["useTTree.ts"],"names":["onTTreeChange","ttreeEventsContext","debug","updateNumber","console","current","withNodeIndex","withStyles","document","trenderEngine","ttree","useTTreeChangeEffect"],"mappings":"+FAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,mBAAA,CAAA,sBAAA,CAAA,OAAA,iCAAA,CAAA,CACA,GAAA,CAAA,oBAAA,CAAA,OAAA,kCAAA,CAEA,GAAA,CAAA,sBAAA,CAAA,OAAA,4BAAA,C,mFAGA,QAAA,CAAA,oBAAA,CAAA,KAAA,CAAgD,CAC9C,SAA0B,CAAA,EAAA,MAAA,CAAA,UAAA,EAAWC,mBAAAA,CAArC,OAA0B,CAA1B,CAAQD,aAAR,MAAQA,aAAR,CACA,UAAkB,CAAA,EAAA,oBAAA,CAAlB,cAAkB,GAAlB,CAAQE,KAAR,OAAQA,KAAR,CACA,GAAMC,CAAAA,YAAY,CAAG,CAAA,EAAA,MAAA,CAAA,MAAA,EAArB,CAAqB,CAArB,CACA,CAAA,EAAA,MAAA,CAAA,SAAA,EAAU,UAAM,CACdH,aAAa,GAAbA,IAAAA,EAAAA,aAAa,GAAA,IAAbA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,aAAa,CAAbA,IAAAA,CAAAA,IAAAA,CAAAA,KAAAA,CAAAA,CACA,GAAIE,KAAK,EAAI,MAAA,CAAA,OAAA,GAATA,SAAAA,EAAJ,OAAA,CAAsD,CACpDE,OAAO,CAAPA,IAAAA,iCACkC,GAAED,YAAY,CAACE,OADjDD,OAC8D,KAAK,CAAL,QAAA,CAC1D,CACEE,aAAa,CADf,KAAA,CAEEC,UAAU,CAAE,KAFd,CAD0D,CAD9DH,EAQD,CAXH,CAAA,CAYG,CAAA,KAAA,CAAA,aAAA,CAZH,KAYG,CAZH,EAaD,CAKc,QAAA,CAAA,QAAA,CAAA,KAAA,CAA2C,CACxD,GAAQI,CAAAA,QAAR,CAAA,KAAA,CAAQA,QAAR,CACA,GAAMC,CAAAA,aAAa,CAAG,CAAA,EAAA,sBAAA,CAAtB,uBAAsB,GAAtB,CACA,GAAMC,CAAAA,KAAK,CAAG,CAAA,EAAA,MAAA,CAAA,OAAA,EACZ,iBACE,OAAA,CAAA,QAAA,GAAA,QAAA,CACID,aAAa,CAAbA,UAAAA,CADJ,QACIA,CADJ,CAEIA,aAAa,CAAbA,iBAAAA,CAJM,QAINA,CAHN,EADY,CAKZ,CAAA,QAAA,CALF,aAKE,CALY,CAAd,CAOAE,oBAAoB,CAApBA,KAAoB,CAApBA,CACA,MAAA,CAAA,KAAA,CACD","sourcesContent":["import { useMemo, useEffect, useRef, useContext } from 'react';\nimport ttreeEventsContext from '../context/ttreeEventsContext';\nimport { useSharedProps } from '../context/SharedPropsProvider';\nimport { RenderTTreeProps } from '../internal-types';\nimport { useAmbientTRenderEngine } from '../TRenderEngineProvider';\nimport { TDocument } from '@native-html/transient-render-engine';\n\nfunction useTTreeChangeEffect(ttree: TDocument) {\n  const { onTTreeChange } = useContext(ttreeEventsContext);\n  const { debug } = useSharedProps();\n  const updateNumber = useRef(0);\n  useEffect(() => {\n    onTTreeChange?.call(null, ttree);\n    if (debug && typeof __DEV__ === 'boolean' && __DEV__) {\n      console.info(\n        `Transient Render Tree update ${++updateNumber.current}:\\n${ttree.snapshot(\n          {\n            withNodeIndex: false,\n            withStyles: false\n          }\n        )}`\n      );\n    }\n  }, [ttree, onTTreeChange, debug]);\n}\n\n/**\n * @internal\n */\nexport default function useTTree(props: RenderTTreeProps) {\n  const { document } = props;\n  const trenderEngine = useAmbientTRenderEngine();\n  const ttree = useMemo(\n    () =>\n      typeof document === 'string'\n        ? trenderEngine.buildTTree(document)\n        : trenderEngine.buildTTreeFromDoc(document),\n    [document, trenderEngine]\n  );\n  useTTreeChangeEffect(ttree);\n  return ttree;\n}\n"]},"metadata":{},"sourceType":"script"}