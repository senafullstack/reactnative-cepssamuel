{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useEffect,useState}from\"react\";import{Card}from\"react-native-elements\";import View from\"react-native-web/dist/exports/View\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Image from\"react-native-web/dist/exports/Image\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import MenuHeader from\"../layouts/MenuHeader\";import{obterToken}from\"../Configs/Globais\";import Globais from\"../Configs/Globais\";export default(function(_ref){var navigation=_ref.navigation,titulo=_ref.titulo;var percentual=30;var dimensions=Dimensions.get(\"window\");var imageHeight=dimensions.height;imageHeight=imageHeight-imageHeight*percentual/100;console.log(imageHeight);var imageWidth=dimensions.width;var tamanho=imageWidth-imageWidth*percentual/100;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dados=_useState2[0],setDados=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),dadoslogin=_useState4[0],setDadoslogin=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),carregando=_useState6[0],setCarregando=_useState6[1];function carregarimagens(token){var url;return _regeneratorRuntime.async(function carregarimagens$(_context){while(1){switch(_context.prev=_context.next){case 0:url=Globais.url+\"v1/cardapio\";setCarregando(true);_context.next=4;return _regeneratorRuntime.awrap(fetch(url,{method:\"get\",headers:new Headers({Authorization:\"Bearer \"+token})}).then(function(resp){return resp.json();}).then(function(json){var resultado=json.data.data;setDados(resultado);}).catch(function(e){alert(\"erro\"+e);}).finally(function(){setCarregando(false);}));case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);}useEffect(function(){obterToken(\"dadoslogin\").then(function(resposta){carregarimagens(resposta.access_token);setDadoslogin(resposta);});},[]);return React.createElement(View,null,React.createElement(MenuHeader,{navigation:navigation,titulo:\"Confira nosso cardapio\"}),React.createElement(ScrollView,{style:styles.scrollView},React.createElement(View,{style:{flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\"}},React.createElement(Card,{containerStyle:{width:\"90%\",borderRadius:10}},React.createElement(Card.Title,{style:{color:\"#43C1C4\"}},\"Cardapio da semana\",\" \"),React.createElement(Card.Divider,null),carregando?React.createElement(View,{style:{width:Globais.percentuallargura(85),height:Globais.percentualaltura(85),justifyContent:\"center\",alignItems:\"center\"}},React.createElement(ActivityIndicator,{size:\"large\",animating:true})):dados.map(function(item,index){return React.createElement(TouchableOpacity,{onPress:function onPress(){Globais.Download(Globais.urladmin+item.foto);},key:item.id_cardapio},React.createElement(View,{style:{width:\"100%\",flexDirection:\"row\"}},React.createElement(View,{style:{margin:2,flex:1}},React.createElement(Image,{source:{uri:Globais.urladmin+item.foto},style:{width:\"100%\",height:imageHeight,resizeMode:\"stretch\"}}))),React.createElement(Card.Divider,null));})))));});var styles=StyleSheet.create({container:{flex:1,paddingTop:StatusBar.currentHeight},scrollView:{marginHorizontal:0},text:{fontSize:42},titulo:{color:\"#43C1C4\",fontSize:20}});","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/Pages/PageCardapio.tsx"],"names":["React","useEffect","useState","Card","MenuHeader","obterToken","Globais","navigation","titulo","percentual","dimensions","Dimensions","get","imageHeight","height","console","log","imageWidth","width","tamanho","dados","setDados","dadoslogin","setDadoslogin","carregando","setCarregando","carregarimagens","token","url","fetch","method","headers","Headers","Authorization","then","resp","json","resultado","data","catch","e","alert","finally","resposta","access_token","styles","scrollView","flexDirection","justifyContent","alignItems","borderRadius","color","percentuallargura","percentualaltura","map","item","index","Download","urladmin","foto","id_cardapio","margin","flex","uri","resizeMode","StyleSheet","create","container","paddingTop","StatusBar","currentHeight","marginHorizontal","text","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Input, Card, Button } from \"react-native-elements\";\r\nimport {\r\n  View,\r\n  Modal,\r\n  StatusBar,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  Image,\r\n  Text,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Pressable,\r\n  Alert,\r\n  FlatList,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport MenuHeader from \"../layouts/MenuHeader\";\r\nimport WebView from \"react-native-webview\";\r\nimport { obterToken } from \"../Configs/Globais\";\r\nimport Globais from \"../Configs/Globais\";\r\nimport * as WebBrowser from \"expo-web-browser\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nexport default ({ navigation, titulo }) => {\r\n  const percentual = 30;\r\n  const dimensions = Dimensions.get(\"window\");\r\n  var imageHeight = dimensions.height;\r\n  imageHeight = imageHeight - (imageHeight * percentual) / 100;\r\n  console.log(imageHeight);\r\n  const imageWidth = dimensions.width;\r\n\r\n  var tamanho = imageWidth - (imageWidth * percentual) / 100;\r\n  const [dados, setDados] = useState([]);\r\n  const [dadoslogin, setDadoslogin] = useState(\"\");\r\n  const [carregando, setCarregando] = useState(false);\r\n  async function carregarimagens(token) {\r\n    var url = Globais.url + \"v1/cardapio\";\r\n\r\n    setCarregando(true);\r\n    //console.log(token);\r\n    await fetch(url, {\r\n      method: \"get\",\r\n      headers: new Headers({\r\n        Authorization: \"Bearer \" + token,\r\n      }),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        const resultado = json.data.data;\r\n        setDados(resultado);\r\n      })\r\n      .catch((e) => {\r\n        alert(\"erro\" + e);\r\n      })\r\n      .finally(() => {\r\n        setCarregando(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    obterToken(\"dadoslogin\").then((resposta) => {\r\n      carregarimagens(resposta.access_token);\r\n      setDadoslogin(resposta);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <MenuHeader navigation={navigation} titulo=\"Confira nosso cardapio\" />\r\n\r\n      <ScrollView style={styles.scrollView}>\r\n        <View\r\n          style={{\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Card containerStyle={{ width: \"90%\", borderRadius: 10 }}>\r\n            <Card.Title style={{ color: \"#43C1C4\" }}>\r\n              Cardapio da semana{\" \"}\r\n            </Card.Title>\r\n            <Card.Divider />\r\n\r\n            {carregando ? (\r\n              <View\r\n                style={{\r\n                  width: Globais.percentuallargura(85),\r\n                  height: Globais.percentualaltura(85),\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" animating={true} />\r\n              </View>\r\n            ) : (\r\n              dados.map((item, index) => (\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    Globais.Download(Globais.urladmin + item.foto);\r\n                  }}\r\n                  key={item.id_cardapio}\r\n                >\r\n                  <View style={{ width: \"100%\", flexDirection: \"row\" }}>\r\n                    <View style={{ margin: 2, flex: 1 }}>\r\n                      <Image\r\n                        source={{ uri: Globais.urladmin + item.foto }}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: imageHeight,\r\n                          resizeMode: \"stretch\",\r\n                        }}\r\n                      />\r\n                    </View>\r\n                  </View>\r\n                  <Card.Divider />\r\n                </TouchableOpacity>\r\n              ))\r\n            )}\r\n          </Card>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n  },\r\n  scrollView: {\r\n    marginHorizontal: 0,\r\n  },\r\n  text: {\r\n    fontSize: 42,\r\n  },\r\n  titulo: {\r\n    color: \"#43C1C4\",\r\n    fontSize: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}