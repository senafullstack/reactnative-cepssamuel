{"ast":null,"code":"\"use strict\";var _toConsumableArray=require(\"@babel/runtime/helpers/toConsumableArray\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _emptyProps=require(\"./emptyProps\");function mergeProps(props){var filteredProps=props.filter(_emptyProps.isNotEmpty);if(filteredProps.length){return Object.assign.apply(Object,[{}].concat(_toConsumableArray(filteredProps)));}return _emptyProps.emptyProps;}var _default=mergeProps;exports.default=_default;","map":{"version":3,"sources":["mergeProps.ts"],"names":["filteredProps","props","isNotEmpty","Object","emptyProps","mergeProps"],"mappings":"wKAAA,GAAA,CAAA,WAAA,CAAA,OAAA,gBAAA,CAEA,QAAA,CAAA,UAAA,CAAA,KAAA,CAA8E,CAC5E,GAAMA,CAAAA,aAAa,CAAGC,KAAK,CAALA,MAAAA,CAAaC,WAAAA,CAAnC,UAAsBD,CAAtB,CACA,GAAID,aAAa,CAAjB,MAAA,CAA0B,CACxB,MAAOG,CAAAA,MAAM,CAANA,MAAAA,OAAAA,MAAM,EAANA,EAAM,4BAAb,aAAa,GAAb,CACD,CACD,MAAOC,CAAAA,WAAAA,CAAP,UAAA,CACD,C,aAEcC,U","sourcesContent":["import { emptyProps, isNotEmpty } from './emptyProps';\n\nfunction mergeProps<T extends Record<string, any>>(props: Array<T | null>): T {\n  const filteredProps = props.filter(isNotEmpty);\n  if (filteredProps.length) {\n    return Object.assign({}, ...filteredProps);\n  }\n  return emptyProps as unknown as T;\n}\n\nexport default mergeProps;\n"]},"metadata":{},"sourceType":"script"}