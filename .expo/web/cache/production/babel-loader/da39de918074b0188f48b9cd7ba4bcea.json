{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _pick=_interopRequireDefault(require(\"ramda/src/pick\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var extractProps=(0,_pick.default)(['resizeMode','tintColor','overlayColor']);function mapObjectFit(objectFit){var resizeMode;switch(objectFit){case'contain':case'cover':resizeMode=objectFit;break;case'fill':resizeMode='stretch';break;case'scale-down':resizeMode='contain';break;default:return null;}return{resizeMode:resizeMode};}function extractImageStyleProps(style,objectFit){var resizeModeFromFit=objectFit?mapObjectFit(objectFit):null;return _objectSpread(_objectSpread({},extractProps(style)),resizeModeFromFit);}var _default=extractImageStyleProps;exports.default=_default;","map":{"version":3,"sources":["extractImageStyleProps.ts"],"names":["extractProps","resizeMode","resizeModeFromFit","objectFit","mapObjectFit","extractImageStyleProps"],"mappings":"g8BAGA,GAAA,CAAA,KAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA,C,mFAEA,GAAMA,CAAAA,YAAY,CAAG,CAAA,EAAA,KAAA,CAAA,OAAA,EAAuB,CAAA,YAAA,CAAA,WAAA,CAA5C,cAA4C,CAAvB,CAArB,CAMA,QAAA,CAAA,YAAA,CAAA,SAAA,CAA8D,CAC5D,GAAA,CAAA,UAAA,CACA,OAAA,SAAA,EACE,IAAA,SAAA,CACA,IAAA,OAAA,CACEC,UAAU,CAAVA,SAAAA,CACA,MACF,IAAA,MAAA,CACEA,UAAU,CAAVA,SAAAA,CACA,MACF,IAAA,YAAA,CACEA,UAAU,CAAVA,SAAAA,CACA,MACF,QACE,MAAA,KAAA,CAZJ,CAcA,MAAO,CAAEA,UAAAA,CAAAA,UAAF,CAAP,CACD,CAED,QAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,SAAA,CAGE,CACA,GAAMC,CAAAA,iBAAiB,CAAGC,SAAS,CAAGC,YAAY,CAAf,SAAe,CAAf,CAAnC,IAAA,CACA,sCACKJ,YAAY,CADV,KACU,CADjB,EAEKE,iBAFL,EAID,C,aAEcG,sB","sourcesContent":["import { ImageStyle } from 'react-native';\nimport { WebBlockStyles } from '@native-html/transient-render-engine';\n\nimport pick from 'ramda/src/pick';\n\nconst extractProps = pick<keyof ImageStyle>([\n  'resizeMode',\n  'tintColor',\n  'overlayColor'\n]);\n\nfunction mapObjectFit(objectFit: WebBlockStyles['objectFit']) {\n  let resizeMode: ImageStyle['resizeMode'];\n  switch (objectFit) {\n    case 'contain':\n    case 'cover':\n      resizeMode = objectFit;\n      break;\n    case 'fill':\n      resizeMode = 'stretch';\n      break;\n    case 'scale-down':\n      resizeMode = 'contain';\n      break;\n    default:\n      return null;\n  }\n  return { resizeMode };\n}\n\nfunction extractImageStyleProps(\n  style: any,\n  objectFit?: WebBlockStyles['objectFit']\n) {\n  const resizeModeFromFit = objectFit ? mapObjectFit(objectFit) : null;\n  return {\n    ...extractProps(style),\n    ...resizeModeFromFit\n  };\n}\n\nexport default extractImageStyleProps;\n"]},"metadata":{},"sourceType":"script"}