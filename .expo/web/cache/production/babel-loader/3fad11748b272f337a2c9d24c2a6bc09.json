{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=getCollapsedMarginTop;function getCollapsedMarginTop(precedent,current){var topMostMarginBottom=typeof precedent.styles.nativeBlockRet.marginBottom==='number'?precedent.styles.nativeBlockRet.marginBottom:null;var bottomMostMarginTop=typeof current.styles.nativeBlockRet.marginTop==='number'?current.styles.nativeBlockRet.marginTop:null;if(topMostMarginBottom==null||bottomMostMarginTop==null){return null;}if(topMostMarginBottom<0&&bottomMostMarginTop<0){return Math.min(topMostMarginBottom,bottomMostMarginTop)-topMostMarginBottom;}if(topMostMarginBottom<0||bottomMostMarginTop<0){return topMostMarginBottom+bottomMostMarginTop-topMostMarginBottom;}if(topMostMarginBottom>bottomMostMarginTop){return 0;}return bottomMostMarginTop-topMostMarginBottom;}","map":{"version":3,"sources":["getCollapsedMarginTop.ts"],"names":["topMostMarginBottom","precedent","bottomMostMarginTop","current","Math"],"mappings":"4GAYe,QAAA,CAAA,qBAAA,CAAA,SAAA,CAAA,OAAA,CAGE,CACf,GAAMA,CAAAA,mBAAmB,CACvB,MAAOC,CAAAA,SAAS,CAATA,MAAAA,CAAAA,cAAAA,CAAP,YAAA,GAAA,QAAA,CACIA,SAAS,CAATA,MAAAA,CAAAA,cAAAA,CADJ,YAAA,CADF,IAAA,CAIA,GAAMC,CAAAA,mBAAmB,CACvB,MAAOC,CAAAA,OAAO,CAAPA,MAAAA,CAAAA,cAAAA,CAAP,SAAA,GAAA,QAAA,CACIA,OAAO,CAAPA,MAAAA,CAAAA,cAAAA,CADJ,SAAA,CADF,IAAA,CAIA,GAAIH,mBAAmB,EAAnBA,IAAAA,EAA+BE,mBAAmB,EAAtD,IAAA,CAAgE,CAC9D,MAAA,KAAA,CACD,CACD,GAAIF,mBAAmB,CAAnBA,CAAAA,EAA2BE,mBAAmB,CAAlD,CAAA,CAAwD,CACtD,MACEE,CAAAA,IAAI,CAAJA,GAAAA,CAAAA,mBAAAA,CAAAA,mBAAAA,EADF,mBAAA,CAGD,CACD,GAAIJ,mBAAmB,CAAnBA,CAAAA,EAA2BE,mBAAmB,CAAlD,CAAA,CAAwD,CACtD,MAAOF,CAAAA,mBAAmB,CAAnBA,mBAAAA,CAAP,mBAAA,CACD,CACD,GAAIA,mBAAmB,CAAvB,mBAAA,CAA+C,CAC7C,MAAA,EAAA,CACD,CACD,MAAOE,CAAAA,mBAAmB,CAA1B,mBAAA,CACD","sourcesContent":["import { TNode } from '@native-html/transient-render-engine';\n\n/**\n * Compute a TNode top margin to satisfy requirements expressed in CSS\n * standard regarding margin collapsing.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing\n * for a reference.\n *\n * @param precedent - The node above the one for which we need to compute top margin.\n * @param current - The node for which a margin top might collapse.\n */\nexport default function getCollapsedMarginTop(\n  precedent: TNode,\n  current: TNode\n): null | number {\n  const topMostMarginBottom =\n    typeof precedent.styles.nativeBlockRet.marginBottom === 'number'\n      ? precedent.styles.nativeBlockRet.marginBottom\n      : null;\n  const bottomMostMarginTop =\n    typeof current.styles.nativeBlockRet.marginTop === 'number'\n      ? current.styles.nativeBlockRet.marginTop\n      : null;\n  if (topMostMarginBottom == null || bottomMostMarginTop == null) {\n    return null;\n  }\n  if (topMostMarginBottom < 0 && bottomMostMarginTop < 0) {\n    return (\n      Math.min(topMostMarginBottom, bottomMostMarginTop) - topMostMarginBottom\n    );\n  }\n  if (topMostMarginBottom < 0 || bottomMostMarginTop < 0) {\n    return topMostMarginBottom + bottomMostMarginTop - topMostMarginBottom;\n  }\n  if (topMostMarginBottom > bottomMostMarginTop) {\n    return 0;\n  }\n  return bottomMostMarginTop - topMostMarginBottom;\n}\n"]},"metadata":{},"sourceType":"script"}