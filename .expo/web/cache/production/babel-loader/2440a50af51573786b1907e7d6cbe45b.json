{"ast":null,"code":"\"use strict\";var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}Object.defineProperty(exports,\"__esModule\",{value:true});exports.LongSizeCSSPropertyValidator=void 0;var _LongCSSPropertyValidator=require(\"./LongCSSPropertyValidator\");var LongSizeCSSPropertyValidator=function(_LongCSSPropertyValid){_inherits(LongSizeCSSPropertyValidator,_LongCSSPropertyValid);var _super=_createSuper(LongSizeCSSPropertyValidator);function LongSizeCSSPropertyValidator(){_classCallCheck(this,LongSizeCSSPropertyValidator);return _super.apply(this,arguments);}_createClass(LongSizeCSSPropertyValidator,[{key:\"computeSize\",value:function computeSize(value,unit){switch(unit){case'%':return value+\"%\";case'px':return value;case'cm':case'in':case'mm':case'pc':case'pt':return value*this.config.absoluteLengthUnitsMultiplicators[unit];case'em':return this.computeEmSize(value);case'ex':return this.computeEmSize(value*0.63);case'rem':return this.config.rootFontSize*value;}return null;}},{key:\"computeEmSize\",value:function computeEmSize(value){return this.config.rootFontSize*value;}},{key:\"splitValueAndUnit\",value:function splitValueAndUnit(value){var match=/^(\\d*\\.?\\d*)\\s*(cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|%)$/g.exec(value);if(match===null){return null;}return[Number(match[1]),match[2]];}},{key:\"normalizeRawInlineCSSValue\",value:function normalizeRawInlineCSSValue(value){if(value==='0'){return 0;}if(value==='auto'){return value;}var split=this.splitValueAndUnit(value);if(split){return this.computeSize(split[0],split[1]);}return null;}},{key:\"normalizeNativeValue\",value:function normalizeNativeValue(value){return this.normalizeInlineCSSValue(value);}}]);return LongSizeCSSPropertyValidator;}(_LongCSSPropertyValidator.LongCSSPropertyValidator);exports.LongSizeCSSPropertyValidator=LongSizeCSSPropertyValidator;","map":{"version":3,"sources":["LongSizeCSSPropertyValidator.ts"],"names":["LongCSSPropertyValidator","computeSize","value","computeEmSize","splitValueAndUnit","match","Number","normalizeRawInlineCSSValue","split","normalizeNativeValue"],"mappings":"ioCACA,GAAA,CAAA,yBAAA,CAAA,OAAA,8BAAA,C,GAGO,CAAA,4B,yVAGKC,qBAAW,KAAXA,CAAW,IAAXA,CAGgB,CACxB,OAAA,IAAA,EACE,IAAA,GAAA,CACE,MAAA,CAAA,KAAA,KACF,IAAA,IAAA,CACE,MAAA,CAAA,KAAA,CACF,IAAA,IAAA,CACA,IAAA,IAAA,CACA,IAAA,IAAA,CACA,IAAA,IAAA,CACA,IAAA,IAAA,CACE,MAAOC,CAAAA,KAAK,CAAG,KAAA,MAAA,CAAA,iCAAA,CAAf,IAAe,CAAf,CACF,IAAA,IAAA,CACE,MAAO,MAAA,aAAA,CAAP,KAAO,CAAP,CACF,IAAA,IAAA,CAEE,MAAO,MAAA,aAAA,CAAmBA,KAAK,CAA/B,IAAO,CAAP,CACF,IAAA,KAAA,CACE,MAAO,MAAA,MAAA,CAAA,YAAA,CAAP,KAAA,CAjBJ,CAmBA,MAAA,KAAA,CACD,C,6BAESC,uBAAa,KAAbA,CAA6B,CACrC,MAAO,MAAA,MAAA,CAAA,YAAA,CAAP,KAAA,CACD,C,iCAESC,2BAAiB,KAAjBA,CAAiE,CACzE,GAAMC,CAAAA,KAAK,CACT,sEAAA,IAAA,CADF,KACE,CADF,CAIA,GAAIA,KAAK,GAAT,IAAA,CAAoB,CAClB,MAAA,KAAA,CACD,CACD,MAAO,CAACC,MAAM,CAACD,KAAK,CAAb,CAAa,CAAN,CAAP,CAAmBA,KAAK,CAA/B,CAA+B,CAAxB,CAAP,CACD,C,0CAEDE,oCAA0B,KAA1BA,CAA0C,CACxC,GAAIL,KAAK,GAAT,GAAA,CAAmB,CACjB,MAAA,EAAA,CACD,CACD,GAAIA,KAAK,GAAT,MAAA,CAAsB,CACpB,MAAA,CAAA,KAAA,CACD,CACD,GAAMM,CAAAA,KAAK,CAAG,KAAA,iBAAA,CAAd,KAAc,CAAd,CACA,GAAA,KAAA,CAAW,CACT,MAAO,MAAA,WAAA,CAAiBA,KAAK,CAAtB,CAAsB,CAAtB,CAA2BA,KAAK,CAAvC,CAAuC,CAAhC,CAAP,CACD,CACD,MAAA,KAAA,CACD,C,oCAEDC,8BAAoB,KAApBA,CAA6C,CAC3C,MAAO,MAAA,uBAAA,CAAP,KAAO,CAAP,CACD,C,0CA1DOT,yBAAAA,CAFH,wB","sourcesContent":["import { CSSLengthUnit } from '../config';\nimport { LongCSSPropertyValidator } from './LongCSSPropertyValidator';\nimport { CSSPropertyModel } from './types';\n\nexport class LongSizeCSSPropertyValidator<\n  C extends CSSPropertyModel\n> extends LongCSSPropertyValidator<C, number | string> {\n  protected computeSize(\n    value: number,\n    unit: CSSLengthUnit\n  ): number | string | null {\n    switch (unit) {\n      case '%':\n        return `${value}%`;\n      case 'px':\n        return value;\n      case 'cm':\n      case 'in':\n      case 'mm':\n      case 'pc':\n      case 'pt':\n        return value * this.config.absoluteLengthUnitsMultiplicators[unit];\n      case 'em':\n        return this.computeEmSize(value);\n      case 'ex':\n        // This is an approximation.\n        return this.computeEmSize(value * 0.63);\n      case 'rem':\n        return this.config.rootFontSize * value;\n    }\n    return null;\n  }\n\n  protected computeEmSize(value: number) {\n    return this.config.rootFontSize * value;\n  }\n\n  protected splitValueAndUnit(value: string): [number, CSSLengthUnit] | null {\n    const match =\n      /^(\\d*\\.?\\d*)\\s*(cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|%)$/g.exec(\n        value\n      );\n    if (match === null) {\n      return null;\n    }\n    return [Number(match[1]), match[2] as CSSLengthUnit];\n  }\n\n  normalizeRawInlineCSSValue(value: string) {\n    if (value === '0') {\n      return 0;\n    }\n    if (value === 'auto') {\n      return value;\n    }\n    const split = this.splitValueAndUnit(value);\n    if (split) {\n      return this.computeSize(split[0], split[1]);\n    }\n    return null;\n  }\n\n  normalizeNativeValue(value: string | number) {\n    return this.normalizeInlineCSSValue(value);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}