{"ast":null,"code":"import AsyncStorage from\"./AsyncStorage\";export function useAsyncStorage(key){return{getItem:function getItem(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return AsyncStorage.getItem.apply(AsyncStorage,[key].concat(args));},setItem:function setItem(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}return AsyncStorage.setItem.apply(AsyncStorage,[key].concat(args));},mergeItem:function mergeItem(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}return AsyncStorage.mergeItem.apply(AsyncStorage,[key].concat(args));},removeItem:function removeItem(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}return AsyncStorage.removeItem.apply(AsyncStorage,[key].concat(args));}};}","map":{"version":3,"sources":["hooks.js"],"names":["getItem","AsyncStorage","setItem","mergeItem","removeItem"],"mappings":"AAKA,MAAA,CAAA,YAAA,sBAiBA,MAAO,SAAA,CAAA,eAAA,CAAA,GAAA,CAAwD,CAC7D,MAAO,CACLA,OAAO,CAAE,iDAAA,IAAA,0CAAA,IAAA,8BAAaC,CAAAA,YAAY,CAAZA,OAAAA,OAAAA,YAAY,EAAZA,GAAY,SAD7B,IAC6B,EAAzB,EADJ,CAELC,OAAO,CAAE,kDAAA,IAAA,+CAAA,IAAA,gCAAaD,CAAAA,YAAY,CAAZA,OAAAA,OAAAA,YAAY,EAAZA,GAAY,SAF7B,IAE6B,EAAzB,EAFJ,CAGLE,SAAS,CAAE,oDAAA,IAAA,+CAAA,IAAA,gCAAaF,CAAAA,YAAY,CAAZA,SAAAA,OAAAA,YAAY,EAAZA,GAAY,SAH/B,IAG+B,EAAzB,EAHN,CAILG,UAAU,CAAE,qDAAA,IAAA,+CAAA,IAAA,gCAAaH,CAAAA,YAAY,CAAZA,UAAAA,OAAAA,YAAY,EAAZA,GAAY,SAAZA,IAAY,EAAzB,EAJP,CAAP,CAMD","sourcesContent":["/**\n * @format\n * @flow\n */\n\nimport AsyncStorage from './AsyncStorage';\n\ntype AsyncStorageHook = {\n  getItem: (\n    callback?: ?(error: ?Error, result: string | null) => void,\n  ) => Promise<string | null>,\n  setItem: (\n    value: string,\n    callback?: ?(error: ?Error) => void,\n  ) => Promise<null>,\n  mergeItem: (\n    value: string,\n    callback?: ?(error: ?Error) => void,\n  ) => Promise<null>,\n  removeItem: (callback?: ?(error: ?Error) => void) => Promise<null>,\n};\n\nexport function useAsyncStorage(key: string): AsyncStorageHook {\n  return {\n    getItem: (...args) => AsyncStorage.getItem(key, ...args),\n    setItem: (...args) => AsyncStorage.setItem(key, ...args),\n    mergeItem: (...args) => AsyncStorage.mergeItem(key, ...args),\n    removeItem: (...args) => AsyncStorage.removeItem(key, ...args),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}