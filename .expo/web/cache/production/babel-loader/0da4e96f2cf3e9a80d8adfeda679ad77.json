{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useMemo}from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import MarkerBox from\"./MarkerBox\";var defaultRenderMarker=function defaultRenderMarker(props){return React.createElement(MarkerBox,props);};var defaultComputeMarkerBoxWidth=function defaultComputeMarkerBoxWidth(maxNumOfCodepoints,fontSize){return maxNumOfCodepoints*fontSize*0.6;};var DEFAULT_FONT_SIZE=14;export default function useMarkedList(_ref){var counterRenderer=_ref.counterRenderer,_ref$startIndex=_ref.startIndex,startIndex=_ref$startIndex===void 0?1:_ref$startIndex,lineStyle=_ref.lineStyle,_ref$rtlLineReversed=_ref.rtlLineReversed,rtlLineReversed=_ref$rtlLineReversed===void 0?false:_ref$rtlLineReversed,_ref$rtlMarkerReverse=_ref.rtlMarkerReversed,rtlMarkerReversed=_ref$rtlMarkerReverse===void 0?false:_ref$rtlMarkerReverse,markerTextStyle=_ref.markerTextStyle,markerBoxStyle=_ref.markerBoxStyle,_ref$dynamicMarkerBox=_ref.dynamicMarkerBoxWidth,dynamicMarkerBoxWidth=_ref$dynamicMarkerBox===void 0?true:_ref$dynamicMarkerBox,_ref$length=_ref.length,length=_ref$length===void 0?0:_ref$length,_ref$renderMarker=_ref.renderMarker,renderMarker=_ref$renderMarker===void 0?defaultRenderMarker:_ref$renderMarker,_ref$enableMarkerClip=_ref.enableMarkerClipping,enableMarkerClipping=_ref$enableMarkerClip===void 0?false:_ref$enableMarkerClip,_ref$computeMarkerBox=_ref.computeMarkerBoxWidth,computeMarkerBoxWidth=_ref$computeMarkerBox===void 0?defaultComputeMarkerBoxWidth:_ref$computeMarkerBox;var maxNumOfCodepoints=useMemo(function(){return counterRenderer.maxMarkerLenInRange(startIndex,startIndex+length-1);},[counterRenderer,length,startIndex]);var syntheticRtlLineReversed=!I18nManager.isRTL&&rtlLineReversed;var markerTextWidth=useMemo(function(){var _markerTextStyle$font;return dynamicMarkerBoxWidth&&computeMarkerBoxWidth(maxNumOfCodepoints,(_markerTextStyle$font=markerTextStyle===null||markerTextStyle===void 0?void 0:markerTextStyle.fontSize)!==null&&_markerTextStyle$font!==void 0?_markerTextStyle$font:DEFAULT_FONT_SIZE);},[computeMarkerBoxWidth,markerTextStyle===null||markerTextStyle===void 0?void 0:markerTextStyle.fontSize,maxNumOfCodepoints,dynamicMarkerBoxWidth]);var renderer=useMemo(function(){return rtlMarkerReversed?counterRenderer.withRtl(rtlMarkerReversed===true?undefined:rtlMarkerReversed):counterRenderer;},[counterRenderer,rtlMarkerReversed]);var syntheticMarkerTextStyle=useMemo(function(){return _objectSpread({flexGrow:0,flexShrink:0,fontSize:DEFAULT_FONT_SIZE,textAlign:syntheticRtlLineReversed?'left':'right',alignSelf:syntheticRtlLineReversed?'flex-start':'flex-end'},markerTextStyle);},[markerTextStyle,syntheticRtlLineReversed]);return{maxNumOfCodepoints:maxNumOfCodepoints,rtlMarkerReversed:rtlMarkerReversed,markerTextWidth:markerTextWidth,renderMarker:renderMarker,startIndex:startIndex,rtlLineReversed:syntheticRtlLineReversed,markerTextStyle:syntheticMarkerTextStyle,markerBoxStyle:markerBoxStyle,counterRenderer:renderer,style:lineStyle,enableMarkerClipping:enableMarkerClipping};}","map":{"version":3,"sources":["useMarkedList.ts"],"names":["defaultRenderMarker","props","React","defaultComputeMarkerBoxWidth","maxNumOfCodepoints","DEFAULT_FONT_SIZE","startIndex","rtlLineReversed","rtlMarkerReversed","dynamicMarkerBoxWidth","length","renderMarker","enableMarkerClipping","computeMarkerBoxWidth","useMemo","counterRenderer","syntheticRtlLineReversed","I18nManager","markerTextWidth","markerTextStyle","renderer","syntheticMarkerTextStyle","flexGrow","flexShrink","fontSize","textAlign","alignSelf","markerBoxStyle","style"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { I18nManager } from 'react-native';\nimport MarkerBox from './MarkerBox';\nimport { MarkedListItemProps } from './MarkedListItem';\nimport { MarkedListProps } from './shared-types';\n\nconst defaultRenderMarker: NonNullable<MarkedListProps['renderMarker']> = (\n  props\n) => React.createElement(MarkerBox, props);\n\nconst defaultComputeMarkerBoxWidth: NonNullable<\n  MarkedListProps['computeMarkerBoxWidth']\n> = (maxNumOfCodepoints, fontSize) => maxNumOfCodepoints * fontSize * 0.6;\n\nconst DEFAULT_FONT_SIZE = 14;\n\n/**\n * A hook to reuse MarkedList logic to render custom lists components in\n * combination with {@link MarkedListItem}.\n *\n * @public\n */\nexport default function useMarkedList({\n  counterRenderer,\n  startIndex = 1,\n  lineStyle,\n  rtlLineReversed = false,\n  rtlMarkerReversed = false,\n  markerTextStyle,\n  markerBoxStyle,\n  dynamicMarkerBoxWidth = true,\n  length = 0,\n  renderMarker = defaultRenderMarker,\n  enableMarkerClipping = false,\n  computeMarkerBoxWidth = defaultComputeMarkerBoxWidth\n}: MarkedListProps & { length: number }): Omit<MarkedListItemProps, 'index'> {\n  const maxNumOfCodepoints = useMemo(\n    () =>\n      counterRenderer.maxMarkerLenInRange(startIndex, startIndex + length - 1),\n    [counterRenderer, length, startIndex]\n  );\n  const syntheticRtlLineReversed = !I18nManager.isRTL && rtlLineReversed;\n  const markerTextWidth = useMemo(\n    () =>\n      dynamicMarkerBoxWidth &&\n      computeMarkerBoxWidth(\n        maxNumOfCodepoints,\n        markerTextStyle?.fontSize ?? DEFAULT_FONT_SIZE\n      ),\n    [\n      computeMarkerBoxWidth,\n      markerTextStyle?.fontSize,\n      maxNumOfCodepoints,\n      dynamicMarkerBoxWidth\n    ]\n  );\n  const renderer = useMemo(\n    () =>\n      rtlMarkerReversed\n        ? counterRenderer.withRtl(\n            rtlMarkerReversed === true ? undefined : rtlMarkerReversed\n          )\n        : counterRenderer,\n    [counterRenderer, rtlMarkerReversed]\n  );\n  const syntheticMarkerTextStyle = useMemo(\n    () =>\n      ({\n        flexGrow: 0,\n        flexShrink: 0,\n        fontSize: DEFAULT_FONT_SIZE,\n        textAlign: syntheticRtlLineReversed ? 'left' : 'right',\n        alignSelf: syntheticRtlLineReversed ? 'flex-start' : 'flex-end',\n        ...markerTextStyle\n      } as const),\n    [markerTextStyle, syntheticRtlLineReversed]\n  );\n  return {\n    maxNumOfCodepoints,\n    rtlMarkerReversed,\n    markerTextWidth,\n    renderMarker,\n    startIndex,\n    rtlLineReversed: syntheticRtlLineReversed,\n    markerTextStyle: syntheticMarkerTextStyle,\n    markerBoxStyle: markerBoxStyle as any,\n    counterRenderer: renderer,\n    style: lineStyle,\n    enableMarkerClipping\n  };\n}\n"]},"metadata":{},"sourceType":"module"}