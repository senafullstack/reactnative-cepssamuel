{"ast":null,"code":"import*as React from'react';import DrawerStatusContext from\"./DrawerStatusContext\";export default function useDrawerStatus(){var drawerStatus=React.useContext(DrawerStatusContext);if(drawerStatus===undefined){throw new Error(\"Couldn't find a drawer. Is your component inside a drawer navigator?\");}return drawerStatus;}","map":{"version":3,"sources":["useDrawerStatus.tsx"],"names":["drawerStatus","React"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAEA,MAAA,CAAA,mBAAA,6BAMA,cAAe,SAAA,CAAA,eAAA,EAA2B,CACxC,GAAMA,CAAAA,YAAY,CAAGC,KAAK,CAALA,UAAAA,CAArB,mBAAqBA,CAArB,CAEA,GAAID,YAAY,GAAhB,SAAA,CAAgC,CAC9B,KAAM,IAAA,CAAA,KAAA,CAAN,sEAAM,CAAN,CAGD,CAED,MAAA,CAAA,YAAA,CACD","sourcesContent":["import * as React from 'react';\n\nimport DrawerStatusContext from './DrawerStatusContext';\n\n/**\n * Hook to detect if the drawer's status in a parent navigator.\n * Returns 'open' if the drawer is open, 'closed' if the drawer is closed.\n */\nexport default function useDrawerStatus() {\n  const drawerStatus = React.useContext(DrawerStatusContext);\n\n  if (drawerStatus === undefined) {\n    throw new Error(\n      \"Couldn't find a drawer. Is your component inside a drawer navigator?\"\n    );\n  }\n\n  return drawerStatus;\n}\n"]},"metadata":{},"sourceType":"module"}