{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useIMGNormalizedSource;var _react=require(\"react\");var _SharedPropsProvider=require(\"../context/SharedPropsProvider\");function useIMGNormalizedSource(_ref){var source=_ref.source,specifiedDimensions=_ref.specifiedDimensions;var cachedDimensions=(0,_react.useRef)(specifiedDimensions);var _ref2=(0,_SharedPropsProvider.useSharedProps)(),provideEmbeddedHeaders=_ref2.provideEmbeddedHeaders;return(0,_react.useMemo)(function(){if(source.uri&&typeof provideEmbeddedHeaders==='function'){var _cachedDimensions$cur,_cachedDimensions$cur2;var headers=provideEmbeddedHeaders(source.uri,'img',{printWidth:((_cachedDimensions$cur=cachedDimensions.current)===null||_cachedDimensions$cur===void 0?void 0:_cachedDimensions$cur.width)||undefined,printHeight:((_cachedDimensions$cur2=cachedDimensions.current)===null||_cachedDimensions$cur2===void 0?void 0:_cachedDimensions$cur2.height)||undefined});if(headers){return _objectSpread({headers:headers},source);}}return source;},[provideEmbeddedHeaders,source]);}","map":{"version":3,"sources":["useIMGNormalizedSource.ts"],"names":["specifiedDimensions","cachedDimensions","provideEmbeddedHeaders","source","headers","printWidth","printHeight","undefined"],"mappings":"g9BAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,oBAAA,CAAA,OAAA,kCAAA,CAMe,QAAA,CAAA,sBAAA,MAKZ,IAL4C,CAAA,MAK5C,MAL4C,MAK5C,CAHDA,mBAGC,MAHDA,mBAGC,CACD,GAAMC,CAAAA,gBAAgB,CAAG,CAAA,EAAA,MAAA,CAAA,MAAA,EAAzB,mBAAyB,CAAzB,CACA,UAAmC,CAAA,EAAA,oBAAA,CAAnC,cAAmC,GAAnC,CAAQC,sBAAR,OAAQA,sBAAR,CACA,MAAO,CAAA,EAAA,MAAA,CAAA,OAAA,EAAQ,UAAM,CACnB,GAAIC,MAAM,CAANA,GAAAA,EAAc,MAAA,CAAA,sBAAA,GAAlB,UAAA,CAAgE,CAAA,GAAA,CAAA,qBAAA,CAAA,sBAAA,CAC9D,GAAMC,CAAAA,OAAO,CAAGF,sBAAsB,CAACC,MAAM,CAAP,GAAA,CAAA,KAAA,CAAoB,CACxDE,UAAU,CAAE,CAAA,CAAA,qBAAA,CAAA,gBAAgB,CAAhB,OAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,KAAA,GAD4C,SAAA,CAExDC,WAAW,CAAE,CAAA,CAAA,sBAAA,CAAA,gBAAgB,CAAhB,OAAA,IAAA,IAAA,EAAA,sBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,sBAAA,CAAA,MAAA,GAAoCC,SAFO,CAApB,CAAtC,CAIA,GAAA,OAAA,CAAa,CACX,sBACEH,OADK,CACLA,OADF,EAEKD,MAFL,EAID,CACF,CACD,MAAA,CAAA,MAAA,CAbK,CAAA,CAcJ,CAAA,sBAAA,CAdH,MAcG,CAdI,CAAP,CAeD","sourcesContent":["import { useMemo, useRef } from 'react';\nimport { useSharedProps } from '../context/SharedPropsProvider';\nimport {\n  IncompleteImageDimensions,\n  UseIMGElementStateProps\n} from './img-types';\n\nexport default function useIMGNormalizedSource({\n  source,\n  specifiedDimensions\n}: Pick<UseIMGElementStateProps, 'source'> & {\n  specifiedDimensions: IncompleteImageDimensions;\n}) {\n  const cachedDimensions = useRef(specifiedDimensions);\n  const { provideEmbeddedHeaders } = useSharedProps();\n  return useMemo(() => {\n    if (source.uri && typeof provideEmbeddedHeaders === 'function') {\n      const headers = provideEmbeddedHeaders(source.uri, 'img', {\n        printWidth: cachedDimensions.current?.width || undefined,\n        printHeight: cachedDimensions.current?.height || undefined\n      });\n      if (headers) {\n        return {\n          headers,\n          ...source\n        };\n      }\n    }\n    return source;\n  }, [provideEmbeddedHeaders, source]);\n}\n"]},"metadata":{},"sourceType":"script"}