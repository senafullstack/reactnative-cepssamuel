{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}Object.defineProperty(exports,\"__esModule\",{value:true});exports.ShortFlexCSSPropertyValidator=void 0;var _ShortMergeRequest=require(\"../ShortMergeRequest\");var _expandCSSToRN=_interopRequireDefault(require(\"./expandCSSToRN\"));var _ShortCSSPropertyValidator=require(\"./ShortCSSPropertyValidator\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var ShortFlexCSSPropertyValidator=function(_ShortCSSPropertyVali){_inherits(ShortFlexCSSPropertyValidator,_ShortCSSPropertyVali);var _super=_createSuper(ShortFlexCSSPropertyValidator);function ShortFlexCSSPropertyValidator(params){_classCallCheck(this,ShortFlexCSSPropertyValidator);return _super.call(this,_objectSpread(_objectSpread({},params),{},{propertyName:'flex'}));}_createClass(ShortFlexCSSPropertyValidator,[{key:\"normalizeInlineCSSValue\",value:function normalizeInlineCSSValue(value){return new _ShortMergeRequest.ShortMergeRequest((0,_expandCSSToRN.default)(this.propertyName,value));}},{key:\"normalizeNativeValue\",value:function normalizeNativeValue(value){return value;}}]);return ShortFlexCSSPropertyValidator;}(_ShortCSSPropertyValidator.ShortCSSPropertyValidator);exports.ShortFlexCSSPropertyValidator=ShortFlexCSSPropertyValidator;","map":{"version":3,"sources":["ShortFlexCSSPropertyValidator.ts"],"names":["ShortCSSPropertyValidator","constructor","propertyName","normalizeInlineCSSValue","ShortMergeRequest","normalizeNativeValue"],"mappings":"q+DAAA,GAAA,CAAA,kBAAA,CAAA,OAAA,wBAAA,CACA,GAAA,CAAA,cAAA,CAAA,sBAAA,CAAA,OAAA,mBAAA,CAAA,CACA,GAAA,CAAA,0BAAA,CAAA,OAAA,+BAAA,C,sFAQO,CAAA,6B,uJAILC,uCAAW,MAAXA,CAAkE,4GAC1D,MAD0D,MAC7CC,YAAY,CAAE,MAD+B,IAEjE,C,iFAEDC,iCAAuB,KAAvBA,CAAuC,CACrC,MAAO,IAAIC,CAAAA,kBAAAA,CAAJ,iBAAA,CAAsB,CAAA,EAAA,cAAA,CAAA,OAAA,EAAc,KAAd,YAAA,CAA7B,KAA6B,CAAtB,CAAP,CACD,C,oCAYDC,8BAAoB,KAApBA,CAAoC,CAClC,MAAA,CAAA,KAAA,CACD,C,2CAxBgDL,0BAAAA,CAA5C,yB","sourcesContent":["import { ShortMergeRequest } from '../ShortMergeRequest';\nimport expandCSSToRN from './expandCSSToRN';\nimport { ShortCSSPropertyValidator } from './ShortCSSPropertyValidator';\nimport { CSSPropertyValidatorParams, CSSPropertyModel } from './types';\n\n/**\n * Flex shorthand property in CSS and React Native differ significantly. This\n * validator must therefore expand this shorthand in a way consistent with the\n * specs for both platforms (native and CSS).\n */\nexport class ShortFlexCSSPropertyValidator extends ShortCSSPropertyValidator<\n  CSSPropertyModel,\n  number\n> {\n  constructor(params: CSSPropertyValidatorParams<CSSPropertyModel>) {\n    super({ ...params, propertyName: 'flex' });\n  }\n\n  normalizeInlineCSSValue(value: string) {\n    return new ShortMergeRequest(expandCSSToRN(this.propertyName, value));\n  }\n\n  /**\n   * In React Native, \"flex\" is not a shorthand property, although it looks\n   * like one. There is not always a tuple of (flexGrow, flexShrink,\n   * flexBasis) that maps exactly to one single \"flex\" value.\n   *\n   * For this very reason, it is ill-advised to use \"flex\" shorthand property.\n   * Use the longhand equivalent when that is possible.\n   *\n   * @param value\n   */\n  normalizeNativeValue(value: number) {\n    return value;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}