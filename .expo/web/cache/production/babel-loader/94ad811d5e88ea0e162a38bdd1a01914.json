{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.getIMGState=getIMGState;var _extractImageStyleProps=_interopRequireDefault(require(\"./extractImageStyleProps\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function getIMGState(_ref){var error=_ref.error,alt=_ref.alt,altColor=_ref.altColor,source=_ref.source,containerStyle=_ref.containerStyle,concreteDimensions=_ref.concreteDimensions,initialDimensions=_ref.initialDimensions,objectFit=_ref.objectFit,onError=_ref.onError;if(error){return{type:'error',alt:alt,altColor:altColor,source:source,error:error,containerStyle:containerStyle,dimensions:concreteDimensions!==null&&concreteDimensions!==void 0?concreteDimensions:initialDimensions};}if(concreteDimensions!=null){return{type:'success',alt:alt,altColor:altColor,source:source,onError:onError,containerStyle:containerStyle,imageStyle:(0,_extractImageStyleProps.default)(containerStyle,objectFit),dimensions:concreteDimensions};}return{type:'loading',alt:alt,altColor:altColor,source:source,containerStyle:containerStyle,dimensions:initialDimensions};}","map":{"version":3,"sources":["getIMGState.ts"],"names":["onError","type","alt","altColor","source","error","containerStyle","dimensions","concreteDimensions","initialDimensions","imageStyle"],"mappings":"sGAQA,GAAA,CAAA,uBAAA,CAAA,sBAAA,CAAA,OAAA,4BAAA,CAAA,C,mFAiBO,QAAA,CAAA,WAAA,MAUiC,IAVZ,CAAA,KAUY,MAVZ,KAUY,CAVZ,GAUY,MAVZ,GAUY,CAVZ,QAUY,MAVZ,QAUY,CAVZ,MAUY,MAVZ,MAUY,CAVZ,cAUY,MAVZ,cAUY,CAVZ,kBAUY,MAVZ,kBAUY,CAVZ,iBAUY,MAVZ,iBAUY,CAVZ,SAUY,MAVZ,SAUY,CADtCA,OACsC,MADtCA,OACsC,CACtC,GAAA,KAAA,CAAW,CACT,MAAO,CACLC,IAAI,CADC,OAAA,CAELC,GAFK,CAELA,GAFK,CAGLC,QAHK,CAGLA,QAHK,CAILC,MAJK,CAILA,MAJK,CAKLC,KALK,CAKLA,KALK,CAMLC,cANK,CAMLA,cANK,CAOLC,UAAU,CAAEC,kBAAF,GAAA,IAAEA,EAAAA,kBAAF,GAAA,IAAA,EAAEA,CAAF,kBAAEA,CAAsBC,iBAP7B,CAAP,CASD,CACD,GAAID,kBAAkB,EAAtB,IAAA,CAAgC,CAC9B,MAAO,CACLP,IAAI,CADC,SAAA,CAELC,GAFK,CAELA,GAFK,CAGLC,QAHK,CAGLA,QAHK,CAILC,MAJK,CAILA,MAJK,CAKLJ,OALK,CAKLA,OALK,CAMLM,cANK,CAMLA,cANK,CAOLI,UAAU,CAAE,CAAA,EAAA,uBAAA,CAAA,OAAA,EAAA,cAAA,CAPP,SAOO,CAPP,CAQLH,UAAU,CAAEC,kBARP,CAAP,CAUD,CACD,MAAO,CACLP,IAAI,CADC,SAAA,CAELC,GAFK,CAELA,GAFK,CAGLC,QAHK,CAGLA,QAHK,CAILC,MAJK,CAILA,MAJK,CAKLE,cALK,CAKLA,cALK,CAMLC,UAAU,CAAEE,iBANP,CAAP,CAQD","sourcesContent":["import type {\n  UseIMGElementStateProps,\n  IMGElementState,\n  IMGElementStateBase,\n  IMGElementStateError,\n  IMGElementStateSuccess,\n  IMGElementStateLoading\n} from './img-types';\nimport extractImageStyleProps from './extractImageStyleProps';\nimport { ImageDimensions } from '../shared-types';\n\ninterface GetStateProps<C> extends Omit<IMGElementStateBase, 'dimensions'> {\n  concreteDimensions: C;\n  error: Error | null;\n  initialDimensions: ImageDimensions;\n  objectFit: UseIMGElementStateProps['objectFit'];\n  onError?: (e: Error) => void;\n}\n\nexport function getIMGState(\n  props: GetStateProps<ImageDimensions>\n): IMGElementStateError | IMGElementStateSuccess;\nexport function getIMGState(\n  props: GetStateProps<null | ImageDimensions>\n): IMGElementState;\nexport function getIMGState({\n  error,\n  alt,\n  altColor,\n  source,\n  containerStyle,\n  concreteDimensions,\n  initialDimensions,\n  objectFit,\n  onError\n}: GetStateProps<any>): IMGElementState {\n  if (error) {\n    return {\n      type: 'error',\n      alt,\n      altColor,\n      source,\n      error,\n      containerStyle,\n      dimensions: concreteDimensions ?? initialDimensions\n    };\n  }\n  if (concreteDimensions != null) {\n    return {\n      type: 'success',\n      alt,\n      altColor,\n      source,\n      onError,\n      containerStyle,\n      imageStyle: extractImageStyleProps(containerStyle, objectFit),\n      dimensions: concreteDimensions\n    } as IMGElementStateSuccess;\n  }\n  return {\n    type: 'loading',\n    alt,\n    altColor,\n    source,\n    containerStyle,\n    dimensions: initialDimensions\n  } as IMGElementStateLoading;\n}\n"]},"metadata":{},"sourceType":"script"}