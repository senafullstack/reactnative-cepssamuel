{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=getNativePropsForTNode;var _react=_interopRequireDefault(require(\"react\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var empty={};function getNativePropsForTNode(props){var _tnode$getReactNative,_ref;var tnode=props.tnode,style=props.style,type=props.type,passedNativeProps=props.nativeProps,onPress=props.onPress,overridenChildren=props.children,propsForChildren=props.propsForChildren,viewProps=props.viewProps,textProps=props.textProps,TNodeChildrenRenderer=props.TNodeChildrenRenderer;var children=overridenChildren||(tnode.type==='text'?tnode.data:_react.default.createElement(TNodeChildrenRenderer,{tnode:tnode,propsForChildren:propsForChildren}));var switchProp=type==='block'?viewProps:textProps;var propsFromModel=((_tnode$getReactNative=tnode.getReactNativeProps())===null||_tnode$getReactNative===void 0?void 0:_tnode$getReactNative[type==='block'?'view':'text'])||empty;var syntheticOnPress=(_ref=onPress!==null&&onPress!==void 0?onPress:passedNativeProps===null||passedNativeProps===void 0?void 0:passedNativeProps.onPress)!==null&&_ref!==void 0?_ref:propsFromModel.onPress;var nativeProps=_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},typeof syntheticOnPress==='function'?{accessibilityRole:type==='block'?'button':'link'}:null),propsFromModel),passedNativeProps),switchProp),{},{children:children,onPress:syntheticOnPress,style:[style,passedNativeProps===null||passedNativeProps===void 0?void 0:passedNativeProps.style,switchProp.style],testID:tnode.tagName||undefined});return nativeProps;}","map":{"version":3,"sources":["getNativePropsForTNode.ts"],"names":["empty","nativeProps","children","TNodeChildrenRenderer","overridenChildren","tnode","propsForChildren","switchProp","type","propsFromModel","syntheticOnPress","onPress","passedNativeProps","accessibilityRole","style","testID","undefined"],"mappings":"g9BACA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,mFAIA,GAAMA,CAAAA,KAAU,CAAhB,EAAA,CA2Be,QAAA,CAAA,sBAAA,CAAA,KAAA,CAIwD,CAAA,GAAA,CAAA,qBAAA,CAAA,IAAA,CACrE,GAAM,CAAA,KAAN,CAAA,KAAA,CAAM,KAAN,CAAM,KAAN,CAAA,KAAA,CAAM,KAAN,CAAM,IAAN,CAAA,KAAA,CAAM,IAAN,CAAM,iBAAN,CAAA,KAAA,CAIEC,WAJF,CAAM,OAAN,CAAA,KAAA,CAAM,OAAN,CAAM,iBAAN,CAAA,KAAA,CAMEC,QANF,CAAM,gBAAN,CAAA,KAAA,CAAM,gBAAN,CAAM,SAAN,CAAA,KAAA,CAAM,SAAN,CAAM,SAAN,CAAA,KAAA,CAAM,SAAN,CAUEC,qBAVF,CAAA,KAAA,CAUEA,qBAVF,CAYA,GAAMD,CAAAA,QAAQ,CACZE,iBAAiB,GAChBC,KAAK,CAALA,IAAAA,GAAAA,MAAAA,CACIA,KAAD,CADHA,IAAAA,CAEG,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,qBAAA,CAA2C,CACzCA,KADyC,CACzCA,KADyC,CAEzCC,gBAAAA,CAAAA,gBAFyC,CAA3C,CAHa,CADnB,CAQA,GAAMC,CAAAA,UAAU,CAAGC,IAAI,GAAJA,OAAAA,CAAAA,SAAAA,CAAnB,SAAA,CACA,GAAMC,CAAAA,cAAc,CAClB,CAAA,CAAA,qBAAA,CAAA,KAAK,CAAL,mBAAA,EAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,qBAAA,CAA8BD,IAAI,GAAJA,OAAAA,CAAAA,MAAAA,CAA9B,MAAA,CAAA,GADF,KAAA,CAEA,GAAME,CAAAA,gBAAgB,CAAA,CAAA,IAAA,CACpBC,OADoB,GAAA,IACpBA,EAAAA,OADoB,GAAA,IAAA,EACpBA,CADoB,OACpBA,CAAWC,iBADS,GAAA,IACTA,EAAAA,iBADS,GAAA,IAAA,EACTA,CADS,IAAA,EACTA,CAAAA,iBAAiB,CADR,OAAA,IAAA,IAAA,EAAA,IAAA,GAAA,IAAA,EAAA,CAAA,IAAA,CACqBH,cAAc,CADzD,OAAA,CAEA,GAAMR,CAAAA,WAAkC,0EAClC,MAAA,CAAA,gBAAA,GAAA,UAAA,CACC,CAAEY,iBAAiB,CAAEL,IAAI,GAAJA,OAAAA,CAAAA,QAAAA,CAA8B,MAAnD,CADD,CADqC,IAAH,EAAG,cAAH,EAAG,iBAAH,EAAG,UAAH,MAOtCN,QAPyC,CAOzCA,QAPsC,CAQtCS,OAAO,CARkC,gBAAH,CAStCG,KAAK,CAAE,CAAA,KAAA,CAAQF,iBAAR,GAAA,IAAQA,EAAAA,iBAAR,GAAA,IAAA,EAAQA,CAAR,IAAA,EAAQA,CAAAA,iBAAiB,CAAzB,KAAA,CAAkCL,UAAU,CATV,KASlC,CAT+B,CAUtCQ,MAAM,CAAEV,KAAK,CAALA,OAAAA,EAAiBW,SAVa,EAAxC,CAYA,MAAA,CAAA,WAAA,CACD","sourcesContent":["import { TBlock, TPhrasing, TText } from '@native-html/transient-render-engine';\nimport React from 'react';\nimport { TextProps, ViewProps } from 'react-native';\nimport { TDefaultRendererProps } from '../shared-types';\n\nconst empty: any = {};\n\n/**\n * Extract React Native props for a given {@link TNode}, such as those which\n * would be passed to `Text`, `View` or `GenericPressable` by `TDefaultRenderer`.\n *\n * This helper function is peculiarly useful when one wants a custom renderer\n * which uses a different native component, for example `Animated.Text` instead\n * of default `Text`.\n *\n * @public\n *\n * @example\n *\n * ```tsx\n * import React from 'react';\n * import { Animated } from 'react-native';\n * import { CustomTextualRenderer, getNativePropsForTNode } from 'react-native-render-html';\n *\n * const AnimatedSpanRenderer: CustomTextualRenderer = (props) => {\n *   const nativeProps = getNativePropsForTNode(props);\n *   // This is equivalent to a TDefaultRenderer which `Text` is replaced\n *   // with Animated.Text\n *   return <Animated.Text {...nativeProps} />;\n * }\n * ```\n */\nexport default function getNativePropsForTNode<\n  T extends TPhrasing | TText | TBlock\n>(\n  props: TDefaultRendererProps<T>\n): T extends TBlock ? ViewProps & { onPress?: () => void } : TextProps {\n  const {\n    tnode,\n    style,\n    type,\n    nativeProps: passedNativeProps,\n    onPress,\n    children: overridenChildren,\n    propsForChildren,\n    viewProps,\n    textProps,\n    TNodeChildrenRenderer\n  } = props;\n  const children =\n    overridenChildren ||\n    (tnode.type === 'text'\n      ? (tnode as TText).data\n      : React.createElement(TNodeChildrenRenderer, {\n          tnode,\n          propsForChildren\n        }));\n  const switchProp = type === 'block' ? viewProps : textProps;\n  const propsFromModel =\n    tnode.getReactNativeProps()?.[type === 'block' ? 'view' : 'text'] || empty;\n  const syntheticOnPress =\n    onPress ?? passedNativeProps?.onPress ?? propsFromModel.onPress;\n  const nativeProps: TextProps | ViewProps = {\n    ...(typeof syntheticOnPress === 'function'\n      ? ({ accessibilityRole: type === 'block' ? 'button' : 'link' } as const)\n      : null),\n    ...propsFromModel,\n    ...passedNativeProps,\n    ...switchProp,\n    children,\n    onPress: syntheticOnPress,\n    style: [style, passedNativeProps?.style, switchProp.style],\n    testID: tnode.tagName || undefined\n  };\n  return nativeProps as any;\n}\n"]},"metadata":{},"sourceType":"script"}