{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.TDefaultTextRenderer=exports.TDefaultPhrasingRenderer=exports.TDefaultBlockRenderer=void 0;var _react=_interopRequireWildcard(require(\"react\"));var _SharedPropsProvider=require(\"./context/SharedPropsProvider\");var _useAssembledCommonProps=_interopRequireDefault(require(\"./hooks/useAssembledCommonProps\"));var _TChildrenRendererContext=require(\"./context/TChildrenRendererContext\");var _renderTextualContent=_interopRequireDefault(require(\"./renderTextualContent\"));var _RenderRegistryProvider=require(\"./context/RenderRegistryProvider\");var _renderBlockContent=_interopRequireDefault(require(\"./renderBlockContent\"));var _renderEmptyContent=_interopRequireDefault(require(\"./renderEmptyContent\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var TDefaultBlockRenderer=_renderBlockContent.default.bind(null);exports.TDefaultBlockRenderer=TDefaultBlockRenderer;TDefaultBlockRenderer.displayName='TDefaultBlockRenderer';var TDefaultPhrasingRenderer=_renderTextualContent.default.bind(null);exports.TDefaultPhrasingRenderer=TDefaultPhrasingRenderer;TDefaultPhrasingRenderer.displayName='TDefaultPhrasingRenderer';var TDefaultTextRenderer=_renderTextualContent.default.bind(null);exports.TDefaultTextRenderer=TDefaultTextRenderer;TDefaultTextRenderer.displayName='TDefaultTextRenderer';function isGhostTNode(tnode){return tnode.type==='text'&&(tnode.data===''||tnode.data===' ')||tnode.type==='empty';}var TNodeRenderer=(0,_react.memo)(function MemoizedTNodeRenderer(props){var tnode=props.tnode;var sharedProps=(0,_SharedPropsProvider.useSharedProps)();var renderRegistry=(0,_RenderRegistryProvider.useRendererRegistry)();var TNodeChildrenRenderer=(0,_TChildrenRendererContext.useTNodeChildrenRenderer)();var tnodeProps=_objectSpread(_objectSpread({},props),{},{TNodeChildrenRenderer:TNodeChildrenRenderer,sharedProps:sharedProps});var renderer=tnode.type==='block'||tnode.type==='document'?TDefaultBlockRenderer:tnode.type==='text'?TDefaultTextRenderer:tnode.type==='phrasing'?TDefaultPhrasingRenderer:_renderEmptyContent.default;var _ref=(0,_useAssembledCommonProps.default)(tnodeProps,renderer),assembledProps=_ref.assembledProps,Renderer=_ref.Renderer;switch(tnode.type){case'empty':return(0,_renderEmptyContent.default)(assembledProps);case'text':var InternalTextRenderer=renderRegistry.getInternalTextRenderer(props.tnode.tagName);if(InternalTextRenderer){return _react.default.createElement(InternalTextRenderer,tnodeProps);}if(tnodeProps.tnode.data===''&&tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention){return null;}break;case'phrasing':if(tnodeProps.sharedProps.bypassAnonymousTPhrasingNodes&&tnodeProps.tnode.tagName==null&&tnodeProps.tnode.children.length<=1){return _react.default.createElement(TNodeChildrenRenderer,{tnode:props.tnode});}if(tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention&&tnodeProps.tnode.tagName==null&&tnodeProps.tnode.children.every(isGhostTNode)){return null;}break;}var renderFn=tnode.type==='block'||tnode.type==='document'?_renderBlockContent.default:_renderTextualContent.default;return Renderer===null?renderFn(assembledProps):_react.default.createElement(Renderer,assembledProps);});var defaultProps={propsFromParent:{collapsedMarginTop:null}};TNodeRenderer.defaultProps=defaultProps;var _default=TNodeRenderer;exports.default=_default;","map":{"version":3,"sources":["TNodeRenderer.tsx"],"names":["TDefaultBlockRenderer","renderBlockContent","TDefaultPhrasingRenderer","renderTextualContent","TDefaultTextRenderer","tnode","TNodeRenderer","sharedProps","renderRegistry","TNodeChildrenRenderer","tnodeProps","renderer","renderEmptyContent","Renderer","InternalTextRenderer","props","React","renderFn","defaultProps","propsFromParent","collapsedMarginTop"],"mappings":"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","sourcesContent":["import React, { memo, ReactElement } from 'react';\nimport { TDefaultRenderer, TNodeRendererProps } from './shared-types';\nimport { useSharedProps } from './context/SharedPropsProvider';\nimport {\n  TText,\n  TBlock,\n  TNode,\n  TPhrasing\n} from '@native-html/transient-render-engine';\nimport useAssembledCommonProps from './hooks/useAssembledCommonProps';\nimport { useTNodeChildrenRenderer } from './context/TChildrenRendererContext';\nimport renderTextualContent from './renderTextualContent';\nimport { useRendererRegistry } from './context/RenderRegistryProvider';\nimport renderBlockContent from './renderBlockContent';\nimport renderEmptyContent from './renderEmptyContent';\n\nexport type { TNodeRendererProps } from './shared-types';\n\nconst TDefaultBlockRenderer: TDefaultRenderer<TBlock> =\n  renderBlockContent.bind(null);\n\nTDefaultBlockRenderer.displayName = 'TDefaultBlockRenderer';\n\nconst TDefaultPhrasingRenderer: TDefaultRenderer<TPhrasing> =\n  renderTextualContent.bind(null);\n\nTDefaultPhrasingRenderer.displayName = 'TDefaultPhrasingRenderer';\n\nconst TDefaultTextRenderer: TDefaultRenderer<TText> =\n  renderTextualContent.bind(null);\n\nTDefaultTextRenderer.displayName = 'TDefaultTextRenderer';\n\nfunction isGhostTNode(tnode: TNode) {\n  return (\n    (tnode.type === 'text' && (tnode.data === '' || tnode.data === ' ')) ||\n    tnode.type === 'empty'\n  );\n}\n\n/**\n * A component to render any {@link TNode}.\n */\nconst TNodeRenderer = memo(function MemoizedTNodeRenderer(\n  props: TNodeRendererProps<any>\n): ReactElement | null {\n  const { tnode } = props;\n  const sharedProps = useSharedProps();\n  const renderRegistry = useRendererRegistry();\n  const TNodeChildrenRenderer = useTNodeChildrenRenderer();\n  const tnodeProps = {\n    ...props,\n    TNodeChildrenRenderer,\n    sharedProps\n  };\n  const renderer =\n    tnode.type === 'block' || tnode.type === 'document'\n      ? TDefaultBlockRenderer\n      : tnode.type === 'text'\n      ? TDefaultTextRenderer\n      : tnode.type === 'phrasing'\n      ? TDefaultPhrasingRenderer\n      : renderEmptyContent;\n\n  const { assembledProps, Renderer } = useAssembledCommonProps(\n    tnodeProps,\n    renderer as any\n  );\n  switch (tnode.type) {\n    case 'empty':\n      return renderEmptyContent(assembledProps);\n    case 'text':\n      const InternalTextRenderer = renderRegistry.getInternalTextRenderer(\n        props.tnode.tagName\n      );\n\n      if (InternalTextRenderer) {\n        return React.createElement(InternalTextRenderer, tnodeProps);\n      }\n      // If ghost line prevention is enabled and the text data is empty, render\n      // nothing to avoid React Native painting a 20px height line.\n      // See also https://git.io/JErwX\n      if (\n        tnodeProps.tnode.data === '' &&\n        tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention\n      ) {\n        return null;\n      }\n      break;\n    case 'phrasing':\n      // When a TPhrasing node is anonymous and has only one child, its\n      // rendering amounts to rendering its only child.\n      if (\n        tnodeProps.sharedProps.bypassAnonymousTPhrasingNodes &&\n        tnodeProps.tnode.tagName == null &&\n        tnodeProps.tnode.children.length <= 1\n      ) {\n        return React.createElement(TNodeChildrenRenderer, {\n          tnode: props.tnode\n        });\n      }\n      // If ghost line prevention is enabled and the tnode is an anonymous empty\n      // phrasing node, render nothing to avoid React Native painting a 20px\n      // height line. See also https://git.io/JErwX\n      if (\n        tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention &&\n        tnodeProps.tnode.tagName == null &&\n        tnodeProps.tnode.children.every(isGhostTNode)\n      ) {\n        return null;\n      }\n      break;\n  }\n  const renderFn =\n    tnode.type === 'block' || tnode.type === 'document'\n      ? renderBlockContent\n      : renderTextualContent;\n  return Renderer === null\n    ? renderFn(assembledProps)\n    : React.createElement(Renderer as any, assembledProps);\n});\n\nconst defaultProps: Required<Pick<TNodeRendererProps<any>, 'propsFromParent'>> =\n  {\n    propsFromParent: {\n      collapsedMarginTop: null\n    }\n  };\n\n// @ts-expect-error default props must be defined\nTNodeRenderer.defaultProps = defaultProps;\n\nexport {\n  TDefaultBlockRenderer,\n  TDefaultPhrasingRenderer,\n  TDefaultTextRenderer\n};\n\nexport default TNodeRenderer;\n"]},"metadata":{},"sourceType":"script"}