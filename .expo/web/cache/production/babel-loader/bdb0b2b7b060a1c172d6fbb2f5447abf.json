{"ast":null,"code":"\"use strict\";var _slicedToArray=require(\"@babel/runtime/helpers/slicedToArray\");var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _assertThisInitialized=require(\"@babel/runtime/helpers/assertThisInitialized\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");var _defineProperty2=require(\"@babel/runtime/helpers/defineProperty\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty2(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.CSSNativeParseRun=void 0;var _CSSParseRun=require(\"./CSSParseRun\");var _helpers=require(\"./helpers\");var _ShortMergeRequest=require(\"./ShortMergeRequest\");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var nativeDirectionalStyleKeys={borderBottomEndRadius:'block',borderBottomStartRadius:'block',borderEndColor:'block',borderEndWidth:'block',borderStartColor:'block',borderStartWidth:'block',borderTopEndRadius:'block',borderTopStartRadius:'block',end:'block',marginEnd:'block',marginStart:'block',paddingEnd:'block',paddingStart:'block',start:'block'};var extraLongViewStyles={elevation:'block',overflow:'block',overlayColor:'block',resizeMode:'block',rotation:'block',scaleX:'block',scaleY:'block',shadowColor:'block',shadowOffset:'block',shadowOpacity:'block',shadowRadius:'block',testID:'block',tintColor:'block',transformMatrix:'block',translateX:'block',translateY:'block'};var extraTextStyles={includeFontPadding:'text',textAlignVertical:'text',textShadowColor:'text',textShadowOffset:'text',textShadowRadius:'text',writingDirection:'text'};var extraStylesRegistry=_objectSpread(_objectSpread({},extraTextStyles),extraLongViewStyles);var CSSNativeParseRun=function(_CSSParseRun$CSSParse){_inherits(CSSNativeParseRun,_CSSParseRun$CSSParse);var _super=_createSuper(CSSNativeParseRun);function CSSNativeParseRun(declaration,registry){var _this;_classCallCheck(this,CSSNativeParseRun);_this=_super.call(this,registry);_defineProperty(_assertThisInitialized(_this),\"declaration\",void 0);_this.declaration=declaration;return _this;}_createClass(CSSNativeParseRun,[{key:\"fillProp\",value:function fillProp(key,value){var _this2=this;var validator=this.validationMap.getValidatorForProperty(key);if(validator){var normalizedValue=validator.normalizeNativeValue(value);if(normalizedValue instanceof _ShortMergeRequest.ShortMergeRequest){normalizedValue.forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),innerKey=_ref2[0],innerValue=_ref2[1];_this2.fillProp(innerKey,innerValue);});}else{this.processedProps.withProperty(key,normalizedValue,validator);}}else if((0,_helpers.lookupRecord)(extraStylesRegistry,key)){this.processedProps.withProperty(key,value,{compatCategory:'native',displayCategory:extraStylesRegistry[key],propagationCategory:'retain'});}else if((0,_helpers.lookupRecord)(nativeDirectionalStyleKeys,key)){console.warn(\"Native style property \\\"\"+key+\"\\\" is a directional style property. These are not yet supported.\");}else{console.warn(\"Native style property \\\"\"+key+\"\\\" is not supported and has been ignored.\");}}},{key:\"fillProcessedProps\",value:function fillProcessedProps(){var declaration=this.declaration;for(var _i=0,_Object$keys=Object.keys(declaration);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];this.fillProp(key,this.declaration[key]);}}}]);return CSSNativeParseRun;}(_CSSParseRun.CSSParseRun);exports.CSSNativeParseRun=CSSNativeParseRun;","map":{"version":3,"sources":["CSSNativeParseRun.ts"],"names":["nativeDirectionalStyleKeys","borderBottomEndRadius","borderBottomStartRadius","borderEndColor","borderEndWidth","borderStartColor","borderStartWidth","borderTopEndRadius","borderTopStartRadius","end","marginEnd","marginStart","paddingEnd","paddingStart","start","extraLongViewStyles","elevation","overflow","overlayColor","resizeMode","rotation","scaleX","scaleY","shadowColor","shadowOffset","shadowOpacity","shadowRadius","testID","tintColor","transformMatrix","translateX","translateY","extraTextStyles","includeFontPadding","textAlignVertical","textShadowColor","textShadowOffset","textShadowRadius","writingDirection","extraStylesRegistry","CSSParseRun","constructor","fillProp","validator","normalizedValue","ShortMergeRequest","compatCategory","displayCategory","propagationCategory","console","fillProcessedProps","declaration","key","Object"],"mappings":"inEAAA,GAAA,CAAA,YAAA,CAAA,OAAA,iBAAA,CAGA,GAAA,CAAA,QAAA,CAAA,OAAA,aAAA,CAOA,GAAA,CAAA,kBAAA,CAAA,OAAA,uBAAA,C,sLAEA,GAAMA,CAAAA,0BAAuE,CAC3E,CACEC,qBAAqB,CADvB,OAAA,CAEEC,uBAAuB,CAFzB,OAAA,CAGEC,cAAc,CAHhB,OAAA,CAIEC,cAAc,CAJhB,OAAA,CAKEC,gBAAgB,CALlB,OAAA,CAMEC,gBAAgB,CANlB,OAAA,CAOEC,kBAAkB,CAPpB,OAAA,CAQEC,oBAAoB,CARtB,OAAA,CASEC,GAAG,CATL,OAAA,CAUEC,SAAS,CAVX,OAAA,CAWEC,WAAW,CAXb,OAAA,CAYEC,UAAU,CAZZ,OAAA,CAaEC,YAAY,CAbd,OAAA,CAcEC,KAAK,CAAE,OAdT,CADF,CAkBA,GAAMC,CAAAA,mBAAkE,CAAG,CACzEC,SAAS,CADgE,OAAA,CAEzEC,QAAQ,CAFiE,OAAA,CAGzEC,YAAY,CAH6D,OAAA,CAIzEC,UAAU,CAJ+D,OAAA,CAKzEC,QAAQ,CALiE,OAAA,CAMzEC,MAAM,CANmE,OAAA,CAOzEC,MAAM,CAPmE,OAAA,CAQzEC,WAAW,CAR8D,OAAA,CASzEC,YAAY,CAT6D,OAAA,CAUzEC,aAAa,CAV4D,OAAA,CAWzEC,YAAY,CAX6D,OAAA,CAYzEC,MAAM,CAZmE,OAAA,CAazEC,SAAS,CAbgE,OAAA,CAczEC,eAAe,CAd0D,OAAA,CAezEC,UAAU,CAf+D,OAAA,CAgBzEC,UAAU,CAAE,OAhB6D,CAA3E,CAmBA,GAAMC,CAAAA,eAA2D,CAAG,CAClEC,kBAAkB,CADgD,MAAA,CAElEC,iBAAiB,CAFiD,MAAA,CAGlEC,eAAe,CAHmD,MAAA,CAIlEC,gBAAgB,CAJkD,MAAA,CAKlEC,gBAAgB,CALkD,MAAA,CAMlEC,gBAAgB,CAAE,MANgD,CAApE,CASA,GAAMC,CAAAA,mBAAmB,gCAAG,eAAH,EAEpBxB,mBAFoB,CAAzB,C,GAKO,CAAA,iB,+HAGL0B,2BAAW,WAAXA,CAAW,QAAXA,CAGE,mDACA,uBAAA,QAAA,EADA,eAAA,+BAAA,aAAA,CAAA,IAAA,EAAA,CAAA,CAEA,MAAA,WAAA,CAAA,WAAA,CAFA,aAGD,C,sDAEOC,kBAAQ,GAARA,CAAQ,KAARA,CAGA,iBACN,GAAMC,CAAAA,SAAS,CAAG,KAAA,aAAA,CAAA,uBAAA,CAAlB,GAAkB,CAAlB,CACA,GAAA,SAAA,CAAe,CACb,GAAMC,CAAAA,eAAe,CAAGD,SAAS,CAATA,oBAAAA,CAAxB,KAAwBA,CAAxB,CACA,GAAIC,eAAe,WAAYC,CAAAA,kBAAAA,CAA/B,iBAAA,CAAkD,CAChDD,eAAe,CAAfA,OAAAA,CAAwB,cAA4B,kCAA3B,QAA2B,UAA5B,UAA4B,UAClD,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,UAAA,EADFA,CAAAA,EADF,CAAA,IAIO,CAEL,KAAA,cAAA,CAAA,YAAA,CAAA,GAAA,CAAA,eAAA,CAAA,SAAA,EAKD,CAbH,CAAA,IAcO,IAAI,CAAA,EAAA,QAAA,CAAA,YAAA,EAAA,mBAAA,CAAJ,GAAI,CAAJ,CAA4C,CACjD,KAAA,cAAA,CAAA,YAAA,CAAA,GAAA,CAAA,KAAA,CAA6C,CAC3CE,cAAc,CAD6B,QAAA,CAE3CC,eAAe,CAAER,mBAAmB,CAFO,GAEP,CAFO,CAG3CS,mBAAmB,CAAE,QAHsB,CAA7C,EADK,CAAA,IAMA,IAAI,CAAA,EAAA,QAAA,CAAA,YAAA,EAAA,0BAAA,CAAJ,GAAI,CAAJ,CAAmD,CACxDC,OAAO,CAAPA,IAAAA,4BAAAA,GAAAA,qEADK,CAAA,IAIA,CACLA,OAAO,CAAPA,IAAAA,4BAAAA,GAAAA,8CAGD,CACF,C,kCAESC,6BAA2B,CACnC,GAAMC,CAAAA,WAAW,CAAG,KAApB,WAAA,CACA,0BAAkBE,MAAM,CAANA,IAAAA,CAAlB,WAAkBA,CAAlB,6BAEG,CAFE,GAAMD,CAAAA,GAAX,iBAAK,CAGH,KAAA,QAAA,CAAA,GAAA,CAAmB,KAAA,WAAA,CAAnB,GAAmB,CAAnB,EACD,CACF,C,+BAtDoCZ,YAAAA,CAAhC,W","sourcesContent":["import { CSSParseRun } from './CSSParseRun';\nimport { MixedStyleDeclaration } from './CSSProcessor';\nimport { CSSPropertiesValidationRegistry } from './CSSPropertiesValidationRegistry';\nimport { lookupRecord } from './helpers';\nimport {\n  ExtraNativeTextStyle,\n  NativeDirectionalStyleKeys,\n  ExtraNativeLongViewStyleKeys\n} from './native-types';\nimport { CSSPropertySpecs } from './processor-types';\nimport { ShortMergeRequest } from './ShortMergeRequest';\n\nconst nativeDirectionalStyleKeys: Record<NativeDirectionalStyleKeys, 'block'> =\n  {\n    borderBottomEndRadius: 'block',\n    borderBottomStartRadius: 'block',\n    borderEndColor: 'block',\n    borderEndWidth: 'block',\n    borderStartColor: 'block',\n    borderStartWidth: 'block',\n    borderTopEndRadius: 'block',\n    borderTopStartRadius: 'block',\n    end: 'block',\n    marginEnd: 'block',\n    marginStart: 'block',\n    paddingEnd: 'block',\n    paddingStart: 'block',\n    start: 'block'\n  };\n\nconst extraLongViewStyles: Record<ExtraNativeLongViewStyleKeys, 'block'> = {\n  elevation: 'block',\n  overflow: 'block',\n  overlayColor: 'block',\n  resizeMode: 'block',\n  rotation: 'block',\n  scaleX: 'block',\n  scaleY: 'block',\n  shadowColor: 'block',\n  shadowOffset: 'block',\n  shadowOpacity: 'block',\n  shadowRadius: 'block',\n  testID: 'block',\n  tintColor: 'block',\n  transformMatrix: 'block',\n  translateX: 'block',\n  translateY: 'block'\n};\n\nconst extraTextStyles: Record<keyof ExtraNativeTextStyle, 'text'> = {\n  includeFontPadding: 'text',\n  textAlignVertical: 'text',\n  textShadowColor: 'text',\n  textShadowOffset: 'text',\n  textShadowRadius: 'text',\n  writingDirection: 'text'\n};\n\nconst extraStylesRegistry = {\n  ...extraTextStyles,\n  ...extraLongViewStyles\n};\n\nexport class CSSNativeParseRun extends CSSParseRun {\n  private declaration: MixedStyleDeclaration;\n\n  constructor(\n    declaration: MixedStyleDeclaration,\n    registry: CSSPropertiesValidationRegistry\n  ) {\n    super(registry);\n    this.declaration = declaration;\n  }\n\n  private fillProp<K extends keyof MixedStyleDeclaration>(\n    key: K,\n    value: any\n  ): void {\n    const validator = this.validationMap.getValidatorForProperty(key);\n    if (validator) {\n      const normalizedValue = validator.normalizeNativeValue(value);\n      if (normalizedValue instanceof ShortMergeRequest) {\n        normalizedValue.forEach(([innerKey, innerValue]) => {\n          this.fillProp(innerKey as any, innerValue);\n        });\n      } else {\n        // assume longhand merge\n        this.processedProps.withProperty(\n          key,\n          normalizedValue,\n          validator as CSSPropertySpecs\n        );\n      }\n    } else if (lookupRecord(extraStylesRegistry, key)) {\n      this.processedProps.withProperty(key, value, {\n        compatCategory: 'native',\n        displayCategory: extraStylesRegistry[key],\n        propagationCategory: 'retain'\n      });\n    } else if (lookupRecord(nativeDirectionalStyleKeys, key)) {\n      console.warn(\n        `Native style property \"${key}\" is a directional style property. These are not yet supported.`\n      );\n    } else {\n      console.warn(\n        `Native style property \"${key}\" is not supported and has been ignored.`\n      );\n    }\n  }\n\n  protected fillProcessedProps(): void {\n    const declaration = this.declaration;\n    for (const key of Object.keys(declaration) as Array<\n      keyof MixedStyleDeclaration\n    >) {\n      this.fillProp(key, this.declaration[key]);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}