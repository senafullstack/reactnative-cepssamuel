{"ast":null,"code":"\"use strict\";var _slicedToArray=require(\"@babel/runtime/helpers/slicedToArray\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useIMGElementState;var _react=require(\"react\");var _reactNative=require(\"react-native-web/dist/index\");var _defaultInitialImageDimensions=_interopRequireDefault(require(\"./defaultInitialImageDimensions\"));var _useIMGNormalizedSource=_interopRequireDefault(require(\"./useIMGNormalizedSource\"));var _useImageConcreteDimensions=_interopRequireDefault(require(\"./useImageConcreteDimensions\"));var _getIMGState=require(\"./getIMGState\");var _useImageSpecifiedDimensions=_interopRequireDefault(require(\"./useImageSpecifiedDimensions\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function getImageSizeAsync(_ref){var uri=_ref.uri,headers=_ref.headers;return new Promise(function(onsuccess,onerror){var onImageDimensionsSuccess=function onImageDimensionsSuccess(width,height){return onsuccess({width:width,height:height});};if(headers){_reactNative.Image.getSizeWithHeaders(uri,headers,onImageDimensionsSuccess,onerror);}else{_reactNative.Image.getSize(uri,onImageDimensionsSuccess,onerror);}});}function useImageNaturalDimensions(props){var source=props.source,cachedNaturalDimensions=props.cachedNaturalDimensions;var _ref2=(0,_react.useState)(cachedNaturalDimensions||null),_ref3=_slicedToArray(_ref2,2),naturalDimensions=_ref3[0],setNaturalDimensions=_ref3[1];var _ref4=cachedNaturalDimensions||{},cachedNaturalWidth=_ref4.width,cachedNaturalHeight=_ref4.height;var _ref5=(0,_react.useState)(null),_ref6=_slicedToArray(_ref5,2),error=_ref6[0],setError=_ref6[1];(0,_react.useEffect)(function resetOnURIChange(){setNaturalDimensions(cachedNaturalWidth!=null&&cachedNaturalHeight!=null?{width:cachedNaturalWidth,height:cachedNaturalHeight}:null);setError(null);},[cachedNaturalHeight,cachedNaturalWidth,source.uri]);return{onNaturalDimensions:setNaturalDimensions,onError:setError,naturalDimensions:naturalDimensions,error:error};}function useFetchedNaturalDimensions(props){var source=props.source,cachedNaturalDimensions=props.cachedNaturalDimensions;var _useImageNaturalDimen=useImageNaturalDimensions(props),error=_useImageNaturalDimen.error,naturalDimensions=_useImageNaturalDimen.naturalDimensions,onError=_useImageNaturalDimen.onError,onNaturalDimensions=_useImageNaturalDimen.onNaturalDimensions;var hasCachedDimensions=!!cachedNaturalDimensions;(0,_react.useEffect)(function fetchPhysicalDimensions(){var cancelled=false;if(source.uri&&!hasCachedDimensions){getImageSizeAsync({uri:source.uri,headers:source.headers}).then(function(dimensions){return!cancelled&&onNaturalDimensions(dimensions);}).catch(function(e){return!cancelled&&onError(e||{});});return function(){cancelled=true;};}},[source.uri,source.headers,onNaturalDimensions,onError,hasCachedDimensions]);return{naturalDimensions:naturalDimensions,error:error,onError:onError,onNaturalDimensions:onNaturalDimensions};}function useIMGElementState(props){var alt=props.alt,altColor=props.altColor,source=props.source,contentWidth=props.contentWidth,computeMaxWidth=props.computeMaxWidth,objectFit=props.objectFit,_props$initialDimensi=props.initialDimensions,initialDimensions=_props$initialDimensi===void 0?_defaultInitialImageDimensions.default:_props$initialDimensi,cachedNaturalDimensions=props.cachedNaturalDimensions;var _ref7=(0,_useImageSpecifiedDimensions.default)(props),flatStyle=_ref7.flatStyle,specifiedDimensions=_ref7.specifiedDimensions;var nomalizedSource=(0,_useIMGNormalizedSource.default)({specifiedDimensions:specifiedDimensions,source:source});var _useFetchedNaturalDim=useFetchedNaturalDimensions({source:nomalizedSource,specifiedDimensions:specifiedDimensions,cachedNaturalDimensions:cachedNaturalDimensions}),naturalDimensions=_useFetchedNaturalDim.naturalDimensions,onError=_useFetchedNaturalDim.onError,error=_useFetchedNaturalDim.error;var concreteDimensions=(0,_useImageConcreteDimensions.default)({flatStyle:flatStyle,naturalDimensions:naturalDimensions,specifiedDimensions:specifiedDimensions,computeMaxWidth:computeMaxWidth,contentWidth:contentWidth});return(0,_getIMGState.getIMGState)({error:error,alt:alt,altColor:altColor,concreteDimensions:concreteDimensions,containerStyle:flatStyle,initialDimensions:initialDimensions,objectFit:objectFit,onError:onError,source:nomalizedSource});}","map":{"version":3,"sources":["useIMGElementState.ts"],"names":["headers","onImageDimensionsSuccess","onsuccess","width","height","Image","cachedNaturalDimensions","cachedNaturalHeight","setNaturalDimensions","setError","source","onNaturalDimensions","onError","naturalDimensions","error","useImageNaturalDimensions","hasCachedDimensions","cancelled","getImageSizeAsync","uri","dimensions","e","initialDimensions","defaultImageInitialDimensions","specifiedDimensions","nomalizedSource","useFetchedNaturalDimensions","concreteDimensions","flatStyle","computeMaxWidth","contentWidth","alt","altColor","containerStyle","objectFit"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Image, ImageURISource } from 'react-native';\nimport {\n  UseIMGElementStateProps,\n  IMGElementState,\n  IncompleteImageDimensions\n} from './img-types';\nimport defaultImageInitialDimensions from './defaultInitialImageDimensions';\nimport useIMGNormalizedSource from './useIMGNormalizedSource';\nimport { ImageDimensions } from '../shared-types';\nimport useImageConcreteDimensions from './useImageConcreteDimensions';\nimport { getIMGState } from './getIMGState';\nimport useImageSpecifiedDimensions from './useImageSpecifiedDimensions';\n\nfunction getImageSizeAsync({\n  uri,\n  headers\n}: {\n  headers: any;\n  uri: string;\n}): Promise<ImageDimensions> {\n  return new Promise<ImageDimensions>((onsuccess, onerror) => {\n    const onImageDimensionsSuccess = (width: number, height: number) =>\n      onsuccess({ width, height });\n    if (headers) {\n      Image.getSizeWithHeaders(uri, headers, onImageDimensionsSuccess, onerror);\n    } else {\n      Image.getSize(uri, onImageDimensionsSuccess, onerror);\n    }\n  });\n}\n\nfunction useImageNaturalDimensions<P extends UseIMGElementStateProps>(props: {\n  cachedNaturalDimensions?: ImageDimensions;\n  source: ImageURISource;\n  specifiedDimensions: IncompleteImageDimensions;\n}) {\n  const { source, cachedNaturalDimensions } = props;\n  const [naturalDimensions, setNaturalDimensions] = useState<\n    P['cachedNaturalDimensions'] extends ImageDimensions\n      ? ImageDimensions\n      : ImageDimensions | null\n  >((cachedNaturalDimensions as any) || null);\n  const { width: cachedNaturalWidth, height: cachedNaturalHeight } =\n    cachedNaturalDimensions || {};\n  const [error, setError] = useState<null | Error>(null);\n  useEffect(\n    function resetOnURIChange() {\n      setNaturalDimensions(\n        (cachedNaturalWidth != null && cachedNaturalHeight != null\n          ? { width: cachedNaturalWidth, height: cachedNaturalHeight }\n          : null) as any\n      );\n      setError(null);\n    },\n    [cachedNaturalHeight, cachedNaturalWidth, source.uri]\n  );\n  return {\n    onNaturalDimensions: setNaturalDimensions,\n    onError: setError,\n    naturalDimensions,\n    error\n  };\n}\n\nfunction useFetchedNaturalDimensions(props: {\n  cachedNaturalDimensions?: ImageDimensions;\n  source: ImageURISource;\n  specifiedDimensions: IncompleteImageDimensions;\n}) {\n  const { source, cachedNaturalDimensions } = props;\n  const { error, naturalDimensions, onError, onNaturalDimensions } =\n    useImageNaturalDimensions(props);\n  const hasCachedDimensions = !!cachedNaturalDimensions;\n  useEffect(\n    function fetchPhysicalDimensions() {\n      let cancelled = false;\n      if (source.uri && !hasCachedDimensions) {\n        getImageSizeAsync({ uri: source.uri, headers: source.headers })\n          .then((dimensions) => !cancelled && onNaturalDimensions(dimensions))\n          .catch((e) => !cancelled && onError(e || {}));\n        return () => {\n          cancelled = true;\n        };\n      }\n    },\n    [\n      source.uri,\n      source.headers,\n      onNaturalDimensions,\n      onError,\n      hasCachedDimensions\n    ]\n  );\n  return {\n    naturalDimensions,\n    error,\n    onError,\n    onNaturalDimensions\n  };\n}\n\n/**\n * This hook will compute concrete dimensions from image natural dimensions and\n * constraints. It will fetch the image and get its dimensions.\n *\n * @remarks If you know the dimensions beforehand, use\n * {@link useIMGElementStateWithCache} instead to save a network request and\n * prevent a layout shift.\n */\nexport default function useIMGElementState(\n  props: UseIMGElementStateProps\n): IMGElementState {\n  const {\n    alt,\n    altColor,\n    source,\n    contentWidth,\n    computeMaxWidth,\n    objectFit,\n    initialDimensions = defaultImageInitialDimensions,\n    cachedNaturalDimensions\n  } = props;\n  const { flatStyle, specifiedDimensions } = useImageSpecifiedDimensions(props);\n  const nomalizedSource = useIMGNormalizedSource({\n    specifiedDimensions,\n    source\n  });\n  const { naturalDimensions, onError, error } = useFetchedNaturalDimensions({\n    source: nomalizedSource,\n    specifiedDimensions,\n    cachedNaturalDimensions\n  });\n  const concreteDimensions = useImageConcreteDimensions({\n    flatStyle,\n    naturalDimensions,\n    specifiedDimensions,\n    computeMaxWidth,\n    contentWidth\n  });\n\n  return getIMGState({\n    error,\n    alt,\n    altColor,\n    concreteDimensions,\n    containerStyle: flatStyle,\n    initialDimensions,\n    objectFit,\n    onError,\n    source: nomalizedSource\n  });\n}\n"]},"metadata":{},"sourceType":"script"}