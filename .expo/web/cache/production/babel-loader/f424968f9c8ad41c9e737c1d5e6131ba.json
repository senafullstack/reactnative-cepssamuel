{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.useRendererProps=useRendererProps;exports.default=RenderersPropsProvider;var _react=_interopRequireWildcard(require(\"react\"));var _mergeDeepRight=_interopRequireDefault(require(\"ramda/src/mergeDeepRight\"));var _defaultRendererProps=_interopRequireDefault(require(\"./defaultRendererProps\"));var _useProfiler=_interopRequireDefault(require(\"../hooks/useProfiler\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var RenderersPropsContext=_react.default.createContext(_defaultRendererProps.default);function useRendererProps(tagName){var userProps=_react.default.useContext(RenderersPropsContext);return userProps[tagName];}function RenderersPropsProvider(props){var profile=(0,_useProfiler.default)({prop:'renderersProps'});var mergedRenderersProps=(0,_react.useMemo)(function(){typeof __DEV__==='boolean'&&__DEV__&&profile();return(0,_mergeDeepRight.default)(_defaultRendererProps.default,props.renderersProps||{});},[props.renderersProps,profile]);return _react.default.createElement(RenderersPropsContext.Provider,{value:mergedRenderersProps},props.children);}","map":{"version":3,"sources":["RenderersPropsProvider.tsx"],"names":["RenderersPropsContext","React","defaultRendererProps","userProps","profile","prop","mergedRenderersProps","props","value"],"mappings":"uJAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA,CAGA,GAAA,CAAA,qBAAA,CAAA,sBAAA,CAAA,OAAA,0BAAA,CAAA,CACA,GAAA,CAAA,YAAA,CAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA,C,6kCAEA,GAAMA,CAAAA,qBAAqB,CACzBC,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAA8CC,qBAAAA,CADhD,OACED,CADF,CAYO,QAAA,CAAA,gBAAA,CAAA,OAAA,CAGO,CACZ,GAAME,CAAAA,SAAS,CAAGF,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAlB,qBAAkBA,CAAlB,CACA,MAAOE,CAAAA,SAAS,CAAhB,OAAgB,CAAhB,CACD,CAKc,QAAA,CAAA,sBAAA,CAAA,KAAA,CAEb,CACA,GAAMC,CAAAA,OAAO,CAAG,CAAA,EAAA,YAAA,CAAA,OAAA,EAAY,CAAEC,IAAI,CAAE,gBAAR,CAAZ,CAAhB,CACA,GAAMC,CAAAA,oBAAoB,CAAG,CAAA,EAAA,MAAA,CAAA,OAAA,EAAQ,UAAM,CACzC,MAAA,CAAA,OAAA,GAAA,SAAA,EAAA,OAAA,EAA2CF,OAA3C,EAAA,CACA,MAAO,CAAA,EAAA,eAAA,CAAA,OAAA,EAAeF,qBAAAA,CAAf,OAAA,CAAqCK,KAAK,CAALA,cAAAA,EAA5C,EAAO,CAAP,CAF2B,CAAA,CAG1B,CAACA,KAAK,CAAN,cAAA,CAHH,OAGG,CAH0B,CAA7B,CAIA,MAAO,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CACLP,qBAAqB,CADhB,QAAA,CAEL,CAAEQ,KAAK,CAAEF,oBAAT,CAFK,CAGLC,KAAK,CAHP,QAAO,CAAP,CAKD","sourcesContent":["import React, { PropsWithChildren, useMemo } from 'react';\nimport mergeDeepRight from 'ramda/src/mergeDeepRight';\n\nimport { RenderersProps, RenderHTMLPassedProps } from '../shared-types';\nimport defaultRendererProps from './defaultRendererProps';\nimport useProfiler from '../hooks/useProfiler';\n\nconst RenderersPropsContext =\n  React.createContext<Required<RenderersProps>>(defaultRendererProps);\n\n/**\n * Consume props from {@link RenderHTMLProps.renderersProps}.\n *\n * @param tagName - The name of the element.\n * @typeParam K - The type literal corresponding to the element name.\n * @returns props for this renderer.\n *\n * @public\n */\nexport function useRendererProps<\n  RendererProps extends RenderersProps = RenderersProps,\n  K extends keyof RendererProps = keyof RendererProps\n>(tagName: K) {\n  const userProps = React.useContext(RenderersPropsContext) as RendererProps;\n  return userProps[tagName];\n}\n\n/**\n * @internal\n */\nexport default function RenderersPropsProvider(\n  props: PropsWithChildren<RenderHTMLPassedProps>\n) {\n  const profile = useProfiler({ prop: 'renderersProps' });\n  const mergedRenderersProps = useMemo(() => {\n    typeof __DEV__ === 'boolean' && __DEV__ && profile();\n    return mergeDeepRight(defaultRendererProps, props.renderersProps || {});\n  }, [props.renderersProps, profile]);\n  return React.createElement(\n    RenderersPropsContext.Provider,\n    { value: mergedRenderersProps as Required<RenderersProps> },\n    props.children\n  );\n}\n"]},"metadata":{},"sourceType":"script"}