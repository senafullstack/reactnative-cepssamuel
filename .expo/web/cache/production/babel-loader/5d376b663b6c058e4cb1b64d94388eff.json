{"ast":null,"code":"\"use strict\";var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}Object.defineProperty(exports,\"__esModule\",{value:true});exports.LongFloatNumberCSSPropertyValidator=void 0;var _LongCSSPropertyValidator=require(\"./LongCSSPropertyValidator\");var LongFloatNumberCSSPropertyValidator=function(_LongCSSPropertyValid){_inherits(LongFloatNumberCSSPropertyValidator,_LongCSSPropertyValid);var _super=_createSuper(LongFloatNumberCSSPropertyValidator);function LongFloatNumberCSSPropertyValidator(){_classCallCheck(this,LongFloatNumberCSSPropertyValidator);return _super.apply(this,arguments);}_createClass(LongFloatNumberCSSPropertyValidator,[{key:\"normalizeRawInlineCSSValue\",value:function normalizeRawInlineCSSValue(value){var normalizedVal=Number(value);if(Number.isNaN(normalizedVal)){return null;}return normalizedVal;}},{key:\"normalizeNativeValue\",value:function normalizeNativeValue(v){return this.normalizeInlineCSSValue(v);}}]);return LongFloatNumberCSSPropertyValidator;}(_LongCSSPropertyValidator.LongCSSPropertyValidator);exports.LongFloatNumberCSSPropertyValidator=LongFloatNumberCSSPropertyValidator;","map":{"version":3,"sources":["LongFloatNumberCSSPropertyValidator.ts"],"names":["LongCSSPropertyValidator","normalizeRawInlineCSSValue","normalizedVal","Number","normalizeNativeValue"],"mappings":"woCAAA,GAAA,CAAA,yBAAA,CAAA,OAAA,8BAAA,C,GAGO,CAAA,mC,2YAGLC,oCAA0B,KAA1BA,CAAyD,CACvD,GAAMC,CAAAA,aAAa,CAAGC,MAAM,CAA5B,KAA4B,CAA5B,CACA,GAAIA,MAAM,CAANA,KAAAA,CAAJ,aAAIA,CAAJ,CAAiC,CAC/B,MAAA,KAAA,CACD,CACD,MAAA,CAAA,aAAA,CACD,C,oCAEDC,8BAAoB,CAApBA,CAAwD,CACtD,MAAO,MAAA,uBAAA,CAAP,CAAO,CAAP,CACD,C,iDAXOJ,yBAAAA,CAFH,wB","sourcesContent":["import { LongCSSPropertyValidator } from './LongCSSPropertyValidator';\nimport { CSSPropertyModel } from './types';\n\nexport class LongFloatNumberCSSPropertyValidator<\n  C extends CSSPropertyModel\n> extends LongCSSPropertyValidator<C, number> {\n  normalizeRawInlineCSSValue(value: string): number | null {\n    const normalizedVal = Number(value);\n    if (Number.isNaN(normalizedVal)) {\n      return null;\n    }\n    return normalizedVal;\n  }\n\n  normalizeNativeValue(v: string | number): number | null {\n    return this.normalizeInlineCSSValue(v);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}