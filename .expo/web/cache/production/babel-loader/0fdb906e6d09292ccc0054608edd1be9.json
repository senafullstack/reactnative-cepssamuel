{"ast":null,"code":"\"use strict\";var _objectWithoutProperties=require(\"@babel/runtime/helpers/objectWithoutProperties\");var _excluded=[\"style\"];Object.defineProperty(exports,\"__esModule\",{value:true});exports.useIMGElementProps=useIMGElementProps;exports.default=void 0;var _react=_interopRequireWildcard(require(\"react\"));var _IMGElement=_interopRequireDefault(require(\"../elements/IMGElement\"));var _SharedPropsProvider=require(\"../context/SharedPropsProvider\");var _reactNative=require(\"react-native-web/dist/index\");var _useNormalizedUrl=_interopRequireDefault(require(\"../hooks/useNormalizedUrl\"));var _RenderersPropsProvider=require(\"../context/RenderersPropsProvider\");var _useContentWidth=_interopRequireDefault(require(\"../hooks/useContentWidth\"));var _getNativePropsForTNode=_interopRequireDefault(require(\"../helpers/getNativePropsForTNode\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!==\"function\")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!==\"default\"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function useIMGElementProps(props){var tnode=props.tnode;var contentWidth=(0,_useContentWidth.default)();var _ref=(0,_RenderersPropsProvider.useRendererProps)('img'),initialDimensions=_ref.initialDimensions,enableExperimentalPercentWidth=_ref.enableExperimentalPercentWidth;var computeImagesMaxWidth=(0,_SharedPropsProvider.useComputeMaxWidthForTag)('img');var src=tnode.attributes.src||'';var source={uri:(0,_useNormalizedUrl.default)(src)};var _ref2=(0,_getNativePropsForTNode.default)(props),rawStyle=_ref2.style,containerProps=_objectWithoutProperties(_ref2,_excluded);var style=(0,_react.useMemo)(function(){return rawStyle?_reactNative.StyleSheet.flatten(rawStyle):{};},[rawStyle]);return{contentWidth:contentWidth,containerProps:containerProps,enableExperimentalPercentWidth:enableExperimentalPercentWidth,initialDimensions:initialDimensions,source:source,style:style,testID:'img',computeMaxWidth:computeImagesMaxWidth,alt:tnode.attributes.alt,altColor:tnode.styles.nativeTextFlow.color,width:tnode.attributes.width,height:tnode.attributes.height,objectFit:tnode.styles.webBlockRet.objectFit};}var IMGRenderer=function IMGRenderer(props){return _react.default.createElement(_IMGElement.default,useIMGElementProps(props));};var _default=IMGRenderer;exports.default=_default;","map":{"version":3,"sources":["IMGRenderer.tsx"],"names":["tnode","contentWidth","enableExperimentalPercentWidth","computeImagesMaxWidth","src","source","uri","style","containerProps","rawStyle","StyleSheet","initialDimensions","testID","computeMaxWidth","alt","altColor","width","height","objectFit","IMGRenderer","props","React","IMGElement","useIMGElementProps"],"mappings":"0PAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAEA,GAAA,CAAA,WAAA,CAAA,sBAAA,CAAA,OAAA,0BAAA,CAAA,CAEA,GAAA,CAAA,oBAAA,CAAA,OAAA,kCAAA,C,wDAGA,GAAA,CAAA,iBAAA,CAAA,sBAAA,CAAA,OAAA,6BAAA,CAAA,CACA,GAAA,CAAA,uBAAA,CAAA,OAAA,qCAAA,CACA,GAAA,CAAA,gBAAA,CAAA,sBAAA,CAAA,OAAA,4BAAA,CAAA,CACA,GAAA,CAAA,uBAAA,CAAA,sBAAA,CAAA,OAAA,qCAAA,CAAA,C,6kCAMO,QAAA,CAAA,kBAAA,CAAA,KAAA,CAEY,CACjB,GAAQA,CAAAA,KAAR,CAAA,KAAA,CAAQA,KAAR,CAEA,GAAMC,CAAAA,YAAY,CAAG,CAAA,EAAA,gBAAA,CAArB,OAAqB,GAArB,CACA,SACE,CAAA,EAAA,uBAAA,CAAA,gBAAA,EADF,KACE,CADF,CAAM,iBAAN,MAAM,iBAAN,CAA2BC,8BAA3B,MAA2BA,8BAA3B,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,CAAA,EAAA,oBAAA,CAAA,wBAAA,EAA9B,KAA8B,CAA9B,CACA,GAAMC,CAAAA,GAAG,CAAGJ,KAAK,CAALA,UAAAA,CAAAA,GAAAA,EAAZ,EAAA,CACA,GAAMK,CAAAA,MAAM,CAAG,CAAEC,GAAG,CAAE,CAAA,EAAA,iBAAA,CAAA,OAAA,EAAA,GAAA,CAAP,CAAf,CACA,UAA+C,CAAA,EAAA,uBAAA,CAAA,OAAA,EAA/C,KAA+C,CAA/C,CAAM,QAAN,OAAQC,KAAR,CAA4BC,cAA5B,2CACA,GAAMD,CAAAA,KAAK,CAAG,CAAA,EAAA,MAAA,CAAA,OAAA,EACZ,iBAAOE,CAAAA,QAAQ,CAAIC,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAAJ,QAAIA,CAAJ,CADH,EACZ,EADY,CAEZ,CAFF,QAEE,CAFY,CAAd,CAIA,MAAO,CACLT,YADK,CACLA,YADK,CAELO,cAFK,CAELA,cAFK,CAGLN,8BAHK,CAGLA,8BAHK,CAILS,iBAJK,CAILA,iBAJK,CAKLN,MALK,CAKLA,MALK,CAMLE,KANK,CAMLA,KANK,CAOLK,MAAM,CAPD,KAAA,CAQLC,eAAe,CARV,qBAAA,CASLC,GAAG,CAAEd,KAAK,CAALA,UAAAA,CATA,GAAA,CAULe,QAAQ,CAAEf,KAAK,CAALA,MAAAA,CAAAA,cAAAA,CAVL,KAAA,CAWLgB,KAAK,CAAEhB,KAAK,CAALA,UAAAA,CAXF,KAAA,CAYLiB,MAAM,CAAEjB,KAAK,CAALA,UAAAA,CAZH,MAAA,CAaLkB,SAAS,CAAElB,KAAK,CAALA,MAAAA,CAAAA,WAAAA,CAAyBkB,SAb/B,CAAP,CAeD,CAED,GAAMC,CAAAA,WAAkC,CAAIC,QAAtCD,CAAAA,WAAsCC,CAAAA,KAAD,CAAW,CACpD,MAAOC,CAAAA,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAoBC,WAAAA,CAApBD,OAAAA,CAAgCE,kBAAkB,CAAzD,KAAyD,CAAlDF,CAAP,CADF,CAAA,C,aAIeF,W","sourcesContent":["import React, { useMemo } from 'react';\nimport { TBlock } from '@native-html/transient-render-engine';\nimport IMGElement, { IMGElementProps } from '../elements/IMGElement';\nimport { InternalBlockRenderer } from '../render/render-types';\nimport { useComputeMaxWidthForTag } from '../context/SharedPropsProvider';\nimport { ImageStyle, StyleSheet } from 'react-native';\nimport { InternalRendererProps } from '../shared-types';\nimport useNormalizedUrl from '../hooks/useNormalizedUrl';\nimport { useRendererProps } from '../context/RenderersPropsProvider';\nimport useContentWidth from '../hooks/useContentWidth';\nimport getNativePropsForTNode from '../helpers/getNativePropsForTNode';\n\n/**\n * A hook to produce props consumable by {@link IMGElement} component\n * from custom renderer props.\n */\nexport function useIMGElementProps(\n  props: InternalRendererProps<TBlock>\n): IMGElementProps {\n  const { tnode } = props;\n\n  const contentWidth = useContentWidth();\n  const { initialDimensions, enableExperimentalPercentWidth } =\n    useRendererProps('img');\n  const computeImagesMaxWidth = useComputeMaxWidthForTag('img');\n  const src = tnode.attributes.src || '';\n  const source = { uri: useNormalizedUrl(src) };\n  const { style: rawStyle, ...containerProps } = getNativePropsForTNode(props);\n  const style = useMemo<ImageStyle>(\n    () => (rawStyle ? (StyleSheet.flatten(rawStyle) as ImageStyle) : {}),\n    [rawStyle]\n  );\n  return {\n    contentWidth,\n    containerProps,\n    enableExperimentalPercentWidth,\n    initialDimensions,\n    source,\n    style,\n    testID: 'img',\n    computeMaxWidth: computeImagesMaxWidth,\n    alt: tnode.attributes.alt,\n    altColor: tnode.styles.nativeTextFlow.color as string,\n    width: tnode.attributes.width,\n    height: tnode.attributes.height,\n    objectFit: tnode.styles.webBlockRet.objectFit\n  };\n}\n\nconst IMGRenderer: InternalBlockRenderer = (props) => {\n  return React.createElement(IMGElement, useIMGElementProps(props));\n};\n\nexport default IMGRenderer;\n"]},"metadata":{},"sourceType":"script"}