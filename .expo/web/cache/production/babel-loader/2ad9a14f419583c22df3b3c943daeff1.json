{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var emptyProps={testID:'br'};var isWeb=_reactNative.Platform.OS==='web';function renderEmptyLineBreak(tnode){var lineHeight=tnode.styles.nativeTextFlow.lineHeight||tnode.styles.nativeTextFlow.fontSize*1.4;return _react.default.createElement(_reactNative.View,{style:{height:lineHeight}});}var BRRenderer=function BRRenderer(_ref){var renderIndex=_ref.renderIndex,renderLength=_ref.renderLength,sharedProps=_ref.sharedProps,tnode=_ref.tnode;var isFirst=renderIndex===0;var isLast=renderIndex===renderLength-1;var isLonelyBreak=isFirst&&isLast;var shouldCollapse=sharedProps.enableExperimentalBRCollapsing&&(isFirst?isLast&&!isWeb:isLast);return isLonelyBreak&&shouldCollapse?renderEmptyLineBreak(tnode):_react.default.createElement(_reactNative.Text,emptyProps,shouldCollapse?'':'\\n');};BRRenderer.isNativeInternalTextRenderer=true;var _default=BRRenderer;exports.default=_default;","map":{"version":3,"sources":["BRRenderer.tsx"],"names":["emptyProps","testID","isWeb","Platform","lineHeight","tnode","height","BRRenderer","isFirst","renderIndex","isLast","renderLength","isLonelyBreak","shouldCollapse","sharedProps","renderEmptyLineBreak","React","Text"],"mappings":"6FACA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,2IAIA,GAAMA,CAAAA,UAAU,CAAG,CACjBC,MAAM,CAAE,IADS,CAAnB,CAIA,GAAMC,CAAAA,KAAK,CAAGC,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAd,KAAA,CAEA,QAAA,CAAA,oBAAA,CAAA,KAAA,CAA4C,CAC1C,GAAMC,CAAAA,UAAU,CACdC,KAAK,CAALA,MAAAA,CAAAA,cAAAA,CAAAA,UAAAA,EACAA,KAAK,CAALA,MAAAA,CAAAA,cAAAA,CAAAA,QAAAA,CAFF,GAAA,CAGA,MAAO,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,KAAK,CAAE,CAAEC,MAAM,CAAEF,UAAV,CAAb,CAAA,CAAP,CACD,CAED,GAAMG,CAAAA,UAAuC,CAAG,QAAA,CAAA,UAAA,MAK7C,IALiE,CAAA,WAKjE,MALiE,WAKjE,CALiE,YAKjE,MALiE,YAKjE,CALiE,WAKjE,MALiE,WAKjE,CADDF,KACC,MADDA,KACC,CASD,GAAMG,CAAAA,OAAO,CAAGC,WAAW,GAA3B,CAAA,CACA,GAAMC,CAAAA,MAAM,CAAGD,WAAW,GAAKE,YAAY,CAA3C,CAAA,CACA,GAAMC,CAAAA,aAAa,CAAGJ,OAAO,EAA7B,MAAA,CACA,GAAMK,CAAAA,cAAc,CAClBC,WAAW,CAAXA,8BAAAA,GACCN,OAAO,CAAGE,MAAM,EAAI,CAAb,KAAA,CAFV,MACEI,CADF,CAGA,MAAOF,CAAAA,aAAa,EAAbA,cAAAA,CACHG,oBAAoB,CADjBH,KACiB,CADjBA,CAEHI,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAoBC,YAAAA,CAApBD,IAAAA,CAAAA,UAAAA,CAAsCH,cAAc,CAAA,EAAA,CAFxD,IAEIG,CAFJ,CApBF,CAAA,CAyBAT,UAAU,CAAVA,4BAAAA,CAAAA,IAAAA,C,aAEeA,U","sourcesContent":["import { TNode } from '@native-html/transient-render-engine';\nimport React from 'react';\nimport { Platform, Text, View } from 'react-native';\nimport { InternalTextContentRenderer } from '../render/render-types';\n\nconst emptyProps = {\n  testID: 'br'\n};\n\nconst isWeb = Platform.OS === 'web';\n\nfunction renderEmptyLineBreak(tnode: TNode) {\n  const lineHeight =\n    tnode.styles.nativeTextFlow.lineHeight ||\n    tnode.styles.nativeTextFlow.fontSize! * 1.4;\n  return <View style={{ height: lineHeight }} />;\n}\n\nconst BRRenderer: InternalTextContentRenderer = function BRRenderer({\n  renderIndex,\n  renderLength,\n  sharedProps,\n  tnode\n}) {\n  // If it is the last child and BR collapsing is enabled, render an empty\n  // string to prevent inserting an undesired space to follow HTML specs,\n  // unless the platform is web and it is also the first child.\n  //\n  // Note that we are taking advantage of the Ghost Line oddity in React\n  // Native, where an empty <Text /> element displays a line, since a\n  // line break opening **and** closing an inline formatting context\n  // should be printed as a one line-height item.\n  const isFirst = renderIndex === 0;\n  const isLast = renderIndex === renderLength - 1;\n  const isLonelyBreak = isFirst && isLast;\n  const shouldCollapse =\n    sharedProps.enableExperimentalBRCollapsing &&\n    (isFirst ? isLast && !isWeb : isLast);\n  return isLonelyBreak && shouldCollapse\n    ? renderEmptyLineBreak(tnode)\n    : React.createElement(Text, emptyProps, shouldCollapse ? '' : '\\n');\n};\n\nBRRenderer.isNativeInternalTextRenderer = true;\n\nexport default BRRenderer;\n"]},"metadata":{},"sourceType":"script"}