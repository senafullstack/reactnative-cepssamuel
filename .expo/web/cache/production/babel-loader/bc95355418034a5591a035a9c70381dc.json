{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.mapNodeList=mapNodeList;exports.bindChildren=bindChildren;exports.translateNode=translateNode;exports.translateDocument=translateDocument;var _TTextCtor=require(\"../tree/TTextCtor\");var _TPhrasingCtor=require(\"../tree/TPhrasingCtor\");var _TBlockCtor=require(\"../tree/TBlockCtor\");var _TDocumentImpl=require(\"../tree/TDocumentImpl\");var _domUtils=require(\"../dom/dom-utils\");var _TEmptyCtor=require(\"../tree/TEmptyCtor\");function mapNodeList(_ref){var nodeList=_ref.nodeList,parent=_ref.parent,parentStyles=_ref.parentStyles,params=_ref.params;var nextMap=[];for(var i in nodeList){var child=nodeList[i];var translated=translateNode({node:child,parentStyles:parentStyles,params:params,nodeIndex:Number(i),parent:parent});if(translated){nextMap.push(translated);}}return nextMap;}function bindChildren(node,children,params){if(!node.elementModel||!node.elementModel.isOpaque){node.bindChildren(mapNodeList({nodeList:children,parent:node,params:params}));}}function translateElement(_ref2){var node=_ref2.node,nodeIndex=_ref2.nodeIndex,params=_ref2.params,parent=_ref2.parent,parentStyles=_ref2.parentStyles;var tagName=node.tagName;var sharedProps={nodeIndex:nodeIndex,parentStyles:parentStyles,context:params,domNode:node,parent:parent};var elementModel=params.modelRegistry.getElementModelFromTagName(tagName);if(!elementModel){return new _TEmptyCtor.TEmptyCtor(_objectSpread(_objectSpread({},sharedProps),{},{isUnregistered:true,elementModel:elementModel,domNode:node}));}if(elementModel.isTranslatableTextual()){if(node.children.length===1){var child=node.children[0];if((0,_domUtils.isDomText)(child)){return new _TTextCtor.TTextCtor(_objectSpread(_objectSpread({},sharedProps),{},{elementModel:elementModel,textNode:child,domNode:node}));}}else if(node.children.length===0){return new _TTextCtor.TTextCtor(_objectSpread(_objectSpread({},sharedProps),{},{elementModel:elementModel,domNode:node,textNode:new _domUtils.Text('')}));}var phrasing=new _TPhrasingCtor.TPhrasingCtor(_objectSpread(_objectSpread({},sharedProps),{},{domNode:node,elementModel:elementModel}));bindChildren(phrasing,node.children,params);return phrasing;}if(elementModel.isTranslatableBlock()){var block=new _TBlockCtor.TBlockCtor(_objectSpread(_objectSpread({},sharedProps),{},{elementModel:elementModel,parentStyles:parentStyles,domNode:node}));bindChildren(block,node.children,params);return block;}return new _TEmptyCtor.TEmptyCtor(_objectSpread(_objectSpread({},sharedProps),{},{isUnregistered:false,elementModel:elementModel,domNode:node}));}function translateNode(_ref3){var node=_ref3.node,parentStyles=_ref3.parentStyles,params=_ref3.params,nodeIndex=_ref3.nodeIndex,parent=_ref3.parent;if((0,_domUtils.isDomText)(node)){return new _TTextCtor.TTextCtor({textNode:node,context:params,parentStyles:parentStyles,domNode:null,elementModel:null,nodeIndex:nodeIndex,parent:parent});}if((0,_domUtils.isDomElement)(node)){return translateElement({node:node,parentStyles:parentStyles,params:params,nodeIndex:nodeIndex,parent:parent});}return null;}function translateDocument(document,params){var tdoc=new _TDocumentImpl.TDocumentCtor({context:params,styles:params.baseStyles,domNode:document});bindChildren(tdoc,document.children,params);tdoc.parseChildren();return tdoc;}","map":{"version":3,"sources":["translate.ts"],"names":["params","nextMap","child","nodeList","translated","translateNode","node","parentStyles","nodeIndex","Number","parent","mapNodeList","tagName","sharedProps","context","domNode","elementModel","TEmptyCtor","isUnregistered","TTextCtor","textNode","Text","phrasing","TPhrasingCtor","bindChildren","block","TBlockCtor","translateElement","tdoc","TDocumentCtor","styles","document"],"mappings":"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","sourcesContent":["import { TNodeImpl, TNodeInit } from '../tree/tree-types';\nimport { Document } from 'domhandler';\nimport { TTextCtor } from '../tree/TTextCtor';\nimport { TPhrasingCtor } from '../tree/TPhrasingCtor';\nimport { TBlockCtor } from '../tree/TBlockCtor';\nimport { TDocumentCtor, TDocumentImpl } from '../tree/TDocumentImpl';\nimport { isDomElement, isDomText, Element, Node, Text } from '../dom/dom-utils';\nimport { TStyles } from '../styles/TStyles';\n\nimport { TEmptyCtor } from '../tree/TEmptyCtor';\nimport { DataFlowParams } from './types';\n\nexport function mapNodeList({\n  nodeList,\n  parent,\n  parentStyles,\n  params\n}: {\n  nodeList: Node[];\n  parentStyles?: TStyles;\n  parent: TNodeImpl | null;\n  params: DataFlowParams;\n}): TNodeImpl[] {\n  const nextMap: TNodeImpl[] = [];\n  for (const i in nodeList) {\n    const child = nodeList[i];\n    const translated = translateNode({\n      node: child,\n      parentStyles,\n      params,\n      nodeIndex: Number(i),\n      parent\n    });\n    if (translated) {\n      nextMap.push(translated);\n    }\n  }\n  return nextMap;\n}\n\nexport function bindChildren(\n  node: TNodeImpl,\n  children: Node[],\n  params: DataFlowParams\n) {\n  if (!node.elementModel || !node.elementModel.isOpaque) {\n    node.bindChildren(\n      mapNodeList({\n        nodeList: children,\n        parent: node,\n        params\n      })\n    );\n  }\n}\n\nfunction translateElement({\n  node,\n  nodeIndex,\n  params,\n  parent,\n  parentStyles\n}: TranslateParams<Element>): TNodeImpl | null {\n  const tagName = node.tagName;\n  const sharedProps: Omit<TNodeInit, 'contentModel' | 'elementModel'> = {\n    nodeIndex,\n    parentStyles,\n    context: params,\n    domNode: node,\n    parent\n  };\n  const elementModel = params.modelRegistry.getElementModelFromTagName(tagName);\n  if (!elementModel) {\n    return new TEmptyCtor({\n      ...sharedProps,\n      isUnregistered: true,\n      elementModel,\n      domNode: node\n    });\n  }\n  if (elementModel.isTranslatableTextual()) {\n    if (node.children.length === 1) {\n      const child = node.children[0] as Node;\n      if (isDomText(child)) {\n        return new TTextCtor({\n          ...sharedProps,\n          elementModel,\n          textNode: child,\n          domNode: node\n        });\n      }\n    } else if (node.children.length === 0) {\n      return new TTextCtor({\n        ...sharedProps,\n        elementModel,\n        domNode: node,\n        textNode: new Text('')\n      });\n    }\n    const phrasing = new TPhrasingCtor({\n      ...sharedProps,\n      domNode: node,\n      elementModel\n    });\n    bindChildren(phrasing, node.children, params);\n    return phrasing;\n  }\n  if (elementModel.isTranslatableBlock()) {\n    const block = new TBlockCtor({\n      ...sharedProps,\n      elementModel,\n      parentStyles,\n      domNode: node\n    });\n    bindChildren(block, node.children, params);\n    return block;\n  }\n  return new TEmptyCtor({\n    ...sharedProps,\n    isUnregistered: false,\n    elementModel,\n    domNode: node\n  });\n}\n\ninterface TranslateParams<T = Node> {\n  node: T;\n  params: DataFlowParams;\n  parent: TNodeImpl | null;\n  parentStyles?: TStyles;\n  nodeIndex?: number;\n}\n\nexport function translateNode({\n  node,\n  parentStyles,\n  params,\n  nodeIndex,\n  parent\n}: TranslateParams<Node | null>): TNodeImpl | null {\n  if (isDomText(node)) {\n    return new TTextCtor({\n      textNode: node,\n      context: params,\n      parentStyles,\n      domNode: null,\n      elementModel: null,\n      nodeIndex,\n      parent\n    });\n  }\n  if (isDomElement(node)) {\n    return translateElement({\n      node,\n      parentStyles,\n      params,\n      nodeIndex,\n      parent\n    });\n  }\n  return null;\n}\n\nexport function translateDocument(\n  document: Document,\n  params: DataFlowParams\n): TDocumentImpl {\n  const tdoc = new TDocumentCtor({\n    context: params,\n    styles: params.baseStyles,\n    domNode: document as any\n  });\n  bindChildren(tdoc, document.children, params);\n  tdoc.parseChildren();\n  return tdoc;\n}\n"]},"metadata":{},"sourceType":"script"}