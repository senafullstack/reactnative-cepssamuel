{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useImageSpecifiedDimensions;var _react=require(\"react\");var _getDimensionsWithAspectRatio=_interopRequireDefault(require(\"./getDimensionsWithAspectRatio\"));var _reactNative=require(\"react-native-web/dist/index\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function normalizeSize(dimension,options){var containerDimension=options.containerDimension||null;var enablePercentWidth=options.enablePercentWidth||false;if(dimension===null||dimension===undefined||Number.isNaN(dimension)){return null;}if(typeof dimension==='number'){return dimension;}if(dimension.search('%')!==-1&&enablePercentWidth&&typeof containerDimension==='number'){return parseFloat(dimension)*containerDimension/100;}else if(dimension.trim().match(/^[\\d.]+$/)){return parseFloat(dimension);}return null;}function deriveSpecifiedDimensionsFromProps(_ref){var width=_ref.width,height=_ref.height,contentWidth=_ref.contentWidth,flatStyle=_ref.flatStyle,enablePercentWidth=_ref.enableExperimentalPercentWidth;var normalizeOptionsWidth={enablePercentWidth:enablePercentWidth,containerDimension:contentWidth};var normalizeOptionsHeight={enablePercentWidth:false};var widthProp=normalizeSize(width,normalizeOptionsWidth);var heightProp=normalizeSize(height,normalizeOptionsHeight);var styleWidth=normalizeSize(flatStyle.width,normalizeOptionsWidth);var styleHeight=normalizeSize(flatStyle.height,normalizeOptionsHeight);return(0,_getDimensionsWithAspectRatio.default)(styleWidth!==null&&styleWidth!==void 0?styleWidth:widthProp,styleHeight!==null&&styleHeight!==void 0?styleHeight:heightProp,flatStyle.aspectRatio);}function useImageSpecifiedDimensions(props){var contentWidth=props.contentWidth,enableExperimentalPercentWidth=props.enableExperimentalPercentWidth,style=props.style,width=props.width,height=props.height;var flatStyle=(0,_react.useMemo)(function(){return _reactNative.StyleSheet.flatten(style)||{};},[style]);var specifiedDimensions=(0,_react.useMemo)(function(){return deriveSpecifiedDimensionsFromProps({contentWidth:contentWidth,enableExperimentalPercentWidth:enableExperimentalPercentWidth,width:width,height:height,flatStyle:flatStyle});},[contentWidth,enableExperimentalPercentWidth,flatStyle,height,width]);return{flatStyle:flatStyle,specifiedDimensions:specifiedDimensions};}","map":{"version":3,"sources":["useImageSpecifiedDimensions.ts"],"names":["containerDimension","options","enablePercentWidth","dimension","Number","parseFloat","enableExperimentalPercentWidth","normalizeOptionsWidth","contentWidth","normalizeOptionsHeight","widthProp","normalizeSize","heightProp","styleWidth","flatStyle","styleHeight","height","StyleSheet","specifiedDimensions","deriveSpecifiedDimensionsFromProps","width"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\nimport {\n  UseIMGElementStateProps,\n  IncompleteImageDimensions\n} from './img-types';\nimport getDimensionsWithAspectRatio from './getDimensionsWithAspectRatio';\nimport { StyleSheet } from 'react-native';\n\nfunction normalizeSize(\n  dimension: string | number | null | undefined,\n  options: Partial<{\n    containerDimension: number | null;\n    enablePercentWidth: boolean;\n  }>\n) {\n  const containerDimension = options.containerDimension || null;\n  const enablePercentWidth = options.enablePercentWidth || false;\n  if (\n    dimension === null ||\n    dimension === undefined ||\n    Number.isNaN(dimension)\n  ) {\n    return null;\n  }\n  if (typeof dimension === 'number') {\n    return dimension;\n  }\n  if (\n    dimension.search('%') !== -1 &&\n    enablePercentWidth &&\n    typeof containerDimension === 'number'\n  ) {\n    return (parseFloat(dimension) * containerDimension) / 100;\n  } else if (dimension.trim().match(/^[\\d.]+$/)) {\n    return parseFloat(dimension);\n  }\n  return null;\n}\n\n/**\n * Extract specified dimensions from props.\n */\nfunction deriveSpecifiedDimensionsFromProps({\n  width,\n  height,\n  contentWidth,\n  flatStyle,\n  enableExperimentalPercentWidth: enablePercentWidth\n}: Pick<\n  UseIMGElementStateProps,\n  'width' | 'height' | 'contentWidth' | 'enableExperimentalPercentWidth'\n> & { flatStyle: Record<string, any> }): IncompleteImageDimensions {\n  const normalizeOptionsWidth = {\n    enablePercentWidth,\n    containerDimension: contentWidth\n  };\n  const normalizeOptionsHeight = {\n    enablePercentWidth: false\n  };\n  const widthProp = normalizeSize(width, normalizeOptionsWidth);\n  const heightProp = normalizeSize(height, normalizeOptionsHeight);\n  const styleWidth = normalizeSize(flatStyle.width, normalizeOptionsWidth);\n  const styleHeight = normalizeSize(flatStyle.height, normalizeOptionsHeight);\n  return getDimensionsWithAspectRatio(\n    styleWidth ?? widthProp,\n    styleHeight ?? heightProp,\n    flatStyle.aspectRatio\n  );\n}\n\nexport default function useImageSpecifiedDimensions(\n  props: UseIMGElementStateProps\n) {\n  const { contentWidth, enableExperimentalPercentWidth, style, width, height } =\n    props;\n  const flatStyle = useMemo(() => StyleSheet.flatten(style) || {}, [style]);\n  const specifiedDimensions = useMemo(\n    () =>\n      deriveSpecifiedDimensionsFromProps({\n        contentWidth,\n        enableExperimentalPercentWidth,\n        width,\n        height,\n        flatStyle\n      }),\n    [contentWidth, enableExperimentalPercentWidth, flatStyle, height, width]\n  );\n  return { flatStyle, specifiedDimensions };\n}\n"]},"metadata":{},"sourceType":"script"}