{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");var _objectWithoutProperties=require(\"@babel/runtime/helpers/objectWithoutProperties\");var _excluded=[\"tnode\",\"TDefaultRenderer\",\"listType\",\"style\",\"getFallbackListStyleTypeFromNestLevel\",\"markerBoxStyle\",\"markerTextStyle\",\"enableExperimentalRtl\",\"enableRemoveTopMarginIfNested\",\"enableRemoveBottomMarginIfNested\",\"enableDynamicMarkerBoxWidth\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.getMarkerBoxStyle=getMarkerBoxStyle;exports.default=ListElement;var _reactNative=require(\"react-native-web/dist/index\");var _react=_interopRequireDefault(require(\"react\"));var _reactNativeLi=require(\"@jsamr/react-native-li\");var _TChildrenRendererContext=require(\"../context/TChildrenRendererContext\");var _constants=require(\"../constants\");var _pick=_interopRequireDefault(require(\"ramda/src/pick\"));var _ListStyleSpecsProvider=require(\"../context/ListStyleSpecsProvider\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function getStartIndex(tnode){var parsedIndex=tnode.attributes.start?Number(tnode.attributes.start):Number.NaN;return Number.isNaN(parsedIndex)?1:parsedIndex;}var pickMarkerTextStyles=(0,_pick.default)(['fontStyle','fontSize','fontWeight','fontFamily','fontVariant','color','lineHeight']);function extractMarkerTextStyle(tnode){return Object.assign({lineHeight:14*1.3,fontSize:14,color:_constants.DEFAULT_TEXT_COLOR},pickMarkerTextStyles(tnode.styles.nativeTextFlow));}function getMarkerBoxStyle(markerWidth,paddingValue){var markerBoxWidth=typeof markerWidth==='number'?typeof paddingValue==='number'?Math.max(paddingValue,markerWidth):markerWidth:paddingValue;return{width:markerBoxWidth};}var listStyleTypeFallbackRecord={ol:'decimal',ul:'disc'};function ListElement(_ref){var tnode=_ref.tnode,TDefaultRenderer=_ref.TDefaultRenderer,listType=_ref.listType,style=_ref.style,getFallbackListStyleTypeFromNestLevel=_ref.getFallbackListStyleTypeFromNestLevel,markerBoxStyle=_ref.markerBoxStyle,providedMarkerTextStyle=_ref.markerTextStyle,_ref$enableExperiment=_ref.enableExperimentalRtl,enableExperimentalRtl=_ref$enableExperiment===void 0?false:_ref$enableExperiment,_ref$enableRemoveTopM=_ref.enableRemoveTopMarginIfNested,enableRemoveTopMarginIfNested=_ref$enableRemoveTopM===void 0?true:_ref$enableRemoveTopM,_ref$enableRemoveBott=_ref.enableRemoveBottomMarginIfNested,enableRemoveBottomMarginIfNested=_ref$enableRemoveBott===void 0?true:_ref$enableRemoveBott,_ref$enableDynamicMar=_ref.enableDynamicMarkerBoxWidth,enableDynamicMarkerBoxWidth=_ref$enableDynamicMar===void 0?false:_ref$enableDynamicMar,props=_objectWithoutProperties(_ref,_excluded);var _tnode$parent,_tnode$parent2,_tnode$parent3,_style$fixedPaddingRu;var listStyleSpecs=(0,_ListStyleSpecsProvider.useListStyleSpecs)();var markers=tnode.markers;var nestLevel=listType==='ol'?markers.olNestLevel:markers.ulNestLevel;var TChildrenRenderer=(0,_TChildrenRendererContext.useTChildrenRenderer)();var rtl=enableExperimentalRtl&&(style.direction==='rtl'||markers.direction==='rtl');var removeTopMarginStyle=enableRemoveTopMarginIfNested&&((_tnode$parent=tnode.parent)===null||_tnode$parent===void 0?void 0:_tnode$parent.tagName)==='li'&&tnode.nodeIndex===0?styles.zeroMarginTop:null;var removeBottomMarginStyle=enableRemoveBottomMarginIfNested&&((_tnode$parent2=tnode.parent)===null||_tnode$parent2===void 0?void 0:_tnode$parent2.tagName)==='li'&&tnode.nodeIndex===((_tnode$parent3=tnode.parent)===null||_tnode$parent3===void 0?void 0:_tnode$parent3.children.length)-1?styles.zeroMarginBottom:null;var ownListType=tnode.styles.webTextFlow.listStyleType;var selectedListType=getFallbackListStyleTypeFromNestLevel(nestLevel)||ownListType||listStyleTypeFallbackRecord[listType];var listStyleType=ownListType||selectedListType;if(typeof __DEV__==='boolean'&&__DEV__&&!(listStyleType in listStyleSpecs)){if(listStyleType.match(/^(\"|')/)){console.warn(\"This library doesn't support strings for list-style-type CSS properties.\");}else{console.warn(\"list-style-type \\\"\"+listStyleType+\"\\\" is not handled by react-native-render-html. \"+'You can easily provide support for this style via \"customListStyleSpecs\" prop.');}}var spec=listStyleType in listStyleSpecs?listStyleSpecs[listStyleType]:listStyleSpecs[selectedListType];var counterRenderer=spec.counterStyleRenderer;var startIndex=getStartIndex(tnode);var markerTextStyle=typeof providedMarkerTextStyle==='object'&&providedMarkerTextStyle?_objectSpread(_objectSpread({},extractMarkerTextStyle(tnode)),providedMarkerTextStyle):extractMarkerTextStyle(tnode);var itemProps=(0,_reactNativeLi.useMarkedList)({counterRenderer:counterRenderer,startIndex:startIndex,markerTextStyle:markerTextStyle,markerBoxStyle:markerBoxStyle,rtlLineReversed:rtl,rtlMarkerReversed:rtl,length:tnode.children.length,dynamicMarkerBoxWidth:enableDynamicMarkerBoxWidth,renderMarker:spec.renderMarker});var markerWidth=itemProps.markerTextWidth;var fixedPaddingRule=rtl?'paddingRight':'paddingLeft';var paddingValue=(_style$fixedPaddingRu=style[fixedPaddingRule])!==null&&_style$fixedPaddingRu!==void 0?_style$fixedPaddingRu:style.paddingLeft;var markerBoxWidthStyle=getMarkerBoxStyle(markerWidth,paddingValue);var renderChild=function renderChild(_ref2){var childElement=_ref2.childElement,key=_ref2.key,index=_ref2.index;return _react.default.createElement(_reactNativeLi.MarkedListItem,_extends({key:key,index:index},itemProps,{markerBoxStyle:[itemProps.markerBoxStyle,markerBoxWidthStyle],markerTextStyle:itemProps.markerTextStyle,enableMarkerClipping:true,style:itemProps.style}),_react.default.createElement(_reactNative.View,{style:styles.shrink},childElement));};var dynamicPaddingStyle=_defineProperty({position:'relative'},fixedPaddingRule,0);return _react.default.createElement(TDefaultRenderer,_extends({tnode:tnode,style:[style,removeTopMarginStyle,removeBottomMarginStyle,dynamicPaddingStyle]},props),_react.default.createElement(TChildrenRenderer,{tchildren:tnode.children,renderChild:renderChild}));}var styles=_reactNative.StyleSheet.create({zeroMarginTop:{marginTop:0},zeroMarginBottom:{marginBottom:0},shrink:{flexShrink:1}});","map":{"version":3,"sources":["ListElement.tsx"],"names":["parsedIndex","tnode","Number","pickMarkerTextStyles","lineHeight","fontSize","color","DEFAULT_TEXT_COLOR","markerBoxWidth","Math","width","listStyleTypeFallbackRecord","ol","ul","markerTextStyle","enableExperimentalRtl","enableRemoveTopMarginIfNested","enableRemoveBottomMarginIfNested","enableDynamicMarkerBoxWidth","props","listStyleSpecs","markers","nestLevel","listType","TChildrenRenderer","rtl","style","removeTopMarginStyle","styles","removeBottomMarginStyle","ownListType","selectedListType","getFallbackListStyleTypeFromNestLevel","listStyleType","console","spec","counterRenderer","startIndex","getStartIndex","extractMarkerTextStyle","providedMarkerTextStyle","itemProps","markerBoxStyle","rtlLineReversed","rtlMarkerReversed","length","dynamicMarkerBoxWidth","renderMarker","markerWidth","fixedPaddingRule","paddingValue","markerBoxWidthStyle","getMarkerBoxStyle","renderChild","index","shrink","dynamicPaddingStyle","position","zeroMarginTop","marginTop","zeroMarginBottom","marginBottom","flexShrink"],"mappings":"k4CACA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAEA,GAAA,CAAA,cAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAOA,GAAA,CAAA,yBAAA,CAAA,OAAA,uCAAA,CACA,GAAA,CAAA,UAAA,CAAA,OAAA,gBAAA,CACA,GAAA,CAAA,KAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA,CACA,GAAA,CAAA,uBAAA,CAAA,OAAA,qCAAA,C,0WAQA,QAAA,CAAA,aAAA,CAAA,KAAA,CAAqC,CACnC,GAAMA,CAAAA,WAAW,CAAGC,KAAK,CAALA,UAAAA,CAAAA,KAAAA,CAChBC,MAAM,CAACD,KAAK,CAALA,UAAAA,CADSA,KACV,CADUA,CAEhBC,MAAM,CAFV,GAAA,CAGA,MAAOA,CAAAA,MAAM,CAANA,KAAAA,CAAAA,WAAAA,EAAAA,CAAAA,CAAP,WAAA,CACD,CAED,GAAMC,CAAAA,oBAAoB,CAAG,CAAA,EAAA,KAAA,CAAA,OAAA,EAAK,CAAA,WAAA,CAAA,UAAA,CAAA,YAAA,CAAA,YAAA,CAAA,aAAA,CAAA,OAAA,CAAlC,YAAkC,CAAL,CAA7B,CAUA,QAAA,CAAA,sBAAA,CAAA,KAAA,CAA8C,CAC5C,MAAO,CAAA,MAAM,CAAN,MAAA,CACL,CACEC,UAAU,CAAE,GADd,GAAA,CAEEC,QAAQ,CAFV,EAAA,CAGEC,KAAK,CAAEC,UAAAA,CAAAA,kBAHT,CADK,CAMLJ,oBAAoB,CAACF,KAAK,CAALA,MAAAA,CANvB,cAMsB,CANf,CAAP,CAQD,CAEM,QAAA,CAAA,iBAAA,CAAA,WAAA,CAAA,YAAA,CAGL,CACA,GAAMO,CAAAA,cAAc,CAClB,MAAA,CAAA,WAAA,GAAA,QAAA,CACI,MAAA,CAAA,YAAA,GAAA,QAAA,CACEC,IAAI,CAAJA,GAAAA,CAAAA,YAAAA,CADF,WACEA,CADF,CADJ,WAAA,CADF,YAAA,CAMA,MAAO,CAAEC,KAAK,CAAEF,cAAT,CAAP,CACD,CAED,GAAMG,CAAAA,2BAGL,CAAG,CACFC,EAAE,CADA,SAAA,CAEFC,EAAE,CAAE,MAFF,CAHJ,CAQe,QAAA,CAAA,WAAA,MAamB,IAbE,CAAA,KAaF,MAbE,KAaF,CAbE,gBAaF,MAbE,gBAaF,CAbE,QAaF,MAbE,QAaF,CAbE,KAaF,MAbE,KAaF,CAbE,qCAaF,MAbE,qCAaF,CAbE,cAaF,MAbE,cAaF,CAbE,uBAaF,MANhCC,eAMgC,4BALhCC,qBAKgC,CALhCA,qBAKgC,gCAbE,KAaF,kDAJhCC,6BAIgC,CAJhCA,6BAIgC,gCAbE,IAaF,kDAHhCC,gCAGgC,CAHhCA,gCAGgC,gCAbE,IAaF,kDAFhCC,2BAEgC,CAFhCA,2BAEgC,gCAbE,KAaF,uBAD7BC,KAC6B,0CAAA,GAAA,CAAA,aAAA,CAAA,cAAA,CAAA,cAAA,CAAA,qBAAA,CAChC,GAAMC,CAAAA,cAAc,CAAG,CAAA,EAAA,uBAAA,CAAvB,iBAAuB,GAAvB,CACA,GAAMC,CAAAA,OAAO,CAAGpB,KAAK,CAArB,OAAA,CACA,GAAMqB,CAAAA,SAAS,CACbC,QAAQ,GAARA,IAAAA,CAAoBF,OAAO,CAA3BE,WAAAA,CAA0CF,OAAO,CADnD,WAAA,CAEA,GAAMG,CAAAA,iBAAiB,CAAG,CAAA,EAAA,yBAAA,CAA1B,oBAA0B,GAA1B,CACA,GAAMC,CAAAA,GAAG,CACPV,qBAAqB,GACpBW,KAAK,CAALA,SAAAA,GAAAA,KAAAA,EAA6BL,OAAO,CAAPA,SAAAA,GAFhC,KACuB,CADvB,CAGA,GAAMM,CAAAA,oBAAoB,CACxBX,6BAA6B,EAC7B,CAAA,CAAA,aAAA,CAAA,KAAK,CAAL,MAAA,IAAA,IAAA,EAAA,aAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,aAAA,CAAA,OAAA,IADAA,IAAAA,EAEAf,KAAK,CAALA,SAAAA,GAFAe,CAAAA,CAGIY,MAAM,CAHVZ,aAAAA,CADF,IAAA,CAMA,GAAMa,CAAAA,uBAAuB,CAC3BZ,gCAAgC,EAChC,CAAA,CAAA,cAAA,CAAA,KAAK,CAAL,MAAA,IAAA,IAAA,EAAA,cAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,cAAA,CAAA,OAAA,IADAA,IAAAA,EAEAhB,KAAK,CAALA,SAAAA,GAAoB,CAAA,CAAA,cAAA,CAAA,KAAK,CAAL,MAAA,IAAA,IAAA,EAAA,cAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,cAAA,CAAA,QAAA,CAAA,MAAA,EAFpBgB,CAAAA,CAGIW,MAAM,CAHVX,gBAAAA,CADF,IAAA,CAMA,GAAMa,CAAAA,WAAW,CAAG7B,KAAK,CAALA,MAAAA,CAAAA,WAAAA,CAApB,aAAA,CAGA,GAAM8B,CAAAA,gBAAgB,CACpBC,qCAAqC,CAArCA,SAAqC,CAArCA,EAAAA,WAAAA,EAEArB,2BAA2B,CAH7B,QAG6B,CAH7B,CAIA,GAAMsB,CAAAA,aAAa,CAAGH,WAAW,EAAjC,gBAAA,CACA,GACE,MAAA,CAAA,OAAA,GAAA,SAAA,EAAA,OAAA,EAEA,EAAEG,aAAa,GAHjB,CAAA,cAGE,CAHF,CAIE,CACA,GAAIA,aAAa,CAAbA,KAAAA,CAAJ,QAAIA,CAAJ,CAAmC,CACjCC,OAAO,CAAPA,IAAAA,CAAAA,0EAAAA,EADF,CAAA,IAIO,CACLA,OAAO,CAAPA,IAAAA,CACG,qBAAD,aAAC,mDADHA,gFAAAA,EAID,CACF,CACD,GAAMC,CAAAA,IAAI,CACRF,aAAa,GAAbA,CAAAA,cAAAA,CACIb,cAAc,CADlBa,aACkB,CADlBA,CAEIb,cAAc,CAHpB,gBAGoB,CAHpB,CAIA,GAAMgB,CAAAA,eAAe,CAAGD,IAAI,CAA5B,oBAAA,CACA,GAAME,CAAAA,UAAU,CAAGC,aAAa,CAAhC,KAAgC,CAAhC,CACA,GAAMxB,CAAAA,eAAe,CACnB,MAAA,CAAA,uBAAA,GAAA,QAAA,EAAA,uBAAA,gCACSyB,sBAAsB,CAA3B,KAA2B,CAD/B,EAC2CC,uBAD3C,EAEID,sBAAsB,CAH5B,KAG4B,CAH5B,CAIA,GAAME,CAAAA,SAAS,CAAG,CAAA,EAAA,cAAA,CAAA,aAAA,EAAc,CAC9BL,eAD8B,CAC9BA,eAD8B,CAE9BC,UAF8B,CAE9BA,UAF8B,CAG9BvB,eAH8B,CAG9BA,eAH8B,CAI9B4B,cAJ8B,CAI9BA,cAJ8B,CAK9BC,eAAe,CALe,GAAA,CAM9BC,iBAAiB,CANa,GAAA,CAO9BC,MAAM,CAAE5C,KAAK,CAALA,QAAAA,CAPsB,MAAA,CAQ9B6C,qBAAqB,CARS,2BAAA,CAS9BC,YAAY,CAAEZ,IAAI,CAACY,YATW,CAAd,CAAlB,CAWA,GAAMC,CAAAA,WAAW,CAAGP,SAAS,CAA7B,eAAA,CACA,GAAMQ,CAAAA,gBAAgB,CAAGxB,GAAG,CAAA,cAAA,CAnEI,aAmEhC,CAIA,GAAMyB,CAAAA,YAAY,CAAA,CAAA,qBAAA,CAAGxB,KAAK,CAAR,gBAAQ,CAAR,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,qBAAA,CAA8BA,KAAK,CAArD,WAAA,CACA,GAAMyB,CAAAA,mBAAmB,CAAGC,iBAAiB,CAAA,WAAA,CAA7C,YAA6C,CAA7C,CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,WAAC,CAAA,YAAD,OAAC,YAAD,CAAC,GAAD,OAAC,GAAD,CAAsBC,KAAtB,OAAsBA,KAAtB,OAClB,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,cAAA,CAAD,cAAA,CAAA,QAAA,CAAA,CACE,GAAG,CADL,GAAA,CAEE,KAAK,CAAEA,KAFT,CAAA,CAAA,SAAA,CAAA,CAIE,cAAc,CAAE,CAACb,SAAS,CAAV,cAAA,CAJlB,mBAIkB,CAJlB,CAKE,eAAe,CAAEA,SAAS,CAL5B,eAAA,CAME,oBAAoB,CANtB,IAAA,CAOE,KAAK,CAAEA,SAAS,CAACf,KAPnB,CAAA,CAAA,CAQE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,KAAK,CAAEE,MAAM,CAAC2B,MAApB,CAAA,CATJ,YASI,CARF,CADkB,EAApB,CAaA,GAAMC,CAAAA,mBAAmB,kBACvBC,QAAQ,CADkB,UAAH,EAEvB,gBAFuB,CAEH,CAFG,CAAzB,CAIA,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,CACE,KAAK,CADP,KAAA,CAEE,KAAK,CAAE,CAAA,KAAA,CAAA,oBAAA,CAAA,uBAAA,CAAA,mBAAA,CAFT,CAAA,CAAA,KAAA,CAAA,CASE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,CAAmB,SAAS,CAAExD,KAAK,CAAnC,QAAA,CAA8C,WAAW,CAAEoD,WAA3D,CAAA,CATF,CADF,CAaD,CAED,GAAMzB,CAAAA,MAAM,CAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB,CAC/B8B,aAAa,CAAE,CAAEC,SAAS,CAAE,CAAb,CADgB,CAE/BC,gBAAgB,CAAE,CAAEC,YAAY,CAAE,CAAhB,CAFa,CAG/BN,MAAM,CAAE,CAAEO,UAAU,CAAE,CAAd,CAHuB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, View } from 'react-native';\nimport React from 'react';\nimport { TBlock, TNode } from '@native-html/transient-render-engine';\nimport { MarkedListItem, useMarkedList } from '@jsamr/react-native-li';\nimport type {\n  DefaultSupportedListStyleType,\n  InternalRendererProps,\n  ListElementConfig,\n  TChildProps\n} from '../shared-types';\nimport { useTChildrenRenderer } from '../context/TChildrenRendererContext';\nimport { DEFAULT_TEXT_COLOR } from '../constants';\nimport pick from 'ramda/src/pick';\nimport { useListStyleSpecs } from '../context/ListStyleSpecsProvider';\n\nexport interface ListElementProps<T extends 'ol' | 'ul'>\n  extends InternalRendererProps<TBlock>,\n    ListElementConfig {\n  listType: T;\n}\n\nfunction getStartIndex(tnode: TNode) {\n  const parsedIndex = tnode.attributes.start\n    ? Number(tnode.attributes.start)\n    : Number.NaN;\n  return Number.isNaN(parsedIndex) ? 1 : parsedIndex;\n}\n\nconst pickMarkerTextStyles = pick([\n  'fontStyle',\n  'fontSize',\n  'fontWeight',\n  'fontFamily',\n  'fontVariant',\n  'color',\n  'lineHeight'\n]);\n\nfunction extractMarkerTextStyle(tnode: TNode) {\n  return Object.assign(\n    {\n      lineHeight: 14 * 1.3,\n      fontSize: 14,\n      color: DEFAULT_TEXT_COLOR\n    },\n    pickMarkerTextStyles(tnode.styles.nativeTextFlow)\n  );\n}\n\nexport function getMarkerBoxStyle(\n  markerWidth: number | false,\n  paddingValue: string | number | undefined\n) {\n  const markerBoxWidth =\n    typeof markerWidth === 'number'\n      ? typeof paddingValue === 'number'\n        ? Math.max(paddingValue, markerWidth)\n        : markerWidth\n      : paddingValue;\n  return { width: markerBoxWidth };\n}\n\nconst listStyleTypeFallbackRecord: Record<\n  'ol' | 'ul',\n  DefaultSupportedListStyleType\n> = {\n  ol: 'decimal',\n  ul: 'disc'\n};\n\nexport default function ListElement({\n  tnode,\n  TDefaultRenderer,\n  listType,\n  style,\n  getFallbackListStyleTypeFromNestLevel,\n  markerBoxStyle,\n  markerTextStyle: providedMarkerTextStyle,\n  enableExperimentalRtl = false,\n  enableRemoveTopMarginIfNested = true,\n  enableRemoveBottomMarginIfNested = true,\n  enableDynamicMarkerBoxWidth = false,\n  ...props\n}: ListElementProps<'ol' | 'ul'>) {\n  const listStyleSpecs = useListStyleSpecs();\n  const markers = tnode.markers;\n  const nestLevel =\n    listType === 'ol' ? markers.olNestLevel : markers.ulNestLevel;\n  const TChildrenRenderer = useTChildrenRenderer();\n  const rtl =\n    enableExperimentalRtl &&\n    (style.direction === 'rtl' || markers.direction === 'rtl');\n  const removeTopMarginStyle =\n    enableRemoveTopMarginIfNested &&\n    tnode.parent?.tagName === 'li' &&\n    tnode.nodeIndex === 0\n      ? styles.zeroMarginTop\n      : null;\n  const removeBottomMarginStyle =\n    enableRemoveBottomMarginIfNested &&\n    tnode.parent?.tagName === 'li' &&\n    tnode.nodeIndex === tnode.parent?.children.length - 1\n      ? styles.zeroMarginBottom\n      : null;\n  const ownListType = tnode.styles.webTextFlow.listStyleType as\n    | DefaultSupportedListStyleType\n    | undefined;\n  const selectedListType =\n    getFallbackListStyleTypeFromNestLevel!(nestLevel) ||\n    ownListType ||\n    listStyleTypeFallbackRecord[listType];\n  const listStyleType = ownListType || selectedListType;\n  if (\n    typeof __DEV__ === 'boolean' &&\n    __DEV__ &&\n    !(listStyleType in listStyleSpecs)\n  ) {\n    if (listStyleType.match(/^(\"|')/)) {\n      console.warn(\n        \"This library doesn't support strings for list-style-type CSS properties.\"\n      );\n    } else {\n      console.warn(\n        `list-style-type \"${listStyleType}\" is not handled by react-native-render-html. ` +\n          'You can easily provide support for this style via \"customListStyleSpecs\" prop.'\n      );\n    }\n  }\n  const spec =\n    listStyleType in listStyleSpecs\n      ? listStyleSpecs[listStyleType]\n      : listStyleSpecs[selectedListType];\n  const counterRenderer = spec.counterStyleRenderer;\n  const startIndex = getStartIndex(tnode);\n  const markerTextStyle =\n    typeof providedMarkerTextStyle === 'object' && providedMarkerTextStyle\n      ? { ...extractMarkerTextStyle(tnode), ...providedMarkerTextStyle }\n      : extractMarkerTextStyle(tnode);\n  const itemProps = useMarkedList({\n    counterRenderer,\n    startIndex,\n    markerTextStyle,\n    markerBoxStyle,\n    rtlLineReversed: rtl,\n    rtlMarkerReversed: rtl,\n    length: tnode.children.length,\n    dynamicMarkerBoxWidth: enableDynamicMarkerBoxWidth,\n    renderMarker: spec.renderMarker\n  });\n  const markerWidth = itemProps.markerTextWidth;\n  const fixedPaddingRule = rtl\n    ? ('paddingRight' as const)\n    : ('paddingLeft' as const);\n  // Fallback to padding-left value on RTL mode\n  const paddingValue = style[fixedPaddingRule] ?? style.paddingLeft;\n  const markerBoxWidthStyle = getMarkerBoxStyle(markerWidth, paddingValue);\n  const renderChild = ({ childElement, key, index }: TChildProps) => (\n    <MarkedListItem\n      key={key}\n      index={index}\n      {...itemProps}\n      markerBoxStyle={[itemProps.markerBoxStyle, markerBoxWidthStyle]}\n      markerTextStyle={itemProps.markerTextStyle}\n      enableMarkerClipping\n      style={itemProps.style}>\n      <View style={styles.shrink}>{childElement}</View>\n    </MarkedListItem>\n  );\n\n  const dynamicPaddingStyle = {\n    position: 'relative' as const,\n    [fixedPaddingRule]: 0\n  };\n  return (\n    <TDefaultRenderer\n      tnode={tnode}\n      style={[\n        style,\n        removeTopMarginStyle,\n        removeBottomMarginStyle,\n        dynamicPaddingStyle\n      ]}\n      {...props}>\n      <TChildrenRenderer tchildren={tnode.children} renderChild={renderChild} />\n    </TDefaultRenderer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  zeroMarginTop: { marginTop: 0 },\n  zeroMarginBottom: { marginBottom: 0 },\n  shrink: { flexShrink: 1 }\n});\n"]},"metadata":{},"sourceType":"script"}