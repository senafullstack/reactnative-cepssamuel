{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{FontAwesome}from'@expo/vector-icons';import*as Font from'expo-font';import*as SplashScreen from'expo-splash-screen';import*as React from'react';export default function useCachedResources(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isLoadingComplete=_React$useState2[0],setLoadingComplete=_React$useState2[1];React.useEffect(function(){function loadResourcesAndDataAsync(){return _regeneratorRuntime.async(function loadResourcesAndDataAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;SplashScreen.preventAutoHideAsync();_context.next=4;return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread(_objectSpread({},FontAwesome.font),{},{'space-mono':require(\"../assets/fonts/SpaceMono-Regular.ttf\")})));case 4:_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.warn(_context.t0);case 9:_context.prev=9;setLoadingComplete(true);SplashScreen.hideAsync();return _context.finish(9);case 13:case\"end\":return _context.stop();}}},null,null,[[0,6,9,13]],Promise);}loadResourcesAndDataAsync();},[]);return isLoadingComplete;}","map":{"version":3,"sources":["C:/xampp/htdocs/nossocantinho/Appcolegio/hooks/useCachedResources.ts"],"names":["FontAwesome","Font","SplashScreen","React","useCachedResources","useState","isLoadingComplete","setLoadingComplete","useEffect","loadResourcesAndDataAsync","preventAutoHideAsync","loadAsync","font","require","console","warn","hideAsync"],"mappings":"89BAAA,OAASA,WAAT,KAA4B,oBAA5B,CACA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,WAAtB,CACA,MAAO,GAAKC,CAAAA,YAAZ,KAA8B,oBAA9B,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,cAAe,SAASC,CAAAA,kBAAT,EAA8B,CAC3C,oBAAgDD,KAAK,CAACE,QAAN,CAAe,KAAf,CAAhD,oDAAOC,iBAAP,qBAA0BC,kBAA1B,qBAGAJ,KAAK,CAACK,SAAN,CAAgB,UAAM,CACpB,QAAeC,CAAAA,yBAAf,sJAEIP,YAAY,CAACQ,oBAAb,GAFJ,iDAKUT,IAAI,CAACU,SAAL,gCACDX,WAAW,CAACY,IADX,MAEJ,aAAcC,OAAO,yCAFjB,GALV,uFAWIC,OAAO,CAACC,IAAR,cAXJ,uBAaIR,kBAAkB,CAAC,IAAD,CAAlB,CACAL,YAAY,CAACc,SAAb,GAdJ,wGAkBAP,yBAAyB,GAC1B,CApBD,CAoBG,EApBH,EAsBA,MAAOH,CAAAA,iBAAP,CACD","sourcesContent":["import { FontAwesome } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...FontAwesome.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}