{"ast":null,"code":"\"use strict\";var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _assertThisInitialized=require(\"@babel/runtime/helpers/assertThisInitialized\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}Object.defineProperty(exports,\"__esModule\",{value:true});exports.LongEnumerationListCSSPropertyValidator=void 0;var _LongCSSPropertyValidator=require(\"./LongCSSPropertyValidator\");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var WHITESPACE_REGEX=/\\s+/;var LongEnumerationListCSSPropertyValidator=function(_LongCSSPropertyValid){_inherits(LongEnumerationListCSSPropertyValidator,_LongCSSPropertyValid);var _super=_createSuper(LongEnumerationListCSSPropertyValidator);function LongEnumerationListCSSPropertyValidator(params,allowedList){var _this;_classCallCheck(this,LongEnumerationListCSSPropertyValidator);_this=_super.call(this,params);_defineProperty(_assertThisInitialized(_this),\"allowedList\",void 0);_this.allowedList=allowedList;return _this;}_createClass(LongEnumerationListCSSPropertyValidator,[{key:\"normalizeRawInlineCSSValue\",value:function normalizeRawInlineCSSValue(value){var input=value.split(WHITESPACE_REGEX);var values=[];for(var _iterator=_createForOfIteratorHelperLoose(input),_step;!(_step=_iterator()).done;){var item=_step.value;if(this.allowedList.indexOf(item)!==-1){values.push(item);}}return values.length>0?values:null;}}]);return LongEnumerationListCSSPropertyValidator;}(_LongCSSPropertyValidator.LongCSSPropertyValidator);exports.LongEnumerationListCSSPropertyValidator=LongEnumerationListCSSPropertyValidator;","map":{"version":3,"sources":["LongEnumerationListCSSPropertyValidator.ts"],"names":["WHITESPACE_REGEX","LongCSSPropertyValidator","constructor","normalizeRawInlineCSSValue","input","value","values"],"mappings":"0wEAAA,GAAA,CAAA,yBAAA,CAAA,OAAA,8BAAA,C,sLAGA,GAAMA,CAAAA,gBAAgB,CAAtB,KAAA,C,GAEO,CAAA,uC,2KAILE,iDAAW,MAAXA,CAAW,WAAXA,CAA0E,yEACxE,uBAAA,MAAA,EADwE,eAAA,+BAAA,aAAA,CAAA,IAAA,EAAA,CAAA,CAExE,MAAA,WAAA,CAAA,WAAA,CAFwE,aAGzE,C,8FAEDC,oCAA0B,KAA1BA,CAA2D,CACzD,GAAMC,CAAAA,KAAK,CAAGC,KAAK,CAALA,KAAAA,CAAd,gBAAcA,CAAd,CACA,GAAMC,CAAAA,MAAgB,CAAtB,EAAA,CACA,kDAAA,KAAA,mCAA0B,IAA1B,CAAA,IAA0B,aACxB,GAAI,KAAA,WAAA,CAAA,OAAA,CAAA,IAAA,IAAmC,CAAvC,CAAA,CAA2C,CACzCA,MAAM,CAANA,IAAAA,CAAAA,IAAAA,EACD,CACF,CACD,MAAOA,CAAAA,MAAM,CAANA,MAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAP,IAAA,CACD,C,qDAhBOL,yBAAAA,CAFH,wB","sourcesContent":["import { LongCSSPropertyValidator } from './LongCSSPropertyValidator';\nimport { CSSPropertyValidatorParams, CSSPropertyModel } from './types';\n\nconst WHITESPACE_REGEX = /\\s+/;\n\nexport class LongEnumerationListCSSPropertyValidator<\n  C extends CSSPropertyModel\n> extends LongCSSPropertyValidator<C, string[]> {\n  public readonly allowedList: ReadonlyArray<string>;\n  constructor(params: CSSPropertyValidatorParams<C>, allowedList: string[]) {\n    super(params);\n    this.allowedList = allowedList;\n  }\n\n  normalizeRawInlineCSSValue(value: string): string[] | null {\n    const input = value.split(WHITESPACE_REGEX);\n    const values: string[] = [];\n    for (const item of input) {\n      if (this.allowedList.indexOf(item) !== -1) {\n        values.push(item);\n      }\n    }\n    return values.length > 0 ? values : null;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}