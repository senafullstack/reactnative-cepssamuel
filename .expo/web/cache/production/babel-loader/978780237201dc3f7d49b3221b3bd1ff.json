{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _TStyles=require(\"../styles/TStyles\");var _markersPrototype=_interopRequireDefault(require(\"./markersPrototype\"));var _tnodeSnapshot=_interopRequireDefault(require(\"./tnodeSnapshot\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function updateNodeIndexes(node,i){node.nodeIndex=i;}var emptyAttrs=Object.freeze({});var emptyClasses=Object.freeze([]);function findNativeRole(ariaRole){if(ariaRole==='img'){return'image';}if(ariaRole==='heading'){return'header';}if(ariaRole==='dialog'){return'alert';}if(ariaRole==='presentation'){return'none';}if(ariaRole==='button'||ariaRole==='switch'||ariaRole==='checkbox'||ariaRole==='radio'||ariaRole==='radiogroup'||ariaRole==='link'||ariaRole==='search'){return ariaRole;}}function setMarkersFromAttributes(targetMarkers,_parentMarkers,_ref){var attributes=_ref.attributes;if('dir'in attributes){targetMarkers.direction=attributes.dir;}if('lang'in attributes){targetMarkers.lang=attributes.lang;}}function transformPropsDefinitionsToSwitch(definition){if(!definition){return null;}return{text:_objectSpread(_objectSpread({},definition.native),definition.text),view:_objectSpread(_objectSpread({},definition.native),definition.view)};}function mergeSwitches(prev,next){if(!prev){return next;}if(!next){return prev;}return{text:_objectSpread(_objectSpread({},prev.text),next.text),view:_objectSpread(_objectSpread({},prev.view),next.view)};}var prototype={children:Object.freeze([]),init:Object.freeze({}),classes:Object.freeze([]),styles:Object.freeze(_TStyles.TStyles.empty()),markers:_markersPrototype.default,__nodeIndex:null,__trimmedLeft:false,__trimmedRight:false,__nativeProps:false,__nativeStyles:false,__webStyles:false,__generateNativePropsFromTNode:function __generateNativePropsFromTNode(){var ret=null;if(this.styles.webTextFlow.userSelect){ret=mergeSwitches(ret,{text:{selectable:this.styles.webTextFlow.userSelect!=='none'}});}if(this.attributes['aria-label']){var accessibilityProps={accessibilityLabel:this.attributes['aria-label']};ret=mergeSwitches(ret,{view:accessibilityProps,text:accessibilityProps});}if(this.attributes.role){var role=this.attributes.role;var accessibilityRole=findNativeRole(role);if(accessibilityRole){var _accessibilityProps={accessibilityRole:accessibilityRole};ret=mergeSwitches(ret,{view:_accessibilityProps,text:_accessibilityProps});}}return ret;},__generateDynamicNativePropsFromModel:function __generateDynamicNativePropsFromModel(autoGeneratedProps){var elm=this.elementModel;if(!elm||!elm.getReactNativeProps){return null;}return transformPropsDefinitionsToSwitch(elm.getReactNativeProps(this,autoGeneratedProps,this.domNode)||null);},get attributes(){var _this$domNode;return((_this$domNode=this.domNode)===null||_this$domNode===void 0?void 0:_this$domNode.attribs)||emptyAttrs;},get hasWhiteSpaceCollapsingEnabled(){return typeof this.styles.webTextFlow.whiteSpace==='string'?this.styles.webTextFlow.whiteSpace==='normal':true;},get contentModel(){var _this$elementModel;return((_this$elementModel=this.elementModel)===null||_this$elementModel===void 0?void 0:_this$elementModel.contentModel)||null;},get parentStyles(){var _this$parent;return this.init.parentStyles||((_this$parent=this.parent)===null||_this$parent===void 0?void 0:_this$parent.styles)||null;},get id(){return this.attributes.id||null;},get domNode(){return this.init.domNode||null;},get elementModel(){return this.init.elementModel;},get tagName(){var _this$init$domNode;return((_this$init$domNode=this.init.domNode)===null||_this$init$domNode===void 0?void 0:_this$init$domNode.name)||null;},get parent(){return this.init.parent||null;},get nodeIndex(){if(this.__nodeIndex===null){this.__nodeIndex=this.init.nodeIndex||0;}return this.__nodeIndex;},get isUnregistered(){return this.init.isUnregistered||false;},set nodeIndex(nodeIndex){this.__nodeIndex=nodeIndex;},bindChildren:function bindChildren(children){var shouldUpdateNodeIndexes=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;this.children=children;if(shouldUpdateNodeIndexes){children.forEach(updateNodeIndexes);}},cloneInitParams:function cloneInitParams(partial){return Object.assign({},this.init,partial);},isCollapsibleLeft:function isCollapsibleLeft(){if(this.children.length){return this.hasWhiteSpaceCollapsingEnabled&&this.children[0].isCollapsibleLeft();}return false;},isCollapsibleRight:function isCollapsibleRight(){if(this.children.length){return this.hasWhiteSpaceCollapsingEnabled&&this.children[this.children.length-1].isCollapsibleRight();}return false;},isEmpty:function isEmpty(){return false;},trimLeft:function trimLeft(){if(!this.__trimmedLeft&&this.children.length){var firstChild=this.children[0];firstChild.trimLeft();if(firstChild.isEmpty()){this.children.splice(0,1);}this.__trimmedLeft=true;}},trimRight:function trimRight(){if(!this.__trimmedRight&&this.children.length){var lastChild=this.children[this.children.length-1];lastChild.trimRight();if(lastChild.isEmpty()){this.children.splice(-1,1);}this.__trimmedRight=true;}},matchContentModel:function matchContentModel(){return false;},spliceChildren:function spliceChildren(indexesToSplice){var offset=0;for(var _iterator=_createForOfIteratorHelperLoose(indexesToSplice),_step;!(_step=_iterator()).done;){var i=_step.value;this.children.splice(i-offset,1);offset+=1;}},collapse:function collapse(){this.collapseChildren();this.bindChildren(this.children,true);},getNativeStyles:function getNativeStyles(){if(this.__nativeStyles===false){this.__nativeStyles=_objectSpread(_objectSpread(_objectSpread(_objectSpread({},this.styles.nativeBlockFlow),this.styles.nativeBlockRet),this.styles.nativeTextFlow),this.styles.nativeTextRet);}return this.__nativeStyles;},getWebStyles:function getWebStyles(){if(this.__webStyles===false){this.__webStyles=_objectSpread(_objectSpread({},this.styles.webTextFlow),this.styles.webBlockRet);}return this.__webStyles;},collapseChildren:function collapseChildren(){return;},snapshot:function snapshot(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _options$withStyles=options.withStyles,withStyles=_options$withStyles===void 0?false:_options$withStyles,_options$withNodeInde=options.withNodeIndex,withNodeIndex=_options$withNodeInde===void 0?false:_options$withNodeInde;return(0,_tnodeSnapshot.default)(this,{withStyles:withStyles,withNodeIndex:withNodeIndex});},hasClass:function hasClass(className){return this.classes.indexOf(className)>-1;},toString:function toString(){return this.snapshot();},setMarkers:function setMarkers(targetMarkers,parentMarkers){var _this$elementModel2,_this$init$context$se,_this$init$context;if((_this$elementModel2=this.elementModel)!==null&&_this$elementModel2!==void 0&&_this$elementModel2.setMarkersForTNode){this.elementModel.setMarkersForTNode(targetMarkers,parentMarkers,this);}setMarkersFromAttributes(targetMarkers,parentMarkers,this);(_this$init$context$se=(_this$init$context=this.init.context).setMarkersForTNode)===null||_this$init$context$se===void 0?void 0:_this$init$context$se.call(_this$init$context,targetMarkers,parentMarkers,this);},getReactNativeProps:function getReactNativeProps(){if(this.__nativeProps===false){var _this$elementModel3;var staticFromModel=transformPropsDefinitionsToSwitch((_this$elementModel3=this.elementModel)===null||_this$elementModel3===void 0?void 0:_this$elementModel3.reactNativeProps);var dynamicFromAttrs=this.__generateNativePropsFromTNode();var autoGeneratedProps=mergeSwitches(staticFromModel,dynamicFromAttrs);var dynamicFromModel=this.__generateDynamicNativePropsFromModel(autoGeneratedProps);this.__nativeProps=mergeSwitches(autoGeneratedProps,dynamicFromModel);}return this.__nativeProps;},initialize:function initialize(init){var _this$attributes$clas;this.init=init;this.classes=((_this$attributes$clas=this.attributes.class)===null||_this$attributes$clas===void 0?void 0:_this$attributes$clas.split(/\\s+/))||emptyClasses;var parentMarkers=init.parent?init.parent.markers:_markersPrototype.default.extend();this.markers=parentMarkers.extend();this.setMarkers(this.markers,parentMarkers,this);if(Object.keys(this.markers).length===0){this.markers=parentMarkers;}this.styles=init.styles||init.context.stylesMerger.buildStyles(this.attributes.style,this.parentStyles||null,this);}};var TNodeCtor=function TNode(type,displayName,extraAccessors){this.type=type;this.displayName=displayName;extraAccessors&&Object.defineProperties(this,extraAccessors);};TNodeCtor.prototype=prototype;var _default=TNodeCtor;exports.default=_default;","map":{"version":3,"sources":["TNodeCtor.ts"],"names":["node","emptyAttrs","Object","emptyClasses","ariaRole","attributes","targetMarkers","text","definition","view","prev","next","prototype","children","init","classes","styles","TStyles","markers","markersPrototype","__nodeIndex","__trimmedLeft","__trimmedRight","__nativeProps","__nativeStyles","__webStyles","__generateNativePropsFromTNode","ret","mergeSwitches","selectable","accessibilityProps","accessibilityLabel","role","accessibilityRole","findNativeRole","__generateDynamicNativePropsFromModel","elm","transformPropsDefinitionsToSwitch","bindChildren","shouldUpdateNodeIndexes","cloneInitParams","isCollapsibleLeft","isCollapsibleRight","isEmpty","trimLeft","firstChild","trimRight","lastChild","matchContentModel","spliceChildren","offset","i","collapse","getNativeStyles","nativeTextRet","getWebStyles","webBlockRet","collapseChildren","snapshot","options","withStyles","withNodeIndex","hasClass","toString","setMarkers","setMarkersFromAttributes","getReactNativeProps","staticFromModel","dynamicFromAttrs","autoGeneratedProps","dynamicFromModel","initialize","parentMarkers","TNodeCtor","extraAccessors"],"mappings":"2+DAKA,GAAA,CAAA,QAAA,CAAA,OAAA,qBAAA,CACA,GAAA,CAAA,iBAAA,CAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA,CACA,GAAA,CAAA,cAAA,CAAA,sBAAA,CAAA,OAAA,mBAAA,CAAA,C,mFAkBA,QAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,CAAA,CAAgE,CAC9DA,IAAI,CAAJA,SAAAA,CAAAA,CAAAA,CACD,CAED,GAAMC,CAAAA,UAAU,CAAGC,MAAM,CAANA,MAAAA,CAAnB,EAAmBA,CAAnB,CACA,GAAMC,CAAAA,YAAY,CAAGD,MAAM,CAANA,MAAAA,CAArB,EAAqBA,CAArB,CAEA,QAAA,CAAA,cAAA,CAAA,QAAA,CAAyE,CACvE,GAAIE,QAAQ,GAAZ,KAAA,CAAwB,CACtB,MAAA,OAAA,CACD,CACD,GAAIA,QAAQ,GAAZ,SAAA,CAA4B,CAC1B,MAAA,QAAA,CACD,CACD,GAAIA,QAAQ,GAAZ,QAAA,CAA2B,CACzB,MAAA,OAAA,CACD,CACD,GAAIA,QAAQ,GAAZ,cAAA,CAAiC,CAC/B,MAAA,MAAA,CACD,CACD,GACEA,QAAQ,GAARA,QAAAA,EACAA,QAAQ,GADRA,QAAAA,EAEAA,QAAQ,GAFRA,UAAAA,EAGAA,QAAQ,GAHRA,OAAAA,EAIAA,QAAQ,GAJRA,YAAAA,EAKAA,QAAQ,GALRA,MAAAA,EAMAA,QAAQ,GAPV,QAAA,CAQE,CACA,MAAA,CAAA,QAAA,CACD,CACF,CAED,QAAA,CAAA,wBAAA,CAAA,aAAA,CAAA,cAAA,MAIQ,IADJC,CAAAA,UACI,MADJA,UACI,CACN,GAAI,OAAJ,CAAA,UAAA,CAAyB,CACvBC,aAAa,CAAbA,SAAAA,CAA0BD,UAAU,CAApCC,GAAAA,CACD,CACD,GAAI,QAAJ,CAAA,UAAA,CAA0B,CACxBA,aAAa,CAAbA,IAAAA,CAAqBD,UAAU,CAA/BC,IAAAA,CACD,CACF,CAED,QAAA,CAAA,iCAAA,CAAA,UAAA,CAEiC,CAC/B,GAAI,CAAJ,UAAA,CAAiB,CACf,MAAA,KAAA,CACD,CACD,MAAO,CACLC,IAAI,gCACCC,UAAU,CADT,MAAF,EAECA,UAAU,CAACD,IAFZ,CADC,CAKLE,IAAI,gCACCD,UAAU,CADT,MAAF,EAECA,UAAU,CAACC,IAFZ,CALC,CAAP,CAUD,CAED,QAAA,CAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAGE,CACA,GAAI,CAAJ,IAAA,CAAW,CACT,MAAA,CAAA,IAAA,CACD,CACD,GAAI,CAAJ,IAAA,CAAW,CACT,MAAA,CAAA,IAAA,CACD,CACD,MAAO,CACLF,IAAI,gCACCG,IAAI,CADH,IAAF,EAECC,IAAI,CAACJ,IAFN,CADC,CAKLE,IAAI,gCACCC,IAAI,CADH,IAAF,EAECC,IAAI,CAACF,IAFN,CALC,CAAP,CAUD,CAED,GAAMG,CAAAA,SAAkD,CAAG,CACzDC,QAAQ,CAAEX,MAAM,CAANA,MAAAA,CAD+C,EAC/CA,CAD+C,CAEzDY,IAAI,CAAEZ,MAAM,CAANA,MAAAA,CAFmD,EAEnDA,CAFmD,CAGzDa,OAAO,CAAEb,MAAM,CAANA,MAAAA,CAHgD,EAGhDA,CAHgD,CAIzDc,MAAM,CAAEd,MAAM,CAANA,MAAAA,CAAce,QAAAA,CAAAA,OAAAA,CAJmC,KAInCA,EAAdf,CAJiD,CAKzDgB,OAAO,CAAEC,iBAAAA,CALgD,OAAA,CAMzDC,WAAW,CAN8C,IAAA,CAOzDC,aAAa,CAP4C,KAAA,CAQzDC,cAAc,CAR2C,KAAA,CASzDC,aAAa,CAT4C,KAAA,CAUzDC,cAAc,CAV2C,KAAA,CAWzDC,WAAW,CAX8C,KAAA,CAYzDC,8BAZyD,0CAYxB,CAC/B,GAAIC,CAAAA,GAAkC,CAAtC,IAAA,CACA,GAAI,KAAA,MAAA,CAAA,WAAA,CAAJ,UAAA,CAAwC,CACtCA,GAAG,CAAGC,aAAa,CAAA,GAAA,CAAM,CACvBrB,IAAI,CAAE,CACJsB,UAAU,CAAE,KAAA,MAAA,CAAA,WAAA,CAAA,UAAA,GAAuC,MAD/C,CADiB,CAAN,CAAnBF,CAKD,CACD,GAAI,KAAA,UAAA,CAAJ,YAAI,CAAJ,CAAmC,CACjC,GAAMG,CAAAA,kBAAsC,CAAG,CAC7CC,kBAAkB,CAAE,KAAA,UAAA,CAAA,YAAA,CADyB,CAA/C,CAGAJ,GAAG,CAAGC,aAAa,CAAA,GAAA,CAAM,CACvBnB,IAAI,CADmB,kBAAA,CAEvBF,IAAI,CAAEuB,kBAFiB,CAAN,CAAnBH,CAID,CACD,GAAI,KAAA,UAAA,CAAJ,IAAA,CAA0B,CACxB,GAAMK,CAAAA,IAAI,CAAG,KAAA,UAAA,CAAb,IAAA,CACA,GAAMC,CAAAA,iBAAiB,CAAGC,cAAc,CAAxC,IAAwC,CAAxC,CACA,GAAA,iBAAA,CAAuB,CACrB,GAAMJ,CAAAA,mBAAsC,CAAG,CAC7CG,iBAAiB,CAAEA,iBAD0B,CAA/C,CAGAN,GAAG,CAAGC,aAAa,CAAA,GAAA,CAAM,CACvBnB,IAAI,CADmB,mBAAA,CAEvBF,IAAI,CAAEuB,mBAFiB,CAAN,CAAnBH,CAID,CACF,CACD,MAAA,CAAA,GAAA,CA3CuD,CAAA,CA8CzDQ,qCA9CyD,gDA8CpB,kBA9CoB,CA8CC,CACxD,GAAMC,CAAAA,GAAG,CAAG,KAAZ,YAAA,CACA,GAAI,CAAA,GAAA,EAAQ,CAACA,GAAG,CAAhB,mBAAA,CAAsC,CACpC,MAAA,KAAA,CACD,CACD,MAAOC,CAAAA,iCAAiC,CACtCD,GAAG,CAAHA,mBAAAA,CAAAA,IAAAA,CAAAA,kBAAAA,CAAyD,KAAzDA,OAAAA,GADF,IAAwC,CAAxC,CAnDuD,CAAA,CAyDzD,GAAA,CAAA,UAAA,EAAiB,CAAA,GAAA,CAAA,aAAA,CACf,MAAO,CAAA,CAAA,aAAA,CAAA,KAAA,OAAA,IAAA,IAAA,EAAA,aAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,aAAA,CAAA,OAAA,GAAP,UAAA,CA1DuD,CAAA,CA6DzD,GAAA,CAAA,8BAAA,EAAqC,CACnC,MAAO,OAAO,MAAA,MAAA,CAAA,WAAA,CAAP,UAAA,GAAA,QAAA,CACH,KAAA,MAAA,CAAA,WAAA,CAAA,UAAA,GADG,QAAA,CAAP,IAAA,CA9DuD,CAAA,CAmEzD,GAAA,CAAA,YAAA,EAAmB,CAAA,GAAA,CAAA,kBAAA,CACjB,MAAO,CAAA,CAAA,kBAAA,CAAA,KAAA,YAAA,IAAA,IAAA,EAAA,kBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,YAAA,GAAP,IAAA,CApEuD,CAAA,CAuEzD,GAAA,CAAA,YAAA,EAAmB,CAAA,GAAA,CAAA,YAAA,CACjB,MAAO,MAAA,IAAA,CAAA,YAAA,GAAA,CAAA,YAAA,CAA0B,KAA1B,MAAA,IAAA,IAAA,EAAA,YAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAA0B,YAAA,CAA1B,MAAA,GAAP,IAAA,CAxEuD,CAAA,CA2EzD,GAAA,CAAA,EAAA,EAAS,CACP,MAAO,MAAA,UAAA,CAAA,EAAA,EAAP,IAAA,CA5EuD,CAAA,CA+EzD,GAAA,CAAA,OAAA,EAAc,CACZ,MAAO,MAAA,IAAA,CAAA,OAAA,EAAP,IAAA,CAhFuD,CAAA,CAmFzD,GAAA,CAAA,YAAA,EAAmB,CACjB,MAAO,MAAA,IAAA,CAAP,YAAA,CApFuD,CAAA,CAuFzD,GAAA,CAAA,OAAA,EAAc,CAAA,GAAA,CAAA,kBAAA,CACZ,MAAO,CAAA,CAAA,kBAAA,CAAA,KAAA,IAAA,CAAA,OAAA,IAAA,IAAA,EAAA,kBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,IAAA,GAAP,IAAA,CAxFuD,CAAA,CA2FzD,GAAA,CAAA,MAAA,EAAa,CACX,MAAQ,MAAA,IAAA,CAAD,MAAC,EAAR,IAAA,CA5FuD,CAAA,CA+FzD,GAAA,CAAA,SAAA,EAAgB,CACd,GAAI,KAAA,WAAA,GAAJ,IAAA,CAA+B,CAC7B,KAAA,WAAA,CAAmB,KAAA,IAAA,CAAA,SAAA,EAAnB,CAAA,CACD,CACD,MAAO,MAAP,WAAA,CAnGuD,CAAA,CAsGzD,GAAA,CAAA,cAAA,EAAqB,CACnB,MAAO,MAAA,IAAA,CAAA,cAAA,EAAP,KAAA,CAvGuD,CAAA,CA0GzD,GAAA,CAAA,SAAA,CAAA,SAAA,CAAiC,CAC/B,KAAA,WAAA,CAAA,SAAA,CA3GuD,CAAA,CA8GzDE,YA9GyD,uBA8G7C,QA9G6C,CA8GD,IAAjCC,CAAAA,uBAAiC,2DAA5C,KAA4C,CAEtD,KAAA,QAAA,CAAA,QAAA,CACA,GAAA,uBAAA,CAA6B,CAC3B1B,QAAQ,CAARA,OAAAA,CAAAA,iBAAAA,EACD,CAnHsD,CAAA,CAsHzD2B,eAtHyD,0BAsH1C,OAtH0C,CAsHhC,CACvB,MAAOtC,CAAAA,MAAM,CAANA,MAAAA,CAAAA,EAAAA,CAAkB,KAAlBA,IAAAA,CAAP,OAAOA,CAAP,CAvHuD,CAAA,CA0HzDuC,iBA1HyD,6BA0HrC,CAClB,GAAI,KAAA,QAAA,CAAJ,MAAA,CAA0B,CACxB,MACE,MAAA,8BAAA,EACA,KAAA,QAAA,CAAA,CAAA,EAFF,iBAEE,EAFF,CAID,CACD,MAAA,MAAA,CAjIuD,CAAA,CAoIzDC,kBApIyD,8BAoIpC,CACnB,GAAI,KAAA,QAAA,CAAJ,MAAA,CAA0B,CACxB,MACE,MAAA,8BAAA,EACA,KAAA,QAAA,CAAc,KAAA,QAAA,CAAA,MAAA,CAAd,CAAA,EAFF,kBAEE,EAFF,CAID,CACD,MAAA,MAAA,CA3IuD,CAAA,CA8IzDC,OA9IyD,mBA8I/C,CACR,MAAA,MAAA,CA/IuD,CAAA,CAkJzDC,QAlJyD,oBAkJ9C,CACT,GAAI,CAAC,KAAD,aAAA,EAAuB,KAAA,QAAA,CAA3B,MAAA,CAAiD,CAC/C,GAAMC,CAAAA,UAAU,CAAG,KAAA,QAAA,CAAnB,CAAmB,CAAnB,CACAA,UAAU,CAAVA,QAAAA,GACA,GAAIA,UAAU,CAAd,OAAIA,EAAJ,CAA0B,CAExB,KAAA,QAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EACD,CACD,KAAA,aAAA,CAAA,IAAA,CACD,CA3JsD,CAAA,CA8JzDC,SA9JyD,qBA8J7C,CACV,GAAI,CAAC,KAAD,cAAA,EAAwB,KAAA,QAAA,CAA5B,MAAA,CAAkD,CAChD,GAAMC,CAAAA,SAAS,CAAG,KAAA,QAAA,CAAc,KAAA,QAAA,CAAA,MAAA,CAAhC,CAAkB,CAAlB,CACAA,SAAS,CAATA,SAAAA,GACA,GAAIA,SAAS,CAAb,OAAIA,EAAJ,CAAyB,CAEvB,KAAA,QAAA,CAAA,MAAA,CAAqB,CAArB,CAAA,CAAA,CAAA,EACD,CACD,KAAA,cAAA,CAAA,IAAA,CACD,CAvKsD,CAAA,CA0KzDC,iBA1KyD,6BA0KrC,CAClB,MAAA,MAAA,CA3KuD,CAAA,CA8KzDC,cA9KyD,yBA8K3C,eA9K2C,CA8KzB,CAC9B,GAAIC,CAAAA,MAAM,CAAV,CAAA,CACA,kDAAA,eAAA,mCAAiC,IAAjC,CAAA,CAAiC,aAE/B,KAAA,QAAA,CAAA,MAAA,CAAqBC,CAAC,CAAtB,MAAA,CAAA,CAAA,EACAD,MAAM,EAANA,CAAAA,CACD,CApLsD,CAAA,CAuLzDE,QAvLyD,oBAuL9C,CACT,KAAA,gBAAA,GACA,KAAA,YAAA,CAAkB,KAAlB,QAAA,CAAA,IAAA,EAzLuD,CAAA,CA4LzDC,eA5LyD,2BA4LvC,CAChB,GAAI,KAAA,cAAA,GAAJ,KAAA,CAAmC,CACjC,KAAA,cAAA,4DACK,KAAA,MAAA,CADiB,eAAtB,EAEK,KAAA,MAAA,CAFiB,cAAtB,EAGK,KAAA,MAAA,CAHiB,cAAtB,EAIK,KAAA,MAAA,CAAYC,aAJjB,EAMD,CACD,MAAO,MAAP,cAAA,CArMuD,CAAA,CAwMzDC,YAxMyD,wBAwM1C,CACb,GAAI,KAAA,WAAA,GAAJ,KAAA,CAAgC,CAC9B,KAAA,WAAA,gCACK,KAAA,MAAA,CADc,WAAnB,EAEK,KAAA,MAAA,CAAYC,WAFjB,EAID,CACD,MAAO,MAAP,WAAA,CA/MuD,CAAA,CAkNzDC,gBAlNyD,4BAkNtC,CACjB,OAnNuD,CAAA,CAsNzDC,QAtNyD,oBAsNlC,IAAdC,CAAAA,OAAc,2DAAf,EAAe,CACrB,wBAAA,OAAA,CAAQC,UAAR,CAAQA,UAAR,8BAAM,KAAN,2CAAA,OAAA,CAA4BC,aAA5B,CAA4BA,aAA5B,gCAA4C,KAA5C,uBACA,MAAO,CAAA,EAAA,cAAA,CAAA,OAAA,EAAA,IAAA,CAA2B,CAAED,UAAF,CAAEA,UAAF,CAAcC,aAAAA,CAAAA,aAAd,CAA3B,CAAP,CAxNuD,CAAA,CA2NzDC,QA3NyD,mBA2NjD,SA3NiD,CA2NrC,CAClB,MAAO,MAAA,OAAA,CAAA,OAAA,CAAA,SAAA,EAAkC,CAAzC,CAAA,CA5NuD,CAAA,CA+NzDC,QA/NyD,oBA+N9C,CACT,MAAO,MAAP,QAAO,EAAP,CAhOuD,CAAA,CAmOzDC,UAnOyD,qBAmO/C,aAnO+C,CAmO/C,aAnO+C,CAmOhB,CAAA,GAAA,CAAA,mBAAA,CAAA,qBAAA,CAAA,kBAAA,CACvC,GAAA,CAAA,mBAAA,CAAI,KAAJ,YAAA,IAAA,IAAA,EAAA,mBAAA,GAAA,IAAA,EAAA,EAAI,mBAAA,CAAJ,kBAAA,CAA2C,CACzC,KAAA,YAAA,CAAA,kBAAA,CAAA,aAAA,CAAA,aAAA,CAAA,IAAA,EACD,CACDC,wBAAwB,CAAA,aAAA,CAAA,aAAA,CAAxBA,IAAwB,CAAxBA,CACA,CAAA,qBAAA,CAAA,CAAA,kBAAA,CAAA,KAAA,IAAA,CAAA,OAAA,EAAA,kBAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,aAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAxOuD,CAAA,CA2OzDC,mBA3OyD,+BA2OnC,CACpB,GAAI,KAAA,aAAA,GAAJ,KAAA,CAAkC,CAAA,GAAA,CAAA,mBAAA,CAChC,GAAMC,CAAAA,eAAe,CAAG9B,iCAAiC,CAAA,CAAA,mBAAA,CACvD,KADuD,YAAA,IAAA,IAAA,EAAA,mBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CACvD,mBAAA,CADF,gBAAyD,CAAzD,CAGA,GAAM+B,CAAAA,gBAAgB,CAAG,KAAzB,8BAAyB,EAAzB,CACA,GAAMC,CAAAA,kBAAkB,CAAGzC,aAAa,CAAA,eAAA,CAAxC,gBAAwC,CAAxC,CAIA,GAAM0C,CAAAA,gBAAgB,CACpB,KAAA,qCAAA,CADF,kBACE,CADF,CAEA,KAAA,aAAA,CAAqB1C,aAAa,CAAA,kBAAA,CAAlC,gBAAkC,CAAlC,CACD,CACD,MAAO,MAAP,aAAA,CAzPuD,CAAA,CA4PzD2C,UA5PyD,qBA4P/C,IA5P+C,CA+PvD,CAAA,GAAA,CAAA,qBAAA,CACA,KAAA,IAAA,CAAA,IAAA,CACA,KAAA,OAAA,CAAe,CAAA,CAAA,qBAAA,CAAA,KAAA,UAAA,CAAA,KAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,KAAA,CAAA,GAAf,YAAA,CACA,GAAMC,CAAAA,aAAa,CAAG1D,IAAI,CAAJA,MAAAA,CAClBA,IAAI,CAAJA,MAAAA,CADkBA,OAAAA,CAElBK,iBAAAA,CAAAA,OAAAA,CAFJ,MAEIA,EAFJ,CAGA,KAAA,OAAA,CAAeqD,aAAa,CAA5B,MAAeA,EAAf,CACA,KAAA,UAAA,CAAgB,KAAhB,OAAA,CAAA,aAAA,CAPA,IAOA,EAGA,GAAItE,MAAM,CAANA,IAAAA,CAAY,KAAZA,OAAAA,EAAAA,MAAAA,GAAJ,CAAA,CAA4C,CAC1C,KAAA,OAAA,CAAA,aAAA,CACD,CACD,KAAA,MAAA,CACEY,IAAI,CAAJA,MAAAA,EACAA,IAAI,CAAJA,OAAAA,CAAAA,YAAAA,CAAAA,WAAAA,CACE,KAAA,UAAA,CADFA,KAAAA,CAEE,KAAA,YAAA,EAFFA,IAAAA,CAFF,IAEEA,CAFF,CAOD,CAnRwD,CAA3D,CAsRA,GAAM2D,CAAAA,SAAS,CAAG,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,WAAA,CAAA,cAAA,CAUhB,CACA,KAAA,IAAA,CAAA,IAAA,CACA,KAAA,WAAA,CAAA,WAAA,CACAC,cAAc,EAAIxE,MAAM,CAANA,gBAAAA,CAAAA,IAAAA,CAAlBwE,cAAkBxE,CAAlBwE,CAbF,CAAA,CAgBAD,SAAS,CAATA,SAAAA,CAAAA,SAAAA,C,aAEeA,S","sourcesContent":["import { AccessibilityProps, AccessibilityRole } from 'react-native';\nimport {\n  ReactNativePropsSwitch,\n  ReactNativePropsDefinitions\n} from '../helper-types';\nimport { TStyles } from '../styles/TStyles';\nimport markersPrototype from './markersPrototype';\nimport tnodeToString from './tnodeSnapshot';\nimport {\n  Markers,\n  TNodeDescriptor,\n  TNodeImpl,\n  TNodeInit,\n  TNodeType\n} from './tree-types';\n\nexport type GenericTNodeCtor<Init = TNodeInit, Impl = TNodeImpl> = {\n  new (init: Init): Impl;\n  prototype: Impl;\n};\n\nexport type Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\nfunction updateNodeIndexes(node: Mutable<TNodeImpl>, i: number) {\n  node.nodeIndex = i;\n}\n\nconst emptyAttrs = Object.freeze({});\nconst emptyClasses = Object.freeze([]);\n\nfunction findNativeRole(ariaRole: string): AccessibilityRole | undefined {\n  if (ariaRole === 'img') {\n    return 'image';\n  }\n  if (ariaRole === 'heading') {\n    return 'header';\n  }\n  if (ariaRole === 'dialog') {\n    return 'alert';\n  }\n  if (ariaRole === 'presentation') {\n    return 'none';\n  }\n  if (\n    ariaRole === 'button' ||\n    ariaRole === 'switch' ||\n    ariaRole === 'checkbox' ||\n    ariaRole === 'radio' ||\n    ariaRole === 'radiogroup' ||\n    ariaRole === 'link' ||\n    ariaRole === 'search'\n  ) {\n    return ariaRole;\n  }\n}\n\nfunction setMarkersFromAttributes(\n  targetMarkers: Markers,\n  _parentMarkers: Readonly<Markers>,\n  { attributes }: TNodeDescriptor\n): void {\n  if ('dir' in attributes) {\n    targetMarkers.direction = attributes.dir as 'rtl';\n  }\n  if ('lang' in attributes) {\n    targetMarkers.lang = attributes.lang;\n  }\n}\n\nfunction transformPropsDefinitionsToSwitch(\n  definition?: ReactNativePropsDefinitions | null\n): ReactNativePropsSwitch | null {\n  if (!definition) {\n    return null;\n  }\n  return {\n    text: {\n      ...definition.native,\n      ...definition.text\n    },\n    view: {\n      ...definition.native,\n      ...definition.view\n    }\n  };\n}\n\nfunction mergeSwitches(\n  prev: ReactNativePropsSwitch | null,\n  next: ReactNativePropsSwitch | null\n) {\n  if (!prev) {\n    return next;\n  }\n  if (!next) {\n    return prev;\n  }\n  return {\n    text: {\n      ...prev.text,\n      ...next.text\n    },\n    view: {\n      ...prev.view,\n      ...next.view\n    }\n  };\n}\n\nconst prototype: Omit<TNodeImpl, 'displayName' | 'type'> = {\n  children: Object.freeze([]) as any,\n  init: Object.freeze({}) as any,\n  classes: Object.freeze([]) as any,\n  styles: Object.freeze(TStyles.empty()) as any,\n  markers: markersPrototype,\n  __nodeIndex: null,\n  __trimmedLeft: false,\n  __trimmedRight: false,\n  __nativeProps: false,\n  __nativeStyles: false,\n  __webStyles: false,\n  __generateNativePropsFromTNode() {\n    let ret: ReactNativePropsSwitch | null = null;\n    if (this.styles.webTextFlow.userSelect) {\n      ret = mergeSwitches(ret, {\n        text: {\n          selectable: this.styles.webTextFlow.userSelect !== 'none'\n        }\n      });\n    }\n    if (this.attributes['aria-label']) {\n      const accessibilityProps: AccessibilityProps = {\n        accessibilityLabel: this.attributes['aria-label']\n      };\n      ret = mergeSwitches(ret, {\n        view: accessibilityProps,\n        text: accessibilityProps\n      });\n    }\n    if (this.attributes.role) {\n      const role = this.attributes.role;\n      const accessibilityRole = findNativeRole(role);\n      if (accessibilityRole) {\n        const accessibilityProps: AccessibilityProps = {\n          accessibilityRole: accessibilityRole\n        };\n        ret = mergeSwitches(ret, {\n          view: accessibilityProps,\n          text: accessibilityProps\n        });\n      }\n    }\n    return ret;\n  },\n\n  __generateDynamicNativePropsFromModel(autoGeneratedProps) {\n    const elm = this.elementModel;\n    if (!elm || !elm.getReactNativeProps) {\n      return null;\n    }\n    return transformPropsDefinitionsToSwitch(\n      elm.getReactNativeProps(this as any, autoGeneratedProps, this.domNode!) ||\n        null\n    );\n  },\n\n  get attributes() {\n    return this.domNode?.attribs || emptyAttrs;\n  },\n\n  get hasWhiteSpaceCollapsingEnabled() {\n    return typeof this.styles.webTextFlow.whiteSpace === 'string'\n      ? this.styles.webTextFlow.whiteSpace === 'normal'\n      : true;\n  },\n\n  get contentModel() {\n    return this.elementModel?.contentModel || null;\n  },\n\n  get parentStyles() {\n    return this.init.parentStyles || this.parent?.styles || null;\n  },\n\n  get id() {\n    return this.attributes.id || null;\n  },\n\n  get domNode() {\n    return this.init.domNode || null;\n  },\n\n  get elementModel() {\n    return this.init.elementModel;\n  },\n\n  get tagName() {\n    return this.init.domNode?.name || null;\n  },\n\n  get parent() {\n    return (this.init.parent as any) || null;\n  },\n\n  get nodeIndex() {\n    if (this.__nodeIndex === null) {\n      this.__nodeIndex = this.init.nodeIndex || 0;\n    }\n    return this.__nodeIndex;\n  },\n\n  get isUnregistered() {\n    return this.init.isUnregistered || false;\n  },\n\n  set nodeIndex(nodeIndex: number) {\n    this.__nodeIndex = nodeIndex;\n  },\n\n  bindChildren(children, shouldUpdateNodeIndexes = false) {\n    //@ts-ignore\n    this.children = children;\n    if (shouldUpdateNodeIndexes) {\n      children.forEach(updateNodeIndexes);\n    }\n  },\n\n  cloneInitParams(partial) {\n    return Object.assign({}, this.init, partial) as any;\n  },\n\n  isCollapsibleLeft() {\n    if (this.children.length) {\n      return (\n        this.hasWhiteSpaceCollapsingEnabled &&\n        this.children[0].isCollapsibleLeft()\n      );\n    }\n    return false;\n  },\n\n  isCollapsibleRight() {\n    if (this.children.length) {\n      return (\n        this.hasWhiteSpaceCollapsingEnabled &&\n        this.children[this.children.length - 1].isCollapsibleRight()\n      );\n    }\n    return false;\n  },\n\n  isEmpty() {\n    return false;\n  },\n\n  trimLeft() {\n    if (!this.__trimmedLeft && this.children.length) {\n      const firstChild = this.children[0];\n      firstChild.trimLeft();\n      if (firstChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(0, 1);\n      }\n      this.__trimmedLeft = true;\n    }\n  },\n\n  trimRight() {\n    if (!this.__trimmedRight && this.children.length) {\n      const lastChild = this.children[this.children.length - 1];\n      lastChild.trimRight();\n      if (lastChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(-1, 1);\n      }\n      this.__trimmedRight = true;\n    }\n  },\n\n  matchContentModel() {\n    return false;\n  },\n\n  spliceChildren(indexesToSplice) {\n    let offset = 0;\n    for (const i of indexesToSplice) {\n      //@ts-ignore\n      this.children.splice(i - offset, 1);\n      offset += 1;\n    }\n  },\n\n  collapse() {\n    this.collapseChildren();\n    this.bindChildren(this.children, true);\n  },\n\n  getNativeStyles() {\n    if (this.__nativeStyles === false) {\n      this.__nativeStyles = {\n        ...this.styles.nativeBlockFlow,\n        ...this.styles.nativeBlockRet,\n        ...this.styles.nativeTextFlow,\n        ...this.styles.nativeTextRet\n      };\n    }\n    return this.__nativeStyles;\n  },\n\n  getWebStyles() {\n    if (this.__webStyles === false) {\n      this.__webStyles = {\n        ...this.styles.webTextFlow,\n        ...this.styles.webBlockRet\n      } as ReturnType<TNodeImpl['getWebStyles']>;\n    }\n    return this.__webStyles;\n  },\n\n  collapseChildren() {\n    return;\n  },\n\n  snapshot(options = {}) {\n    const { withStyles = false, withNodeIndex = false } = options;\n    return tnodeToString(this as any, { withStyles, withNodeIndex });\n  },\n\n  hasClass(className) {\n    return this.classes.indexOf(className) > -1;\n  },\n\n  toString() {\n    return this.snapshot();\n  },\n\n  setMarkers(targetMarkers, parentMarkers) {\n    if (this.elementModel?.setMarkersForTNode) {\n      this.elementModel.setMarkersForTNode(targetMarkers, parentMarkers, this);\n    }\n    setMarkersFromAttributes(targetMarkers, parentMarkers, this);\n    this.init.context.setMarkersForTNode?.(targetMarkers, parentMarkers, this);\n  },\n\n  getReactNativeProps() {\n    if (this.__nativeProps === false) {\n      const staticFromModel = transformPropsDefinitionsToSwitch(\n        this.elementModel?.reactNativeProps\n      );\n      const dynamicFromAttrs = this.__generateNativePropsFromTNode();\n      const autoGeneratedProps = mergeSwitches(\n        staticFromModel,\n        dynamicFromAttrs\n      );\n      const dynamicFromModel =\n        this.__generateDynamicNativePropsFromModel(autoGeneratedProps);\n      this.__nativeProps = mergeSwitches(autoGeneratedProps, dynamicFromModel);\n    }\n    return this.__nativeProps;\n  },\n\n  initialize<Impl extends TNodeImpl<TNodeInit> = TNodeImpl>(\n    this: Mutable<Impl>,\n    init: Impl['init']\n  ) {\n    this.init = init;\n    this.classes = this.attributes.class?.split(/\\s+/) || emptyClasses;\n    const parentMarkers = init.parent\n      ? init.parent.markers\n      : markersPrototype.extend();\n    this.markers = parentMarkers.extend();\n    this.setMarkers(this.markers, parentMarkers, this);\n    // Avoid very long prototype chains by assigning parent to current\n    // when current has no own properties\n    if (Object.keys(this.markers).length === 0) {\n      this.markers = parentMarkers;\n    }\n    this.styles =\n      init.styles ||\n      init.context.stylesMerger.buildStyles(\n        this.attributes.style,\n        this.parentStyles || null,\n        this\n      );\n  }\n};\n\nconst TNodeCtor = function TNode<Impl extends TNodeImpl = TNodeImpl>(\n  this: Mutable<TNodeImpl>,\n  type: TNodeType,\n  displayName: string,\n  extraAccessors?: {\n    [k in Exclude<keyof Impl, keyof TNodeImpl>]: {\n      get: () => any;\n      set?: (val: any) => void;\n    };\n  }\n) {\n  this.type = type;\n  this.displayName = displayName;\n  extraAccessors && Object.defineProperties(this, extraAccessors);\n};\n\nTNodeCtor.prototype = prototype as any;\n\nexport default TNodeCtor;\n"]},"metadata":{},"sourceType":"script"}