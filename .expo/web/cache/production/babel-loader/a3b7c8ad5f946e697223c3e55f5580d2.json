{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"mask\",\"type\",\"options\",\"defaultValue\",\"onChangeText\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useEffect,useState,forwardRef}from'react';import TextInput from\"react-native-web/dist/exports/TextInput\";import{mask,unMask}from\"../utils/mask\";export var MaskedTextInputComponent=function MaskedTextInputComponent(_ref,ref){var _ref$mask=_ref.mask,pattern=_ref$mask===void 0?'':_ref$mask,_ref$type=_ref.type,type=_ref$type===void 0?'custom':_ref$type,_ref$options=_ref.options,options=_ref$options===void 0?{}:_ref$options,defaultValue=_ref.defaultValue,onChangeText=_ref.onChangeText,rest=_objectWithoutProperties(_ref,_excluded);var defaultValueCustom=defaultValue||'';var defaultValueCurrency=defaultValue||'0';var initialMaskedValue=type==='currency'?mask(defaultValueCurrency,pattern,type,options):mask(defaultValueCustom,pattern,type,options);var initialUnMaskedValue=type==='currency'?unMask(defaultValueCurrency,type):unMask(defaultValueCustom,type);var _useState=useState(initialMaskedValue),_useState2=_slicedToArray(_useState,2),maskedValue=_useState2[0],setMaskedValue=_useState2[1];var _useState3=useState(initialUnMaskedValue),_useState4=_slicedToArray(_useState3,2),unMaskedValue=_useState4[0],setUnmaskedValue=_useState4[1];function onChange(value){var newUnMaskedValue=unMask(value,type);var newMaskedValue=mask(newUnMaskedValue,pattern,type,options);setMaskedValue(newMaskedValue);setUnmaskedValue(newUnMaskedValue);}useEffect(function(){onChangeText(maskedValue,unMaskedValue);},[maskedValue,unMaskedValue]);return React.createElement(TextInput,_extends({onChangeText:function onChangeText(value){return onChange(value);},ref:ref},rest,{value:maskedValue}));};export var MaskedTextInput=forwardRef(MaskedTextInputComponent);","map":{"version":3,"sources":["MaskedTextInput.tsx"],"names":["MaskedTextInputComponent","mask","pattern","type","options","rest","defaultValueCustom","defaultValue","defaultValueCurrency","initialMaskedValue","initialUnMaskedValue","unMask","useState","newUnMaskedValue","newMaskedValue","setMaskedValue","setUnmaskedValue","useEffect","onChangeText","value","onChange","ref","maskedValue","MaskedTextInput","forwardRef"],"mappings":"mfAAA,MAAA,CAAA,KAAA,EAAA,SAAA,CAAA,QAAA,CAAA,UAAA,KAAA,OAAA,C,+DAOA,OAAA,IAAA,CAAA,MAAA,qBAaA,MAAO,IAAMA,CAAAA,wBAGZ,CAAG,QAHSA,CAAAA,wBAGT,CAAA,IAAA,CAAA,GAAA,CAUc,CAThB,cASgB,IAThB,CACEC,IADF,CACQC,OADR,oBAAA,EAAA,qBASgB,IAThB,CAEEC,IAFF,CAEEA,IAFF,oBAAA,QAAA,wBASgB,IAThB,CAGEC,OAHF,CAGEA,OAHF,uBAAA,EAAA,cAAA,YAAA,CASgB,IAThB,CAAA,YAAA,CAAA,YAAA,CASgB,IAThB,CAAA,YAAA,CAMKC,IANL,0BASgB,IAThB,YAUA,GAAMC,CAAAA,kBAAkB,CAAGC,YAAY,EAAvC,EAAA,CACA,GAAMC,CAAAA,oBAAoB,CAAGD,YAAY,EAAzC,GAAA,CAEA,GAAME,CAAAA,kBAAkB,CAAMN,IAAI,GAAJA,UAAAA,CACxBF,IAAI,CAAA,oBAAA,CAAA,OAAA,CAAA,IAAA,CADoBE,OACpB,CADoBA,CAExBF,IAAI,CAAA,kBAAA,CAAA,OAAA,CAAA,IAAA,CAFV,OAEU,CAFV,CAIA,GAAMS,CAAAA,oBAAoB,CAAMP,IAAI,GAAJA,UAAAA,CAC1BQ,MAAM,CAAA,oBAAA,CADoBR,IACpB,CADoBA,CAE1BQ,MAAM,CAAA,kBAAA,CAFZ,IAEY,CAFZ,CAIA,cAAsCC,QAAQ,CAA9C,kBAA8C,CAA9C,wCAAM,WAAN,eAAM,cAAN,eACA,eAA0CA,QAAQ,CAAlD,oBAAkD,CAAlD,yCAAM,aAAN,eAAM,gBAAN,eAEA,QAAA,CAAA,QAAA,CAAA,KAAA,CAAiC,CAC/B,GAAMC,CAAAA,gBAAgB,CAAGF,MAAM,CAAA,KAAA,CAA/B,IAA+B,CAA/B,CACA,GAAMG,CAAAA,cAAc,CAAGb,IAAI,CAAA,gBAAA,CAAA,OAAA,CAAA,IAAA,CAA3B,OAA2B,CAA3B,CAEAc,cAAc,CAAdA,cAAc,CAAdA,CACAC,gBAAgB,CAAhBA,gBAAgB,CAAhBA,CACD,CAEDC,SAAS,CAAC,UAAM,CACdC,YAAY,CAAA,WAAA,CAAZA,aAAY,CAAZA,CADO,CAAA,CAEN,CAAA,WAAA,CAFHD,aAEG,CAFM,CAATA,CAIA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACE,YAAY,CAAGE,sBAAAA,KAAD,QAAWC,CAAAA,QAAQ,CADnC,KACmC,CAAnB,EADhB,CAEE,GAAG,CAAEC,GAFP,CAAA,CAAA,IAAA,CAAA,CAIE,KAAK,CAAEC,WAJT,CAAA,CAAA,CADF,CAxCK,CAAA,CAkDP,MAAO,IAAMC,CAAAA,eAAe,CAAGC,UAAU,CAAlC,wBAAkC,CAAlC","sourcesContent":["import React, {\n  useEffect,\n  useState,\n  forwardRef,\n  ForwardRefRenderFunction,\n} from 'react'\nimport { TextInput, TextInputProps } from 'react-native'\nimport { mask, unMask } from '../utils/mask'\nimport type { MaskOptions } from '../@types/MaskOptions'\n\ntype TIProps = Omit<TextInputProps, 'onChangeText'>\n\nexport interface MaskedTextInputProps extends TIProps {\n  mask?: string\n  type?: 'custom' | 'currency'\n  options?: MaskOptions\n  defaultValue?: string\n  onChangeText: (text: string, rawText: string) => void\n}\n\nexport const MaskedTextInputComponent: ForwardRefRenderFunction<\n  TextInput,\n  MaskedTextInputProps\n> = (\n  {\n    mask: pattern = '',\n    type = 'custom',\n    options = {} as MaskOptions,\n    defaultValue,\n    onChangeText,\n    ...rest\n  },\n  ref\n): JSX.Element => {\n  const defaultValueCustom = defaultValue || ''\n  const defaultValueCurrency = defaultValue || '0'\n\n  const initialMaskedValue =    type === 'currency'\n      ? mask(defaultValueCurrency, pattern, type, options)\n      : mask(defaultValueCustom, pattern, type, options);\n\n  const initialUnMaskedValue =    type === 'currency'\n      ? unMask(defaultValueCurrency, type)\n      : unMask(defaultValueCustom, type);\n\n  const [maskedValue, setMaskedValue] = useState(initialMaskedValue);\n  const [unMaskedValue, setUnmaskedValue] = useState(initialUnMaskedValue);\n\n  function onChange(value: string) {\n    const newUnMaskedValue = unMask(value, type);\n    const newMaskedValue = mask(newUnMaskedValue, pattern, type, options);\n\n    setMaskedValue(newMaskedValue);\n    setUnmaskedValue(newUnMaskedValue);\n  }\n\n  useEffect(() => {\n    onChangeText(maskedValue, unMaskedValue);\n  }, [maskedValue, unMaskedValue]);\n\n  return (\n    <TextInput\n      onChangeText={(value) => onChange(value)}\n      ref={ref}\n      {...rest}\n      value={maskedValue}\n    />\n  );\n};\n\nexport const MaskedTextInput = forwardRef(MaskedTextInputComponent);\n"]},"metadata":{},"sourceType":"module"}